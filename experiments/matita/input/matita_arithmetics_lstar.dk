(; This file was automatically generated from Matita. ;)

def ltransitive :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            (__ : cic.Univ (cic.type cic.z) =>
             matita_basics_relations.predicate
               (cic.lift (cic.type cic.z) (cic.type cic.z) __))
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     (__1 : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation
                        (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z)
             matita_arithmetics_nat.nat
             (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              (__1 : cic.Univ (cic.type cic.z) =>
               matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                (cic.lift (cic.type cic.z) (cic.type cic.z) B))) =>
      cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
        (l1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.prod (cic.type cic.z) cic.prop B
           (b1 : cic.Term (cic.type cic.z) B =>
            cic.prod (cic.type cic.z) cic.prop B
              (b : cic.Term (cic.type cic.z) B =>
               cic.prod cic.prop cic.prop (R l1 b1 b)
                 (__ : cic.Term cic.prop (R l1 b1 b) =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (l2 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) cic.prop B
                       (b2 : cic.Term (cic.type cic.z) B =>
                        cic.prod cic.prop cic.prop (R l2 b b2)
                          (__1 : cic.Term cic.prop (R l2 b b2) =>
                           R (matita_arithmetics_nat.plus l1 l2) b1 b2))))))).

def inv_ltransitive :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            (__ : cic.Univ (cic.type cic.z) =>
             matita_basics_relations.predicate
               (cic.lift (cic.type cic.z) (cic.type cic.z) __))
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     (__1 : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation
                        (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z)
             matita_arithmetics_nat.nat
             (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              (__1 : cic.Univ (cic.type cic.z) =>
               matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                (cic.lift (cic.type cic.z) (cic.type cic.z) B))) =>
      cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
        (l1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (l2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop B
              (b1 : cic.Term (cic.type cic.z) B =>
               cic.prod (cic.type cic.z) cic.prop B
                 (b2 : cic.Term (cic.type cic.z) B =>
                  cic.prod cic.prop cic.prop
                    (R (matita_arithmetics_nat.plus l1 l2) b1 b2)
                    (__ :
                       cic.Term cic.prop
                         (R (matita_arithmetics_nat.plus l1 l2) b1 b2) =>
                     (A : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z) A
                             (__1 : cic.Term (cic.type cic.z) A =>
                              cic.univ cic.prop)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z) A
                             (__1 : cic.Term (cic.type cic.z) A =>
                              cic.univ cic.prop)) =>
                      matita_basics_logic.ex2
                        (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (b : cic.Term (cic.type cic.z) B =>
                        cic.lift cic.prop cic.prop (R l1 b1 b))
                       (b : cic.Term (cic.type cic.z) B =>
                        cic.lift cic.prop cic.prop (R l2 b b2))))))).

lstar :
  cic.Term (cic.type (cic.s cic.z))
    (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
       (cic.univ (cic.type cic.z))
       (B : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B))
          (_R :
             cic.Term (cic.type cic.z)
               ((__ : cic.Univ (cic.type cic.z) =>
                 matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                  (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
           cic.prod (cic.type cic.z) (cic.type cic.z)
             matita_arithmetics_nat.nat
             (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              (__1 : cic.Univ (cic.type cic.z) =>
               matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                (cic.lift (cic.type cic.z) (cic.type cic.z) B))))).

lstar_O :
  cic.Term cic.prop
    (cic.prod (cic.type (cic.s cic.z)) cic.prop (cic.univ (cic.type cic.z))
       (B : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) cic.prop
          (matita_basics_relations.relation
             (cic.lift (cic.type cic.z) (cic.type cic.z) B))
          (R :
             cic.Term (cic.type cic.z)
               (matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
           cic.prod (cic.type cic.z) cic.prop B
             (b : cic.Term (cic.type cic.z) B =>
              matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B) R
                matita_arithmetics_nat.O b b)))).

lstar_S :
  cic.Term cic.prop
    (cic.prod (cic.type (cic.s cic.z)) cic.prop (cic.univ (cic.type cic.z))
       (B : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) cic.prop
          (matita_basics_relations.relation
             (cic.lift (cic.type cic.z) (cic.type cic.z) B))
          (R :
             cic.Term (cic.type cic.z)
               (matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
           cic.prod (cic.type cic.z) cic.prop B
             (b1 : cic.Term (cic.type cic.z) B =>
              cic.prod (cic.type cic.z) cic.prop B
                (b : cic.Term (cic.type cic.z) B =>
                 cic.prod cic.prop cic.prop (R b1 b)
                   (__ : cic.Term cic.prop (R b1 b) =>
                    cic.prod (cic.type cic.z) cic.prop
                      matita_arithmetics_nat.nat
                      (l :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       cic.prod (cic.type cic.z) cic.prop B
                         (b2 : cic.Term (cic.type cic.z) B =>
                          cic.prod cic.prop cic.prop
                            (matita_arithmetics_lstar.lstar
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               R l b b2)
                            (__1 :
                               cic.Term cic.prop
                                 (matita_arithmetics_lstar.lstar
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) B)
                                    R l b b2) =>
                             matita_arithmetics_lstar.lstar
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               R
                               (matita_arithmetics_nat.plus l
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               b1 b2))))))))).

def match_lstar_Prop :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) (cic.type cic.z) B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z) (cic.type cic.z) B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop (cic.type cic.z)
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ cic.prop)))))
                 (return_type :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z) (cic.type cic.z) B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z) (cic.type cic.z) B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop (cic.type cic.z)
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ cic.prop))))) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_O :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod cic.prop cic.prop
                       (cic.prod (cic.type cic.z) cic.prop B
                          (b1 : cic.Term (cic.type cic.z) B =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (b : cic.Term (cic.type cic.z) B =>
                              cic.prod cic.prop cic.prop (_R b1 b)
                                (__ : cic.Term cic.prop (_R b1 b) =>
                                 cic.prod (cic.type cic.z) cic.prop
                                   matita_arithmetics_nat.nat
                                   (l :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.prod (cic.type cic.z) cic.prop B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop cic.prop
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            _R l b b2)
                                         (__1 :
                                            cic.Term cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R b1 b __ l b2 __1))))))))
                       (case_lstar_S :
                          cic.Term cic.prop
                            (cic.prod (cic.type cic.z) cic.prop B
                               (b1 : cic.Term (cic.type cic.z) B =>
                                cic.prod (cic.type cic.z) cic.prop B
                                  (b : cic.Term (cic.type cic.z) B =>
                                   cic.prod cic.prop cic.prop (_R b1 b)
                                     (__ : cic.Term cic.prop (_R b1 b) =>
                                      cic.prod (cic.type cic.z) cic.prop
                                        matita_arithmetics_nat.nat
                                        (l :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         cic.prod (cic.type cic.z) cic.prop B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2)
                                              (__1 :
                                                 cic.Term cic.prop
                                                   (matita_arithmetics_lstar.lstar
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) B)
                                                      _R l b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R b1 b __ l b2 __1)))))))) =>
                        cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop cic.prop
                                   (matita_arithmetics_lstar.lstar
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_O, case_lstar_S, b ]
  match_lstar_Prop B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_O B _R b) -->
  case_lstar_O b.

[ B, _R, return_type, case_lstar_O, case_lstar_S, b1, b, __, l, b2, __1 ]
  match_lstar_Prop B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_S B _R b1 b __ l b2 __1) -->
  case_lstar_S b1 b __ l b2 __1.

def match_lstar_Type5 :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z)
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop
                             (cic.type
                                (cic.s
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))))))))
                 (return_type :
                    cic.Term
                      (cic.type
                         (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                            B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))))))) =>
                  cic.prod
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_O :
                       cic.Term
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.prod (cic.type cic.z)
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          B
                          (b1 : cic.Term (cic.type cic.z) B =>
                           cic.prod (cic.type cic.z)
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             B
                             (b : cic.Term (cic.type cic.z) B =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                (_R b1 b)
                                (__ : cic.Term cic.prop (_R b1 b) =>
                                 cic.prod (cic.type cic.z)
                                   (cic.type
                                      (cic.s
                                         (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                   matita_arithmetics_nat.nat
                                   (l :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type
                                         (cic.s
                                            (cic.s
                                               (cic.s (cic.s (cic.s cic.z))))))
                                      B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop
                                         (cic.type
                                            (cic.s
                                               (cic.s
                                                  (cic.s
                                                     (cic.s (cic.s cic.z))))))
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            _R l b b2)
                                         (__1 :
                                            cic.Term cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R b1 b __ l b2 __1))))))))
                       (case_lstar_S :
                          cic.Term
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            (cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               B
                               (b1 : cic.Term (cic.type cic.z) B =>
                                cic.prod (cic.type cic.z)
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  B
                                  (b : cic.Term (cic.type cic.z) B =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     (_R b1 b)
                                     (__ : cic.Term cic.prop (_R b1 b) =>
                                      cic.prod (cic.type cic.z)
                                        (cic.type
                                           (cic.s
                                              (cic.s
                                                 (cic.s (cic.s (cic.s cic.z))))))
                                        matita_arithmetics_nat.nat
                                        (l :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type
                                              (cic.s
                                                 (cic.s
                                                    (cic.s
                                                       (cic.s (cic.s cic.z))))))
                                           B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type
                                                 (cic.s
                                                    (cic.s
                                                       (cic.s
                                                          (cic.s
                                                             (cic.s cic.z))))))
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2)
                                              (__1 :
                                                 cic.Term cic.prop
                                                   (matita_arithmetics_lstar.lstar
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) B)
                                                      _R l b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R b1 b __ l b2 __1)))))))) =>
                        cic.prod (cic.type cic.z)
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type
                                      (cic.s
                                         (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                   (matita_arithmetics_lstar.lstar
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_O, case_lstar_S, b ]
  match_lstar_Type5 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_O B _R b) -->
  case_lstar_O b.

[ B, _R, return_type, case_lstar_O, case_lstar_S, b1, b, __, l, b2, __1 ]
  match_lstar_Type5 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_S B _R b1 b __ l b2 __1) -->
  case_lstar_S b1 b __ l b2 __1.

def match_lstar_Type4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z)
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z))))))))))
                 (return_type :
                    cic.Term
                      (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_O :
                       cic.Term
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) B
                          (b1 : cic.Term (cic.type cic.z) B =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             B
                             (b : cic.Term (cic.type cic.z) B =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (_R b1 b)
                                (__ : cic.Term cic.prop (_R b1 b) =>
                                 cic.prod (cic.type cic.z)
                                   (cic.type
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                   matita_arithmetics_nat.nat
                                   (l :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type
                                         (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                      B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop
                                         (cic.type
                                            (cic.s
                                               (cic.s (cic.s (cic.s cic.z)))))
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            _R l b b2)
                                         (__1 :
                                            cic.Term cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R b1 b __ l b2 __1))))))))
                       (case_lstar_S :
                          cic.Term
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            (cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               B
                               (b1 : cic.Term (cic.type cic.z) B =>
                                cic.prod (cic.type cic.z)
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  B
                                  (b : cic.Term (cic.type cic.z) B =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     (_R b1 b)
                                     (__ : cic.Term cic.prop (_R b1 b) =>
                                      cic.prod (cic.type cic.z)
                                        (cic.type
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))
                                        matita_arithmetics_nat.nat
                                        (l :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type
                                              (cic.s
                                                 (cic.s (cic.s (cic.s cic.z)))))
                                           B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type
                                                 (cic.s
                                                    (cic.s
                                                       (cic.s (cic.s cic.z)))))
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2)
                                              (__1 :
                                                 cic.Term cic.prop
                                                   (matita_arithmetics_lstar.lstar
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) B)
                                                      _R l b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R b1 b __ l b2 __1)))))))) =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                   (matita_arithmetics_lstar.lstar
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_O, case_lstar_S, b ]
  match_lstar_Type4 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_O B _R b) -->
  case_lstar_O b.

[ B, _R, return_type, case_lstar_O, case_lstar_S, b1, b, __, l, b2, __1 ]
  match_lstar_Type4 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_S B _R b1 b __ l b2 __1) -->
  case_lstar_S b1 b __ l b2 __1.

def match_lstar_Type3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type (cic.s (cic.s (cic.s cic.z)))))))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_O :
                       cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                          (b1 : cic.Term (cic.type cic.z) B =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                             (b : cic.Term (cic.type cic.z) B =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (_R b1 b)
                                (__ : cic.Term cic.prop (_R b1 b) =>
                                 cic.prod (cic.type cic.z)
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   matita_arithmetics_nat.nat
                                   (l :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop
                                         (cic.type
                                            (cic.s (cic.s (cic.s cic.z))))
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            _R l b b2)
                                         (__1 :
                                            cic.Term cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R b1 b __ l b2 __1))))))))
                       (case_lstar_S :
                          cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                               (b1 : cic.Term (cic.type cic.z) B =>
                                cic.prod (cic.type cic.z)
                                  (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                                  (b : cic.Term (cic.type cic.z) B =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (_R b1 b)
                                     (__ : cic.Term cic.prop (_R b1 b) =>
                                      cic.prod (cic.type cic.z)
                                        (cic.type
                                           (cic.s (cic.s (cic.s cic.z))))
                                        matita_arithmetics_nat.nat
                                        (l :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type
                                              (cic.s (cic.s (cic.s cic.z))))
                                           B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type
                                                 (cic.s (cic.s (cic.s cic.z))))
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2)
                                              (__1 :
                                                 cic.Term cic.prop
                                                   (matita_arithmetics_lstar.lstar
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) B)
                                                      _R l b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R b1 b __ l b2 __1)))))))) =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (matita_arithmetics_lstar.lstar
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_O, case_lstar_S, b ]
  match_lstar_Type3 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_O B _R b) -->
  case_lstar_O b.

[ B, _R, return_type, case_lstar_O, case_lstar_S, b1, b, __, l, b2, __1 ]
  match_lstar_Type3 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_S B _R b1 b __ l b2 __1) -->
  case_lstar_S b1 b __ l b2 __1.

def match_lstar_Type2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s cic.z)))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type (cic.s (cic.s cic.z))))))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type (cic.s (cic.s cic.z)))))))) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_O :
                       cic.Term (cic.type (cic.s (cic.s cic.z)))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) B
                          (b1 : cic.Term (cic.type cic.z) B =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) B
                             (b : cic.Term (cic.type cic.z) B =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z))) (_R b1 b)
                                (__ : cic.Term cic.prop (_R b1 b) =>
                                 cic.prod (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat
                                   (l :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            _R l b b2)
                                         (__1 :
                                            cic.Term cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R b1 b __ l b2 __1))))))))
                       (case_lstar_S :
                          cic.Term (cic.type (cic.s (cic.s cic.z)))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) B
                               (b1 : cic.Term (cic.type cic.z) B =>
                                cic.prod (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) B
                                  (b : cic.Term (cic.type cic.z) B =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (_R b1 b)
                                     (__ : cic.Term cic.prop (_R b1 b) =>
                                      cic.prod (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat
                                        (l :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z))) B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2)
                                              (__1 :
                                                 cic.Term cic.prop
                                                   (matita_arithmetics_lstar.lstar
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) B)
                                                      _R l b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R b1 b __ l b2 __1)))))))) =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (matita_arithmetics_lstar.lstar
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_O, case_lstar_S, b ]
  match_lstar_Type2 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_O B _R b) -->
  case_lstar_O b.

[ B, _R, return_type, case_lstar_O, case_lstar_S, b1, b, __, l, b2, __1 ]
  match_lstar_Type2 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_S B _R b1 b __ l b2 __1) -->
  case_lstar_S b1 b __ l b2 __1.

def match_lstar_Type1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s cic.z))
                 (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type (cic.s cic.z)))))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type (cic.s cic.z))))))) =>
                  cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                    (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_O :
                       cic.Term (cic.type (cic.s cic.z))
                         (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod (cic.type (cic.s cic.z))
                       (cic.type (cic.s cic.z))
                       (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) B
                          (b1 : cic.Term (cic.type cic.z) B =>
                           cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                             B
                             (b : cic.Term (cic.type cic.z) B =>
                              cic.prod cic.prop (cic.type (cic.s cic.z))
                                (_R b1 b)
                                (__ : cic.Term cic.prop (_R b1 b) =>
                                 cic.prod (cic.type cic.z)
                                   (cic.type (cic.s cic.z))
                                   matita_arithmetics_nat.nat
                                   (l :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop
                                         (cic.type (cic.s cic.z))
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            _R l b b2)
                                         (__1 :
                                            cic.Term cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R b1 b __ l b2 __1))))))))
                       (case_lstar_S :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s cic.z)) B
                               (b1 : cic.Term (cic.type cic.z) B =>
                                cic.prod (cic.type cic.z)
                                  (cic.type (cic.s cic.z)) B
                                  (b : cic.Term (cic.type cic.z) B =>
                                   cic.prod cic.prop (cic.type (cic.s cic.z))
                                     (_R b1 b)
                                     (__ : cic.Term cic.prop (_R b1 b) =>
                                      cic.prod (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        matita_arithmetics_nat.nat
                                        (l :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type (cic.s cic.z)) B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type (cic.s cic.z))
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2)
                                              (__1 :
                                                 cic.Term cic.prop
                                                   (matita_arithmetics_lstar.lstar
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) B)
                                                      _R l b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R b1 b __ l b2 __1)))))))) =>
                        cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                             B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type (cic.s cic.z)) B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop (cic.type (cic.s cic.z))
                                   (matita_arithmetics_lstar.lstar
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_O, case_lstar_S, b ]
  match_lstar_Type1 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_O B _R b) -->
  case_lstar_O b.

[ B, _R, return_type, case_lstar_O, case_lstar_S, b1, b, __, l, b2, __1 ]
  match_lstar_Type1 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_S B _R b1 b __ l b2 __1) -->
  case_lstar_S b1 b __ l b2 __1.

def match_lstar_Type0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type cic.z))))))
                 (return_type :
                    cic.Term (cic.type (cic.s cic.z))
                      (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type (cic.s cic.z)) B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type cic.z)))))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_O :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z) B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z) B
                          (b1 : cic.Term (cic.type cic.z) B =>
                           cic.prod (cic.type cic.z) (cic.type cic.z) B
                             (b : cic.Term (cic.type cic.z) B =>
                              cic.prod cic.prop (cic.type cic.z) (_R b1 b)
                                (__ : cic.Term cic.prop (_R b1 b) =>
                                 cic.prod (cic.type cic.z) (cic.type cic.z)
                                   matita_arithmetics_nat.nat
                                   (l :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type cic.z) B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop (cic.type cic.z)
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            _R l b b2)
                                         (__1 :
                                            cic.Term cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R b1 b __ l b2 __1))))))))
                       (case_lstar_S :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z) B
                               (b1 : cic.Term (cic.type cic.z) B =>
                                cic.prod (cic.type cic.z) (cic.type cic.z) B
                                  (b : cic.Term (cic.type cic.z) B =>
                                   cic.prod cic.prop (cic.type cic.z)
                                     (_R b1 b)
                                     (__ : cic.Term cic.prop (_R b1 b) =>
                                      cic.prod (cic.type cic.z)
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat
                                        (l :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type cic.z) B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type cic.z)
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 _R l b b2)
                                              (__1 :
                                                 cic.Term cic.prop
                                                   (matita_arithmetics_lstar.lstar
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) B)
                                                      _R l b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R b1 b __ l b2 __1)))))))) =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) (cic.type cic.z) B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) (cic.type cic.z) B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop (cic.type cic.z)
                                   (matita_arithmetics_lstar.lstar
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_O, case_lstar_S, b ]
  match_lstar_Type0 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_O B _R b) -->
  case_lstar_O b.

[ B, _R, return_type, case_lstar_O, case_lstar_S, b1, b, __, l, b2, __1 ]
  match_lstar_Type0 B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_S B _R b1 b __ l b2 __1) -->
  case_lstar_S b1 b __ l b2 __1.

def filter_lstar_Prop :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) cic.prop B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z) cic.prop
                          (cic.prod cic.prop (cic.type cic.z)
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ cic.prop))
                          (return_type :
                             cic.Term (cic.type cic.z)
                               (cic.prod cic.prop (cic.type cic.z)
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ cic.prop)) =>
                           cic.prod cic.prop cic.prop
                             (cic.prod cic.prop cic.prop
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term cic.prop
                                  (cic.prod cic.prop cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop cic.prop
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_Prop (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, b1, b, __, l, b2, __1, return_type, return ]
  filter_lstar_Prop (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_S B R b1 b __ l b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b1 b __ l b2 __1).

def filter_lstar_Type5 :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z)
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.prod cic.prop
                             (cic.type
                                (cic.s
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))))
                          (return_type :
                             cic.Term
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))))) =>
                           cic.prod
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.prod cic.prop
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.prod cic.prop
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_Type5 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, b1, b, __, l, b2, __1, return_type, return ]
  filter_lstar_Type5 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_S B R b1 b __ l b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b1 b __ l b2 __1).

def filter_lstar_Type4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          (return_type :
                             cic.Term
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
                           cic.prod
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.prod cic.prop
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_Type4 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, b1, b, __, l, b2, __1, return_type, return ]
  filter_lstar_Type4 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_S B R b1 b __ l b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b1 b __ l b2 __1).

def filter_lstar_Type3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type (cic.s (cic.s (cic.s cic.z))))))
                          (return_type :
                             cic.Term
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
                           cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.prod cic.prop
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_Type3 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, b1, b, __, l, b2, __1, return_type, return ]
  filter_lstar_Type3 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_S B R b1 b __ l b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b1 b __ l b2 __1).

def filter_lstar_Type2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type (cic.s (cic.s cic.z)))))
                          (return_type :
                             cic.Term
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
                           cic.prod (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term (cic.type (cic.s (cic.s cic.z)))
                                  (cic.prod cic.prop
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_Type2 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, b1, b, __, l, b2, __1, return_type, return ]
  filter_lstar_Type2 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_S B R b1 b __ l b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b1 b __ l b2 __1).

def filter_lstar_Type1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s cic.z))
                          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type (cic.s cic.z))))
                          (return_type :
                             cic.Term (cic.type (cic.s (cic.s cic.z)))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type (cic.s cic.z)))) =>
                           cic.prod (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z))
                             (cic.prod cic.prop (cic.type (cic.s cic.z))
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term (cic.type (cic.s cic.z))
                                  (cic.prod cic.prop (cic.type (cic.s cic.z))
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop (cic.type (cic.s cic.z))
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_Type1 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, b1, b, __, l, b2, __1, return_type, return ]
  filter_lstar_Type1 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_S B R b1 b __ l b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b1 b __ l b2 __1).

def filter_lstar_Type0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                          (cic.prod cic.prop (cic.type (cic.s cic.z))
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type cic.z)))
                          (return_type :
                             cic.Term (cic.type (cic.s cic.z))
                               (cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type cic.z))) =>
                           cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.prod cic.prop (cic.type cic.z)
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term (cic.type cic.z)
                                  (cic.prod cic.prop (cic.type cic.z)
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop (cic.type cic.z)
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_Type0 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, b1, b, __, l, b2, __1, return_type, return ]
  filter_lstar_Type0 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_S B R b1 b __ l b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b1 b __ l b2 __1).

def match_lstar :
      return_sort : cic.Sort ->
      B : cic.Univ (cic.type cic.z) ->
      _R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) ->
      return_type :
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
         __1 : cic.Term (cic.type cic.z) B ->
         __2 : cic.Term (cic.type cic.z) B ->
         z :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R __ __1 __2) ->
         cic.Univ return_sort) ->
      case_lstar_O :
        (b : cic.Term (cic.type cic.z) B ->
         cic.Term return_sort
           (return_type matita_arithmetics_nat.O b b
              (matita_arithmetics_lstar.lstar_O
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R b))) ->
      case_lstar_S :
        (b1 : cic.Term (cic.type cic.z) B ->
         b : cic.Term (cic.type cic.z) B ->
         __ : cic.Term cic.prop (_R b1 b) ->
         l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
         b2 : cic.Term (cic.type cic.z) B ->
         __1 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R l b b2) ->
         cic.Term return_sort
           (return_type
              (matita_arithmetics_nat.plus l
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              b1 b2
              (matita_arithmetics_lstar.lstar_S
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R b1 b __ l
                 b2 __1))) ->
      __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      __1 : cic.Term (cic.type cic.z) B ->
      __2 : cic.Term (cic.type cic.z) B ->
      z :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R __ __1 __2) ->
      cic.Term return_sort (return_type __ __1 __2 z).

[  ] match_lstar cic.prop --> matita_arithmetics_lstar.match_lstar_Prop.

[  ] match_lstar (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) -->
  matita_arithmetics_lstar.match_lstar_Type5.

[  ] match_lstar (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) -->
  matita_arithmetics_lstar.match_lstar_Type4.

[  ] match_lstar (cic.type (cic.s (cic.s (cic.s cic.z)))) -->
  matita_arithmetics_lstar.match_lstar_Type3.

[  ] match_lstar (cic.type (cic.s (cic.s cic.z))) -->
  matita_arithmetics_lstar.match_lstar_Type2.

[  ] match_lstar (cic.type (cic.s cic.z)) -->
  matita_arithmetics_lstar.match_lstar_Type1.

[  ] match_lstar (cic.type cic.z) -->
  matita_arithmetics_lstar.match_lstar_Type0.

[ return_sort, B, _R, return_type, case_lstar_O, case_lstar_S, b ]
  match_lstar return_sort B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_O B _R b) -->
  case_lstar_O b.

[ return_sort, B, _R, return_type, case_lstar_O, case_lstar_S, b1, b, __, l,
  b2, __1 ]
  match_lstar return_sort B _R return_type case_lstar_O case_lstar_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_S B _R b1 b __ l b2 __1) -->
  case_lstar_S b1 b __ l b2 __1.

def filter_lstar :
      return_sort : cic.Sort ->
      B : cic.Univ (cic.type cic.z) ->
      _R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) ->
      __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      __1 : cic.Term (cic.type cic.z) B ->
      __2 : cic.Term (cic.type cic.z) B ->
      return_type :
        (z :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R __ __1 __2) ->
         cic.Univ return_sort) ->
      return :
        (z :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R __ __1 __2) ->
         cic.Term return_sort (return_type z)) ->
      z :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R __ __1 __2) ->
      cic.Term return_sort (return_type z).

[  ] filter_lstar cic.prop --> matita_arithmetics_lstar.filter_lstar_Prop.

[  ]
  filter_lstar (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) -->
  matita_arithmetics_lstar.filter_lstar_Type5.

[  ] filter_lstar (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) -->
  matita_arithmetics_lstar.filter_lstar_Type4.

[  ] filter_lstar (cic.type (cic.s (cic.s (cic.s cic.z)))) -->
  matita_arithmetics_lstar.filter_lstar_Type3.

[  ] filter_lstar (cic.type (cic.s (cic.s cic.z))) -->
  matita_arithmetics_lstar.filter_lstar_Type2.

[  ] filter_lstar (cic.type (cic.s cic.z)) -->
  matita_arithmetics_lstar.filter_lstar_Type1.

[  ] filter_lstar (cic.type cic.z) -->
  matita_arithmetics_lstar.filter_lstar_Type0.

[ return_sort1, B, R, b, return_type, return ]
  filter_lstar return_sort1 (B) (R) (matita_arithmetics_nat.O) (b) (b)
    return_type return (matita_arithmetics_lstar.lstar_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ return_sort1, B, R, b1, b, __, l, b2, __1, return_type, return ]
  filter_lstar return_sort1 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_S B R b1 b __ l b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b1 b __ l b2 __1).

def lstar_ind :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat
                    (x_1233 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) (cic.type cic.z) B
                       (x_1232 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z) (cic.type cic.z) B
                          (x_1231 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop (cic.type cic.z)
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (__ : cic.Term (cic.type cic.z) B =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 _R __ __1)
                                x_1233 x_1232 x_1231)
                             (_x_1234 :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1233 x_1232 x_1231) =>
                              cic.univ cic.prop)))))
                 (Q_ :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         matita_arithmetics_nat.nat
                         (x_1233 :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z) (cic.type cic.z) B
                            (x_1232 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z) (cic.type cic.z) B
                               (x_1231 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop (cic.type cic.z)
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1233 x_1232 x_1231)
                                  (_x_1234 :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          (__ :
                                             cic.Term (cic.type cic.z) B =>
                                           __1 :
                                             cic.Term (cic.type cic.z) B =>
                                           _R __ __1)
                                          x_1233 x_1232 x_1231) =>
                                   cic.univ cic.prop))))) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop B
                       (b : cic.Term (cic.type cic.z) B =>
                        (x_1233 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         x_1232 : cic.Term (cic.type cic.z) B =>
                         x_1231 : cic.Term (cic.type cic.z) B =>
                         _x_1234 :
                           cic.Term cic.prop
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (__ : cic.Term (cic.type cic.z) B =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 _R __ __1)
                                x_1233 x_1232 x_1231) =>
                         Q_ x_1233 x_1232 x_1231 _x_1234)
                          matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => _R __ __1)
                             b)))
                    (_H_lstar_O :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop B
                            (b : cic.Term (cic.type cic.z) B =>
                             (x_1233 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              x_1232 : cic.Term (cic.type cic.z) B =>
                              x_1231 : cic.Term (cic.type cic.z) B =>
                              _x_1234 :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1233 x_1232 x_1231) =>
                              Q_ x_1233 x_1232 x_1231 _x_1234)
                               matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__ : cic.Term (cic.type cic.z) B =>
                                   __1 : cic.Term (cic.type cic.z) B =>
                                   _R __ __1)
                                  b))) =>
                     cic.prod cic.prop cic.prop
                       (cic.prod (cic.type cic.z) cic.prop B
                          (b1 : cic.Term (cic.type cic.z) B =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (b : cic.Term (cic.type cic.z) B =>
                              cic.prod cic.prop cic.prop
                                ((__ : cic.Term (cic.type cic.z) B =>
                                  __1 : cic.Term (cic.type cic.z) B =>
                                  _R __ __1) b1 b)
                                (x_1236 :
                                   cic.Term cic.prop
                                     ((__ : cic.Term (cic.type cic.z) B =>
                                       __1 : cic.Term (cic.type cic.z) B =>
                                       _R __ __1) b1 b) =>
                                 cic.prod (cic.type cic.z) cic.prop
                                   matita_arithmetics_nat.nat
                                   (l :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.prod (cic.type cic.z) cic.prop B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop cic.prop
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            (__ :
                                               cic.Term (cic.type cic.z) B =>
                                             __1 :
                                               cic.Term (cic.type cic.z) B =>
                                             _R __ __1)
                                            l b b2)
                                         (x_1235 :
                                            cic.Term cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  __1 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  _R __ __1)
                                                 l b b2) =>
                                          cic.prod cic.prop cic.prop
                                            ((x_1233 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              x_1232 :
                                                cic.Term (cic.type cic.z) B =>
                                              x_1231 :
                                                cic.Term (cic.type cic.z) B =>
                                              _x_1234 :
                                                cic.Term cic.prop
                                                  (matita_arithmetics_lstar.lstar
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) B)
                                                     (__ :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      __1 :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      _R __ __1)
                                                     x_1233 x_1232 x_1231) =>
                                              Q_ x_1233 x_1232 x_1231 _x_1234)
                                               l b b2 x_1235)
                                            (_x_1238 :
                                               cic.Term cic.prop
                                                 ((x_1233 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1232 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1231 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1234 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1233 x_1232
                                                          x_1231) =>
                                                   Q_ x_1233 x_1232 x_1231
                                                     _x_1234)
                                                    l b b2 x_1235) =>
                                             (x_1233 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              x_1232 :
                                                cic.Term (cic.type cic.z) B =>
                                              x_1231 :
                                                cic.Term (cic.type cic.z) B =>
                                              _x_1234 :
                                                cic.Term cic.prop
                                                  (matita_arithmetics_lstar.lstar
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) B)
                                                     (__ :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      __1 :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      _R __ __1)
                                                     x_1233 x_1232 x_1231) =>
                                              Q_ x_1233 x_1232 x_1231 _x_1234)
                                               (matita_arithmetics_nat.plus l
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               b1 b2
                                               (matita_arithmetics_lstar.lstar_S
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) B)
                                                  (__ :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   __1 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _R __ __1)
                                                  b1 b x_1236 l b2 x_1235)))))))))
                       (_H_lstar_S :
                          cic.Term cic.prop
                            (cic.prod (cic.type cic.z) cic.prop B
                               (b1 : cic.Term (cic.type cic.z) B =>
                                cic.prod (cic.type cic.z) cic.prop B
                                  (b : cic.Term (cic.type cic.z) B =>
                                   cic.prod cic.prop cic.prop
                                     ((__ : cic.Term (cic.type cic.z) B =>
                                       __1 : cic.Term (cic.type cic.z) B =>
                                       _R __ __1) b1 b)
                                     (x_1236 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z) B =>
                                            __1 :
                                              cic.Term (cic.type cic.z) B =>
                                            _R __ __1) b1 b) =>
                                      cic.prod (cic.type cic.z) cic.prop
                                        matita_arithmetics_nat.nat
                                        (l :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         cic.prod (cic.type cic.z) cic.prop B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  __1 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  _R __ __1)
                                                 l b b2)
                                              (x_1235 :
                                                 cic.Term cic.prop
                                                   (matita_arithmetics_lstar.lstar
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) B)
                                                      (__ :
                                                         cic.Term
                                                           (cic.type cic.z) B =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z) B =>
                                                       _R __ __1)
                                                      l b b2) =>
                                               cic.prod cic.prop cic.prop
                                                 ((x_1233 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1232 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1231 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1234 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1233 x_1232
                                                          x_1231) =>
                                                   Q_ x_1233 x_1232 x_1231
                                                     _x_1234)
                                                    l b b2 x_1235)
                                                 (_x_1238 :
                                                    cic.Term cic.prop
                                                      ((x_1233 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        x_1232 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        x_1231 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        _x_1234 :
                                                          cic.Term cic.prop
                                                            (matita_arithmetics_lstar.lstar
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    cic.z)
                                                                  B)
                                                               (__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z) B =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z) B =>
                                                                _R __ __1)
                                                               x_1233 x_1232
                                                               x_1231) =>
                                                        Q_ x_1233 x_1232
                                                          x_1231 _x_1234)
                                                         l b b2 x_1235) =>
                                                  (x_1233 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1232 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1231 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1234 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1233 x_1232
                                                          x_1231) =>
                                                   Q_ x_1233 x_1232 x_1231
                                                     _x_1234)
                                                    (matita_arithmetics_nat.plus
                                                       l
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    b1 b2
                                                    (matita_arithmetics_lstar.lstar_S
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) B)
                                                       (__ :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        __1 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        _R __ __1)
                                                       b1 b x_1236 l b2
                                                       x_1235))))))))) =>
                        cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (x_1233 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (x_1232 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (x_1231 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop cic.prop
                                   (matita_arithmetics_lstar.lstar
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      (__ : cic.Term (cic.type cic.z) B =>
                                       __1 : cic.Term (cic.type cic.z) B =>
                                       _R __ __1)
                                      x_1233 x_1232 x_1231)
                                   (x_1234 :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           (__ :
                                              cic.Term (cic.type cic.z) B =>
                                            __1 :
                                              cic.Term (cic.type cic.z) B =>
                                            _R __ __1)
                                           x_1233 x_1232 x_1231) =>
                                    (x_12331 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     x_12321 : cic.Term (cic.type cic.z) B =>
                                     x_12311 : cic.Term (cic.type cic.z) B =>
                                     _x_1234 :
                                       cic.Term cic.prop
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            (__ :
                                               cic.Term (cic.type cic.z) B =>
                                             __1 :
                                               cic.Term (cic.type cic.z) B =>
                                             _R __ __1)
                                            x_12331 x_12321 x_12311) =>
                                     Q_ x_12331 x_12321 x_12311 _x_1234)
                                      x_1233 x_1232 x_1231 x_1234)))))))))).

def lstar_ind_body :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat
                    (x_1233 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) (cic.type cic.z) B
                       (x_1232 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z) (cic.type cic.z) B
                          (x_1231 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop (cic.type cic.z)
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (__ : cic.Term (cic.type cic.z) B =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 _R __ __1)
                                x_1233 x_1232 x_1231)
                             (_x_1234 :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1233 x_1232 x_1231) =>
                              cic.univ cic.prop)))))
                 (Q_ :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         matita_arithmetics_nat.nat
                         (x_1233 :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z) (cic.type cic.z) B
                            (x_1232 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z) (cic.type cic.z) B
                               (x_1231 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop (cic.type cic.z)
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1233 x_1232 x_1231)
                                  (_x_1234 :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          (__ :
                                             cic.Term (cic.type cic.z) B =>
                                           __1 :
                                             cic.Term (cic.type cic.z) B =>
                                           _R __ __1)
                                          x_1233 x_1232 x_1231) =>
                                   cic.univ cic.prop))))) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop B
                       (b : cic.Term (cic.type cic.z) B =>
                        (x_1233 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         x_1232 : cic.Term (cic.type cic.z) B =>
                         x_1231 : cic.Term (cic.type cic.z) B =>
                         _x_1234 :
                           cic.Term cic.prop
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (__ : cic.Term (cic.type cic.z) B =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 _R __ __1)
                                x_1233 x_1232 x_1231) =>
                         Q_ x_1233 x_1232 x_1231 _x_1234)
                          matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => _R __ __1)
                             b)))
                    (_H_lstar_O :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop B
                            (b : cic.Term (cic.type cic.z) B =>
                             (x_1233 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              x_1232 : cic.Term (cic.type cic.z) B =>
                              x_1231 : cic.Term (cic.type cic.z) B =>
                              _x_1234 :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1233 x_1232 x_1231) =>
                              Q_ x_1233 x_1232 x_1231 _x_1234)
                               matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__ : cic.Term (cic.type cic.z) B =>
                                   __1 : cic.Term (cic.type cic.z) B =>
                                   _R __ __1)
                                  b))) =>
                     cic.prod cic.prop cic.prop
                       (cic.prod (cic.type cic.z) cic.prop B
                          (b1 : cic.Term (cic.type cic.z) B =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (b : cic.Term (cic.type cic.z) B =>
                              cic.prod cic.prop cic.prop
                                ((__ : cic.Term (cic.type cic.z) B =>
                                  __1 : cic.Term (cic.type cic.z) B =>
                                  _R __ __1) b1 b)
                                (x_1236 :
                                   cic.Term cic.prop
                                     ((__ : cic.Term (cic.type cic.z) B =>
                                       __1 : cic.Term (cic.type cic.z) B =>
                                       _R __ __1) b1 b) =>
                                 cic.prod (cic.type cic.z) cic.prop
                                   matita_arithmetics_nat.nat
                                   (l :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.prod (cic.type cic.z) cic.prop B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop cic.prop
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            (__ :
                                               cic.Term (cic.type cic.z) B =>
                                             __1 :
                                               cic.Term (cic.type cic.z) B =>
                                             _R __ __1)
                                            l b b2)
                                         (x_1235 :
                                            cic.Term cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  __1 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  _R __ __1)
                                                 l b b2) =>
                                          cic.prod cic.prop cic.prop
                                            ((x_1233 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              x_1232 :
                                                cic.Term (cic.type cic.z) B =>
                                              x_1231 :
                                                cic.Term (cic.type cic.z) B =>
                                              _x_1234 :
                                                cic.Term cic.prop
                                                  (matita_arithmetics_lstar.lstar
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) B)
                                                     (__ :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      __1 :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      _R __ __1)
                                                     x_1233 x_1232 x_1231) =>
                                              Q_ x_1233 x_1232 x_1231 _x_1234)
                                               l b b2 x_1235)
                                            (_x_1238 :
                                               cic.Term cic.prop
                                                 ((x_1233 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1232 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1231 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1234 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1233 x_1232
                                                          x_1231) =>
                                                   Q_ x_1233 x_1232 x_1231
                                                     _x_1234)
                                                    l b b2 x_1235) =>
                                             (x_1233 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              x_1232 :
                                                cic.Term (cic.type cic.z) B =>
                                              x_1231 :
                                                cic.Term (cic.type cic.z) B =>
                                              _x_1234 :
                                                cic.Term cic.prop
                                                  (matita_arithmetics_lstar.lstar
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) B)
                                                     (__ :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      __1 :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      _R __ __1)
                                                     x_1233 x_1232 x_1231) =>
                                              Q_ x_1233 x_1232 x_1231 _x_1234)
                                               (matita_arithmetics_nat.plus l
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               b1 b2
                                               (matita_arithmetics_lstar.lstar_S
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) B)
                                                  (__ :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   __1 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _R __ __1)
                                                  b1 b x_1236 l b2 x_1235)))))))))
                       (_H_lstar_S :
                          cic.Term cic.prop
                            (cic.prod (cic.type cic.z) cic.prop B
                               (b1 : cic.Term (cic.type cic.z) B =>
                                cic.prod (cic.type cic.z) cic.prop B
                                  (b : cic.Term (cic.type cic.z) B =>
                                   cic.prod cic.prop cic.prop
                                     ((__ : cic.Term (cic.type cic.z) B =>
                                       __1 : cic.Term (cic.type cic.z) B =>
                                       _R __ __1) b1 b)
                                     (x_1236 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z) B =>
                                            __1 :
                                              cic.Term (cic.type cic.z) B =>
                                            _R __ __1) b1 b) =>
                                      cic.prod (cic.type cic.z) cic.prop
                                        matita_arithmetics_nat.nat
                                        (l :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         cic.prod (cic.type cic.z) cic.prop B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  __1 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  _R __ __1)
                                                 l b b2)
                                              (x_1235 :
                                                 cic.Term cic.prop
                                                   (matita_arithmetics_lstar.lstar
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) B)
                                                      (__ :
                                                         cic.Term
                                                           (cic.type cic.z) B =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z) B =>
                                                       _R __ __1)
                                                      l b b2) =>
                                               cic.prod cic.prop cic.prop
                                                 ((x_1233 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1232 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1231 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1234 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1233 x_1232
                                                          x_1231) =>
                                                   Q_ x_1233 x_1232 x_1231
                                                     _x_1234)
                                                    l b b2 x_1235)
                                                 (_x_1238 :
                                                    cic.Term cic.prop
                                                      ((x_1233 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        x_1232 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        x_1231 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        _x_1234 :
                                                          cic.Term cic.prop
                                                            (matita_arithmetics_lstar.lstar
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    cic.z)
                                                                  B)
                                                               (__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z) B =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z) B =>
                                                                _R __ __1)
                                                               x_1233 x_1232
                                                               x_1231) =>
                                                        Q_ x_1233 x_1232
                                                          x_1231 _x_1234)
                                                         l b b2 x_1235) =>
                                                  (x_1233 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1232 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1231 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1234 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1233 x_1232
                                                          x_1231) =>
                                                   Q_ x_1233 x_1232 x_1231
                                                     _x_1234)
                                                    (matita_arithmetics_nat.plus
                                                       l
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    b1 b2
                                                    (matita_arithmetics_lstar.lstar_S
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) B)
                                                       (__ :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        __1 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        _R __ __1)
                                                       b1 b x_1236 l b2
                                                       x_1235))))))))) =>
                        cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (x_1233 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (x_1232 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (x_1231 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop cic.prop
                                   (matita_arithmetics_lstar.lstar
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      (__ : cic.Term (cic.type cic.z) B =>
                                       __1 : cic.Term (cic.type cic.z) B =>
                                       _R __ __1)
                                      x_1233 x_1232 x_1231)
                                   (x_1234 :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           (__ :
                                              cic.Term (cic.type cic.z) B =>
                                            __1 :
                                              cic.Term (cic.type cic.z) B =>
                                            _R __ __1)
                                           x_1233 x_1232 x_1231) =>
                                    (x_12331 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     x_12321 : cic.Term (cic.type cic.z) B =>
                                     x_12311 : cic.Term (cic.type cic.z) B =>
                                     _x_1234 :
                                       cic.Term cic.prop
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            (__ :
                                               cic.Term (cic.type cic.z) B =>
                                             __1 :
                                               cic.Term (cic.type cic.z) B =>
                                             _R __ __1)
                                            x_12331 x_12321 x_12311) =>
                                     Q_ x_12331 x_12321 x_12311 _x_1234)
                                      x_1233 x_1232 x_1231 x_1234)))))))))).

[ B, _R, Q_, _H_lstar_O, _H_lstar_S, x_1233, x_1232, x_1231, x_1234 ]
  lstar_ind B _R Q_ _H_lstar_O _H_lstar_S x_1233 x_1232 x_1231 x_1234 -->
  matita_arithmetics_lstar.filter_lstar cic.prop B
    (__ : cic.Term (cic.type cic.z) B =>
     __1 : cic.Term (cic.type cic.z) B => _R __ __1)
    x_1233 x_1232 x_1231
    (x_1234 :
       cic.Term cic.prop
         (matita_arithmetics_lstar.lstar
            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
            (__ : cic.Term (cic.type cic.z) B =>
             __1 : cic.Term (cic.type cic.z) B => _R __ __1)
            x_1233 x_1232 x_1231) =>
     (x_12331 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x_12321 : cic.Term (cic.type cic.z) B =>
      x_12311 : cic.Term (cic.type cic.z) B =>
      _x_1234 :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => _R __ __1)
             x_12331 x_12321 x_12311) =>
      Q_ x_12331 x_12321 x_12311 _x_1234) x_1233 x_1232 x_1231 x_1234)
    (matita_arithmetics_lstar.lstar_ind_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R Q_ _H_lstar_O
       _H_lstar_S x_1233 x_1232 x_1231)
    x_1234.

[ B, _R, Q_, _H_lstar_O, _H_lstar_S, x_1233, x_1232, x_1231, x_1234 ]
  lstar_ind_body B _R Q_ _H_lstar_O _H_lstar_S x_1233 x_1232 x_1231 x_1234 -->
  matita_arithmetics_lstar.match_lstar cic.prop
    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
    (__ : cic.Term (cic.type cic.z) B =>
     __1 : cic.Term (cic.type cic.z) B => _R __ __1)
    (x_12331 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     x_12321 : cic.Term (cic.type cic.z) B =>
     x_12311 : cic.Term (cic.type cic.z) B =>
     _x_1234 :
       cic.Term cic.prop
         (matita_arithmetics_lstar.lstar
            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
            (__ : cic.Term (cic.type cic.z) B =>
             __1 : cic.Term (cic.type cic.z) B => _R __ __1)
            x_12331 x_12321 x_12311) =>
     Q_ x_12331 x_12321 x_12311 _x_1234)
    (b : cic.Term (cic.type cic.z) B => _H_lstar_O b)
    (b1 : cic.Term (cic.type cic.z) B =>
     b : cic.Term (cic.type cic.z) B =>
     x_1236 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) B =>
           __1 : cic.Term (cic.type cic.z) B => _R __ __1) b1 b) =>
     l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     b2 : cic.Term (cic.type cic.z) B =>
     x_1235 :
       cic.Term cic.prop
         (matita_arithmetics_lstar.lstar
            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
            (__ : cic.Term (cic.type cic.z) B =>
             __1 : cic.Term (cic.type cic.z) B => _R __ __1)
            l b b2) =>
     _H_lstar_S b1 b x_1236 l b2 x_1235
       (matita_arithmetics_lstar.lstar_ind
          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
          (__ : cic.Term (cic.type cic.z) B =>
           __1 : cic.Term (cic.type cic.z) B => _R __ __1)
          (x_12331 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           x_12321 : cic.Term (cic.type cic.z) B =>
           x_12311 : cic.Term (cic.type cic.z) B =>
           _x_1234 :
             cic.Term cic.prop
               (matita_arithmetics_lstar.lstar
                  (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                  (__ : cic.Term (cic.type cic.z) B =>
                   __1 : cic.Term (cic.type cic.z) B => _R __ __1)
                  x_12331 x_12321 x_12311) =>
           cic.lift cic.prop cic.prop (Q_ x_12331 x_12321 x_12311 _x_1234))
          _H_lstar_O _H_lstar_S l b b2 x_1235))
    x_1233 x_1232 x_1231 x_1234.

def lstar_inv_ind :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
              (x2 :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop x1
                    (x4 : cic.Term (cic.type cic.z) x1 =>
                     cic.prod (cic.type cic.z) cic.prop x1
                       (x5 : cic.Term (cic.type cic.z) x1 =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                             (__ : cic.Term (cic.type cic.z) x1 =>
                              __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1)
                             x3 x4 x5)
                          (_Hterm :
                             cic.Term cic.prop
                               (matita_arithmetics_lstar.lstar
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)
                                  (__ : cic.Term (cic.type cic.z) x1 =>
                                   __1 : cic.Term (cic.type cic.z) x1 =>
                                   x2 __ __1)
                                  x3 x4 x5) =>
                           cic.prod (cic.type cic.z) cic.prop
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                matita_arithmetics_nat.nat
                                (_z2089 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod (cic.type cic.z) (cic.type cic.z)
                                   x1
                                   (_z2088 : cic.Term (cic.type cic.z) x1 =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type cic.z) x1
                                      (_z2087 :
                                         cic.Term (cic.type cic.z) x1 =>
                                       cic.univ cic.prop))))
                             (P :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     matita_arithmetics_nat.nat
                                     (_z2089 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      cic.prod (cic.type cic.z)
                                        (cic.type cic.z) x1
                                        (_z2088 :
                                           cic.Term (cic.type cic.z) x1 =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type cic.z) x1
                                           (_z2087 :
                                              cic.Term (cic.type cic.z) x1 =>
                                            cic.univ cic.prop)))) =>
                              cic.prod cic.prop cic.prop
                                (cic.prod (cic.type cic.z) cic.prop x1
                                   (b : cic.Term (cic.type cic.z) x1 =>
                                    cic.prod cic.prop cic.prop
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         x3 matita_arithmetics_nat.O)
                                      (_z2092 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              x3 matita_arithmetics_nat.O) =>
                                       cic.prod cic.prop cic.prop
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               x1)
                                            x4 b)
                                         (_z2091 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    x1)
                                                 x4 b) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  x1)
                                               x5 b)
                                            (_z2090 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       x1)
                                                    x5 b) =>
                                             (_z2089 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _z2088 :
                                                cic.Term (cic.type cic.z) x1 =>
                                              _z2087 :
                                                cic.Term (cic.type cic.z) x1 =>
                                              P _z2089 _z2088 _z2087)
                                               matita_arithmetics_nat.O b b)))))
                                (_H1 :
                                   cic.Term cic.prop
                                     (cic.prod (cic.type cic.z) cic.prop x1
                                        (b : cic.Term (cic.type cic.z) x1 =>
                                         cic.prod cic.prop cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              x3 matita_arithmetics_nat.O)
                                           (_z2092 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A)
                                                    _x __)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      matita_arithmetics_nat.nat)
                                                   x3
                                                   matita_arithmetics_nat.O) =>
                                            cic.prod cic.prop cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    x1)
                                                 x4 b)
                                              (_z2091 :
                                                 cic.Term cic.prop
                                                   ((A :
                                                       cic.Univ
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z))) =>
                                                     _x :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     __ :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     matita_basics_logic.eq
                                                       (cic.lift
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A)
                                                       _x __)
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         x1)
                                                      x4 b) =>
                                               cic.prod cic.prop cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       x1)
                                                    x5 b)
                                                 (_z2090 :
                                                    cic.Term cic.prop
                                                      ((A :
                                                          cic.Univ
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z))) =>
                                                        _x :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        __ :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        matita_basics_logic.eq
                                                          (cic.lift
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A)
                                                          _x __)
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            x1)
                                                         x5 b) =>
                                                  (_z2089 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _z2088 :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   _z2087 :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   P _z2089 _z2088 _z2087)
                                                    matita_arithmetics_nat.O
                                                    b b))))) =>
                                 cic.prod cic.prop cic.prop
                                   (cic.prod (cic.type cic.z) cic.prop x1
                                      (b1 : cic.Term (cic.type cic.z) x1 =>
                                       cic.prod (cic.type cic.z) cic.prop x1
                                         (b : cic.Term (cic.type cic.z) x1 =>
                                          cic.prod cic.prop cic.prop
                                            ((__ :
                                                cic.Term (cic.type cic.z) x1 =>
                                              __1 :
                                                cic.Term (cic.type cic.z) x1 =>
                                              x2 __ __1) b1 b)
                                            (_x_1236 :
                                               cic.Term cic.prop
                                                 ((__ :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   __1 :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   x2 __ __1) b1 b) =>
                                             cic.prod (cic.type cic.z)
                                               cic.prop
                                               matita_arithmetics_nat.nat
                                               (l :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.prod (cic.type cic.z)
                                                  cic.prop x1
                                                  (b2 :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   cic.prod cic.prop cic.prop
                                                     (matita_arithmetics_lstar.lstar
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           x1)
                                                        (__ :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             x1 =>
                                                         __1 :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             x1 =>
                                                         x2 __ __1)
                                                        l b b2)
                                                     (_x_1235 :
                                                        cic.Term cic.prop
                                                          (matita_arithmetics_lstar.lstar
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                x1)
                                                             (__ :
                                                                cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  x1 =>
                                                              __1 :
                                                                cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  x1 =>
                                                              x2 __ __1)
                                                             l b b2) =>
                                                      cic.prod cic.prop
                                                        cic.prop
                                                        (cic.prod cic.prop
                                                           cic.prop
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              x3 l)
                                                           (_z2092 :
                                                              cic.Term
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A) _x __)
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                   x3 l) =>
                                                            cic.prod cic.prop
                                                              cic.prop
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    x1)
                                                                 x4 b)
                                                              (_z2091 :
                                                                 cic.Term
                                                                   cic.prop
                                                                   ((
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b) =>
                                                               cic.prod
                                                                 cic.prop
                                                                 cic.prop
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    x1) x5 b2)
                                                                 (_z2090 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2) =>
                                                                  (_z2089 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   _z2088 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                   _z2087 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                   P _z2089
                                                                    _z2088
                                                                    _z2087) l
                                                                    b b2))))
                                                        (_x_1238 :
                                                           cic.Term cic.prop
                                                             (cic.prod
                                                                cic.prop
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A) _x __)
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                   x3 l)
                                                                (_z2092 :
                                                                   cic.Term
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x3 l) =>
                                                                 cic.prod
                                                                   cic.prop
                                                                   cic.prop
                                                                   ((
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b)
                                                                   (_z2091 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2)
                                                                    (
                                                                    _z2090 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2) =>
                                                                    (
                                                                    _z2089 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    _z2088 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    _z2087 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    P _z2089
                                                                    _z2088
                                                                    _z2087) l
                                                                    b b2)))) =>
                                                         cic.prod cic.prop
                                                           cic.prop
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              x3
                                                              (matita_arithmetics_nat.plus
                                                                 l
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                           (_z2092 :
                                                              cic.Term
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A) _x __)
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                   x3
                                                                   (matita_arithmetics_nat.plus
                                                                    l
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))) =>
                                                            cic.prod cic.prop
                                                              cic.prop
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    x1)
                                                                 x4 b1)
                                                              (_z2091 :
                                                                 cic.Term
                                                                   cic.prop
                                                                   ((
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1) =>
                                                               cic.prod
                                                                 cic.prop
                                                                 cic.prop
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    x1) x5 b2)
                                                                 (_z2090 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2) =>
                                                                  (_z2089 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   _z2088 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                   _z2087 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                   P _z2089
                                                                    _z2088
                                                                    _z2087)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    l
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))
                                                                    b1 b2)))))))))))
                                   (_H2 :
                                      cic.Term cic.prop
                                        (cic.prod (cic.type cic.z) cic.prop
                                           x1
                                           (b1 :
                                              cic.Term (cic.type cic.z) x1 =>
                                            cic.prod (cic.type cic.z)
                                              cic.prop x1
                                              (b :
                                                 cic.Term (cic.type cic.z) x1 =>
                                               cic.prod cic.prop cic.prop
                                                 ((__ :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   __1 :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   x2 __ __1) b1 b)
                                                 (_x_1236 :
                                                    cic.Term cic.prop
                                                      ((__ :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            x1 =>
                                                        __1 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            x1 =>
                                                        x2 __ __1) b1 b) =>
                                                  cic.prod (cic.type cic.z)
                                                    cic.prop
                                                    matita_arithmetics_nat.nat
                                                    (l :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     cic.prod
                                                       (cic.type cic.z)
                                                       cic.prop x1
                                                       (b2 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            x1 =>
                                                        cic.prod cic.prop
                                                          cic.prop
                                                          (matita_arithmetics_lstar.lstar
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                x1)
                                                             (__ :
                                                                cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  x1 =>
                                                              __1 :
                                                                cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  x1 =>
                                                              x2 __ __1)
                                                             l b b2)
                                                          (_x_1235 :
                                                             cic.Term
                                                               cic.prop
                                                               (matita_arithmetics_lstar.lstar
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    cic.z) x1)
                                                                  (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                   x2 __ __1)
                                                                  l b b2) =>
                                                           cic.prod cic.prop
                                                             cic.prop
                                                             (cic.prod
                                                                cic.prop
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A) _x __)
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                   x3 l)
                                                                (_z2092 :
                                                                   cic.Term
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x3 l) =>
                                                                 cic.prod
                                                                   cic.prop
                                                                   cic.prop
                                                                   ((
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b)
                                                                   (_z2091 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2)
                                                                    (
                                                                    _z2090 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2) =>
                                                                    (
                                                                    _z2089 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    _z2088 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    _z2087 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    P _z2089
                                                                    _z2088
                                                                    _z2087) l
                                                                    b b2))))
                                                             (_x_1238 :
                                                                cic.Term
                                                                  cic.prop
                                                                  (cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x3 l)
                                                                    (
                                                                   _z2092 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x3 l) =>
                                                                   cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    x1) x4 b)
                                                                    (
                                                                   _z2091 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b) =>
                                                                   cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2)
                                                                    (
                                                                   _z2090 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2) =>
                                                                   (_z2089 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    _z2088 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    _z2087 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    P _z2089
                                                                    _z2088
                                                                    _z2087) l
                                                                    b b2)))) =>
                                                              cic.prod
                                                                cic.prop
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A) _x __)
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                   x3
                                                                   (matita_arithmetics_nat.plus
                                                                    l
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                (_z2092 :
                                                                   cic.Term
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x3
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    l
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))) =>
                                                                 cic.prod
                                                                   cic.prop
                                                                   cic.prop
                                                                   ((
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1)
                                                                   (_z2091 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2)
                                                                    (
                                                                    _z2090 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2) =>
                                                                    (
                                                                    _z2089 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    _z2088 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    _z2087 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    P _z2089
                                                                    _z2088
                                                                    _z2087)
                                                                    (
                                                                    matita_arithmetics_nat.plus
                                                                    l
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))
                                                                    b1 b2))))))))))) =>
                                    (_z2089 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _z2088 : cic.Term (cic.type cic.z) x1 =>
                                     _z2087 : cic.Term (cic.type cic.z) x1 =>
                                     P _z2089 _z2088 _z2087) x3 x4 x5))))))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) x1 =>
      x5 : cic.Term (cic.type cic.z) x1 =>
      Hterm :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
             (__ : cic.Term (cic.type cic.z) x1 =>
              __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1)
             x3 x4 x5) =>
      P :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z)
             matita_arithmetics_nat.nat
             (_z2089 :
                cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod (cic.type cic.z) (cic.type cic.z) x1
                (_z2088 : cic.Term (cic.type cic.z) x1 =>
                 cic.prod (cic.type cic.z) (cic.type cic.z) x1
                   (_z2087 : cic.Term (cic.type cic.z) x1 =>
                    cic.univ cic.prop)))) =>
      H1 :
        cic.Term cic.prop
          (cic.prod (cic.type cic.z) cic.prop x1
             (b : cic.Term (cic.type cic.z) x1 =>
              cic.prod cic.prop cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   x3 matita_arithmetics_nat.O)
                (_z2092 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        x3 matita_arithmetics_nat.O) =>
                 cic.prod cic.prop cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) x1)
                      x4 b)
                   (_z2091 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z))) x1)
                           x4 b) =>
                    cic.prod cic.prop cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) x1)
                         x5 b)
                      (_z2090 :
                         cic.Term cic.prop
                           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                             _x :
                               cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                             __ :
                               cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                             matita_basics_logic.eq
                               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s cic.z))) A)
                               _x __)
                              (cic.lift (cic.type cic.z)
                                 (cic.type (cic.s (cic.s cic.z))) x1)
                              x5 b) =>
                       (_z2089 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _z2088 : cic.Term (cic.type cic.z) x1 =>
                        _z2087 : cic.Term (cic.type cic.z) x1 =>
                        P _z2089 _z2088 _z2087) matita_arithmetics_nat.O b b))))) =>
      H2 :
        cic.Term cic.prop
          (cic.prod (cic.type cic.z) cic.prop x1
             (b1 : cic.Term (cic.type cic.z) x1 =>
              cic.prod (cic.type cic.z) cic.prop x1
                (b : cic.Term (cic.type cic.z) x1 =>
                 cic.prod cic.prop cic.prop
                   ((__ : cic.Term (cic.type cic.z) x1 =>
                     __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1) b1 b)
                   (_x_1236 :
                      cic.Term cic.prop
                        ((__ : cic.Term (cic.type cic.z) x1 =>
                          __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1) b1
                           b) =>
                    cic.prod (cic.type cic.z) cic.prop
                      matita_arithmetics_nat.nat
                      (l :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       cic.prod (cic.type cic.z) cic.prop x1
                         (b2 : cic.Term (cic.type cic.z) x1 =>
                          cic.prod cic.prop cic.prop
                            (matita_arithmetics_lstar.lstar
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               (__ : cic.Term (cic.type cic.z) x1 =>
                                __1 : cic.Term (cic.type cic.z) x1 =>
                                x2 __ __1)
                               l b b2)
                            (_x_1235 :
                               cic.Term cic.prop
                                 (matita_arithmetics_lstar.lstar
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    (__ : cic.Term (cic.type cic.z) x1 =>
                                     __1 : cic.Term (cic.type cic.z) x1 =>
                                     x2 __ __1)
                                    l b b2) =>
                             cic.prod cic.prop cic.prop
                               (cic.prod cic.prop cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     x3 l)
                                  (_z2092 :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          x3 l) =>
                                   cic.prod cic.prop cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           x1)
                                        x4 b)
                                     (_z2091 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                x1)
                                             x4 b) =>
                                      cic.prod cic.prop cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              x1)
                                           x5 b2)
                                        (_z2090 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   x1)
                                                x5 b2) =>
                                         (_z2089 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _z2088 :
                                            cic.Term (cic.type cic.z) x1 =>
                                          _z2087 :
                                            cic.Term (cic.type cic.z) x1 =>
                                          P _z2089 _z2088 _z2087) l b b2))))
                               (_x_1238 :
                                  cic.Term cic.prop
                                    (cic.prod cic.prop cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          x3 l)
                                       (_z2092 :
                                          cic.Term cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               x3 l) =>
                                        cic.prod cic.prop cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                x1)
                                             x4 b)
                                          (_z2091 :
                                             cic.Term cic.prop
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     x1)
                                                  x4 b) =>
                                           cic.prod cic.prop cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   x1)
                                                x5 b2)
                                             (_z2090 :
                                                cic.Term cic.prop
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        x1)
                                                     x5 b2) =>
                                              (_z2089 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               _z2088 :
                                                 cic.Term (cic.type cic.z) x1 =>
                                               _z2087 :
                                                 cic.Term (cic.type cic.z) x1 =>
                                               P _z2089 _z2088 _z2087) l b b2)))) =>
                                cic.prod cic.prop cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     x3
                                     (matita_arithmetics_nat.plus l
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)))
                                  (_z2092 :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          x3
                                          (matita_arithmetics_nat.plus l
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O))) =>
                                   cic.prod cic.prop cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           x1)
                                        x4 b1)
                                     (_z2091 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                x1)
                                             x4 b1) =>
                                      cic.prod cic.prop cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              x1)
                                           x5 b2)
                                        (_z2090 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   x1)
                                                x5 b2) =>
                                         (_z2089 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _z2088 :
                                            cic.Term (cic.type cic.z) x1 =>
                                          _z2087 :
                                            cic.Term (cic.type cic.z) x1 =>
                                          P _z2089 _z2088 _z2087)
                                           (matita_arithmetics_nat.plus l
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           b1 b2))))))))))) =>
      (Hcut :
         cic.Term cic.prop
           (cic.prod cic.prop cic.prop
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x3 x3)
              (_z2092 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      x3 x3) =>
               cic.prod cic.prop cic.prop
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) x1)
                    x4 x4)
                 (_z2091 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) x1)
                         x4 x4) =>
                  cic.prod cic.prop cic.prop
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) x1)
                       x5 x5)
                    (_z2090 :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) x1)
                            x5 x5) =>
                     (_z2089 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _z2088 : cic.Term (cic.type cic.z) x1 =>
                      _z2087 : cic.Term (cic.type cic.z) x1 =>
                      P _z2089 _z2088 _z2087) x3 x4 x5)))) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            x3)
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) x1)
            x4)
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) x1)
            x5))
        (matita_arithmetics_lstar.lstar_ind
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
           (__ : cic.Term (cic.type cic.z) x1 =>
            __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1)
           (x_1233 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            x_1232 : cic.Term (cic.type cic.z) x1 =>
            x_1231 : cic.Term (cic.type cic.z) x1 =>
            _x_1234 :
              cic.Term cic.prop
                (matita_arithmetics_lstar.lstar
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                   (__ : cic.Term (cic.type cic.z) x1 =>
                    __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1)
                   x_1233 x_1232 x_1231) =>
            cic.lift cic.prop cic.prop
              (cic.prod cic.prop cic.prop
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    x3 x_1233)
                 (_z2092 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         x3 x_1233) =>
                  cic.prod cic.prop cic.prop
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) x1)
                       x4 x_1232)
                    (_z2091 :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) x1)
                            x4 x_1232) =>
                     cic.prod cic.prop cic.prop
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) x1)
                          x5 x_1231)
                       (_z2090 :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) x1)
                               x5 x_1231) =>
                        (_z2089 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _z2088 : cic.Term (cic.type cic.z) x1 =>
                         _z2087 : cic.Term (cic.type cic.z) x1 =>
                         P _z2089 _z2088 _z2087) x_1233 x_1232 x_1231)))))
           H1 H2 x3 x4 x5 Hterm).

def lstar_ind_l_aux :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              (cic.prod (cic.type cic.z) (cic.type cic.z) B
                 (__ : cic.Term (cic.type cic.z) B =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) B
                    (__1 : cic.Term (cic.type cic.z) B => cic.univ cic.prop)))
              (R :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) B
                      (__ : cic.Term (cic.type cic.z) B =>
                       cic.prod (cic.type cic.z) (cic.type cic.z) B
                         (__1 : cic.Term (cic.type cic.z) B =>
                          cic.univ cic.prop))) =>
               cic.prod (cic.type cic.z) cic.prop B
                 (b2 : cic.Term (cic.type cic.z) B =>
                  cic.prod (cic.type cic.z) cic.prop
                    ((__ : cic.Univ (cic.type cic.z) =>
                      __1 : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation2
                        (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                    (P :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           __1 : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.relation2
                             (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                            (cic.lift (cic.type cic.z) (cic.type cic.z)
                               matita_arithmetics_nat.nat)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 : cic.Term (cic.type cic.z) B => P __ __1)
                          matita_arithmetics_nat.O b2)
                       (__ :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 : cic.Term (cic.type cic.z) B => P __ __1)
                               matita_arithmetics_nat.O b2) =>
                        cic.prod cic.prop cic.prop
                          (cic.prod (cic.type cic.z) cic.prop
                             matita_arithmetics_nat.nat
                             (l :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (b1 : cic.Term (cic.type cic.z) B =>
                                 cic.prod (cic.type cic.z) cic.prop B
                                   (b : cic.Term (cic.type cic.z) B =>
                                    cic.prod cic.prop cic.prop
                                      ((__1 : cic.Term (cic.type cic.z) B =>
                                        __2 : cic.Term (cic.type cic.z) B =>
                                        R __1 __2) b1 b)
                                      (__1 :
                                         cic.Term cic.prop
                                           ((__1 :
                                               cic.Term (cic.type cic.z) B =>
                                             __2 :
                                               cic.Term (cic.type cic.z) B =>
                                             R __1 __2) b1 b) =>
                                       cic.prod cic.prop cic.prop
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            (__2 :
                                               cic.Term (cic.type cic.z) B =>
                                             __3 :
                                               cic.Term (cic.type cic.z) B =>
                                             R __2 __3)
                                            l b b2)
                                         (__2 :
                                            cic.Term cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 (__2 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  __3 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  R __2 __3)
                                                 l b b2) =>
                                          cic.prod cic.prop cic.prop
                                            ((__3 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __4 :
                                                cic.Term (cic.type cic.z) B =>
                                              P __3 __4) l b)
                                            (__3 :
                                               cic.Term cic.prop
                                                 ((__3 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __4 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __3 __4) l b) =>
                                             (__4 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __5 :
                                                cic.Term (cic.type cic.z) B =>
                                              P __4 __5)
                                               (matita_arithmetics_nat.plus l
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               b1)))))))
                          (__1 :
                             cic.Term cic.prop
                               (cic.prod (cic.type cic.z) cic.prop
                                  matita_arithmetics_nat.nat
                                  (l :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   cic.prod (cic.type cic.z) cic.prop B
                                     (b1 : cic.Term (cic.type cic.z) B =>
                                      cic.prod (cic.type cic.z) cic.prop B
                                        (b : cic.Term (cic.type cic.z) B =>
                                         cic.prod cic.prop cic.prop
                                           ((__1 :
                                               cic.Term (cic.type cic.z) B =>
                                             __2 :
                                               cic.Term (cic.type cic.z) B =>
                                             R __1 __2) b1 b)
                                           (__1 :
                                              cic.Term cic.prop
                                                ((__1 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  __2 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  R __1 __2) b1 b) =>
                                            cic.prod cic.prop cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 (__2 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  __3 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  R __2 __3)
                                                 l b b2)
                                              (__2 :
                                                 cic.Term cic.prop
                                                   (matita_arithmetics_lstar.lstar
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) B)
                                                      (__2 :
                                                         cic.Term
                                                           (cic.type cic.z) B =>
                                                       __3 :
                                                         cic.Term
                                                           (cic.type cic.z) B =>
                                                       R __2 __3)
                                                      l b b2) =>
                                               cic.prod cic.prop cic.prop
                                                 ((__3 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __4 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __3 __4) l b)
                                                 (__3 :
                                                    cic.Term cic.prop
                                                      ((__3 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        __4 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        P __3 __4) l b) =>
                                                  (__4 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __5 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __4 __5)
                                                    (matita_arithmetics_nat.plus
                                                       l
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    b1))))))) =>
                           cic.prod (cic.type cic.z) cic.prop
                             matita_arithmetics_nat.nat
                             (l :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (b1 : cic.Term (cic.type cic.z) B =>
                                 cic.prod (cic.type cic.z) cic.prop B
                                   (b : cic.Term (cic.type cic.z) B =>
                                    cic.prod cic.prop cic.prop
                                      (matita_arithmetics_lstar.lstar
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) B)
                                         (__2 :
                                            cic.Term (cic.type cic.z) B =>
                                          __3 :
                                            cic.Term (cic.type cic.z) B =>
                                          R __2 __3)
                                         l b1 b)
                                      (__2 :
                                         cic.Term cic.prop
                                           (matita_arithmetics_lstar.lstar
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) B)
                                              (__2 :
                                                 cic.Term (cic.type cic.z) B =>
                                               __3 :
                                                 cic.Term (cic.type cic.z) B =>
                                               R __2 __3)
                                              l b1 b) =>
                                       cic.prod cic.prop cic.prop
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __3 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __3)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               B)
                                            b b2)
                                         (__3 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __3 :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __3)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    B)
                                                 b b2) =>
                                          (__4 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __5 :
                                             cic.Term (cic.type cic.z) B =>
                                           P __4 __5) l b1))))))))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) B
             (__ : cic.Term (cic.type cic.z) B =>
              cic.prod (cic.type cic.z) (cic.type cic.z) B
                (__1 : cic.Term (cic.type cic.z) B => cic.univ cic.prop))) =>
      b2 : cic.Term (cic.type cic.z) B =>
      P :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation2
              (cic.lift (cic.type cic.z) (cic.type cic.z) __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      H1 :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) B => P __ __1)
             matita_arithmetics_nat.O b2) =>
      H2 :
        cic.Term cic.prop
          (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
             (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod (cic.type cic.z) cic.prop B
                (b1 : cic.Term (cic.type cic.z) B =>
                 cic.prod (cic.type cic.z) cic.prop B
                   (b : cic.Term (cic.type cic.z) B =>
                    cic.prod cic.prop cic.prop
                      ((__ : cic.Term (cic.type cic.z) B =>
                        __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 b)
                      (__ :
                         cic.Term cic.prop
                           ((__ : cic.Term (cic.type cic.z) B =>
                             __1 : cic.Term (cic.type cic.z) B => R __ __1)
                              b1 b) =>
                       cic.prod cic.prop cic.prop
                         (matita_arithmetics_lstar.lstar
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            (__1 : cic.Term (cic.type cic.z) B =>
                             __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                            l b b2)
                         (__1 :
                            cic.Term cic.prop
                              (matita_arithmetics_lstar.lstar
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    B)
                                 (__1 : cic.Term (cic.type cic.z) B =>
                                  __2 : cic.Term (cic.type cic.z) B =>
                                  R __1 __2)
                                 l b b2) =>
                          cic.prod cic.prop cic.prop
                            ((__2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __3 : cic.Term (cic.type cic.z) B => P __2 __3)
                               l b)
                            (__2 :
                               cic.Term cic.prop
                                 ((__2 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __3 : cic.Term (cic.type cic.z) B =>
                                   P __2 __3) l b) =>
                             (__3 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __4 : cic.Term (cic.type cic.z) B => P __3 __4)
                               (matita_arithmetics_nat.plus l
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               b1))))))) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b1 : cic.Term (cic.type cic.z) B =>
      b : cic.Term (cic.type cic.z) B =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l b1 b) =>
      matita_arithmetics_lstar.lstar_ind
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B => R __ __1)
        (x_1233 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         x_1232 : cic.Term (cic.type cic.z) B =>
         x_1231 : cic.Term (cic.type cic.z) B =>
         _x_1234 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                x_1233 x_1232 x_1231) =>
         cic.lift cic.prop cic.prop
           (cic.prod cic.prop cic.prop
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    B)
                 x_1231 b2)
              (__ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) B)
                      x_1231 b2) =>
               (__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __2 : cic.Term (cic.type cic.z) B => P __1 __2) x_1233 x_1232)))
        (b0 : cic.Term (cic.type cic.z) B =>
         H0 :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B)
                b0 b2) =>
         matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B) b2
           (x : cic.Term (cic.type cic.z) B =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) B)
                   x b2) =>
            cic.lift cic.prop cic.prop
              ((__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __2 : cic.Term (cic.type cic.z) B => P __1 __2)
                 matita_arithmetics_nat.O x))
           H1 b0 H0)
        (b0 : cic.Term (cic.type cic.z) B =>
         b00 : cic.Term (cic.type cic.z) B =>
         Hb0 :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b0 b00) =>
         l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b10 : cic.Term (cic.type cic.z) B =>
         Hb01 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l0 b00 b10) =>
         IH :
           cic.Term cic.prop
             (cic.prod cic.prop cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) B)
                   b10 b2)
                (__ :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) B)
                        b10 b2) =>
                 (__1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __2 : cic.Term (cic.type cic.z) B => P __1 __2) l0 b00)) =>
         H0 :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B)
                b10 b2) =>
         matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B) b2
           (x : cic.Term (cic.type cic.z) B =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) B)
                   x b2) =>
            cic.lift cic.prop cic.prop
              (cic.prod cic.prop cic.prop
                 (matita_arithmetics_lstar.lstar
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__1 : cic.Term (cic.type cic.z) B =>
                     __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                    l0 b00 x)
                 (__1 :
                    cic.Term cic.prop
                      (matita_arithmetics_lstar.lstar
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__1 : cic.Term (cic.type cic.z) B =>
                          __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                         l0 b00 x) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod cic.prop cic.prop
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) B)
                          x b2)
                       (__2 :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __2 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __2)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) B)
                               x b2) =>
                        (__3 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __4 : cic.Term (cic.type cic.z) B => P __3 __4) l0
                          b00))
                    (__2 :
                       cic.Term cic.prop
                         (cic.prod cic.prop cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __2 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __2)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) B)
                               x b2)
                            (__2 :
                               cic.Term cic.prop
                                 ((A :
                                     cic.Univ
                                       (cic.type (cic.s (cic.s cic.z))) =>
                                   _x :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   __2 :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   matita_basics_logic.eq
                                     (cic.lift
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s cic.z))) A)
                                     _x __2)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type (cic.s (cic.s cic.z))) B)
                                    x b2) =>
                             (__3 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __4 : cic.Term (cic.type cic.z) B => P __3 __4)
                               l0 b00)) =>
                     (__3 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __4 : cic.Term (cic.type cic.z) B => P __3 __4)
                       (matita_arithmetics_nat.plus l0
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       b0))))
           (Hb010 :
              cic.Term cic.prop
                (matita_arithmetics_lstar.lstar
                   (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                   (__ : cic.Term (cic.type cic.z) B =>
                    __1 : cic.Term (cic.type cic.z) B => R __ __1)
                   l0 b00 b2) =>
            IH0 :
              cic.Term cic.prop
                (cic.prod cic.prop cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) B)
                      b2 b2)
                   (__ :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z))) B)
                           b2 b2) =>
                    (__1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __2 : cic.Term (cic.type cic.z) B => P __1 __2) l0 b00)) =>
            H2 l0 b0 b00 Hb0 Hb010
              (IH0
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    b2)))
           b10 H0 Hb01 IH)
        l b1 b H.

def lstar_ind_l :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              (cic.prod (cic.type cic.z) (cic.type cic.z) B
                 (__ : cic.Term (cic.type cic.z) B =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) B
                    (__1 : cic.Term (cic.type cic.z) B => cic.univ cic.prop)))
              (R :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) B
                      (__ : cic.Term (cic.type cic.z) B =>
                       cic.prod (cic.type cic.z) (cic.type cic.z) B
                         (__1 : cic.Term (cic.type cic.z) B =>
                          cic.univ cic.prop))) =>
               cic.prod (cic.type cic.z) cic.prop B
                 (b2 : cic.Term (cic.type cic.z) B =>
                  cic.prod (cic.type cic.z) cic.prop
                    ((__ : cic.Univ (cic.type cic.z) =>
                      __1 : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation2
                        (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                    (P :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           __1 : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.relation2
                             (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                            (cic.lift (cic.type cic.z) (cic.type cic.z)
                               matita_arithmetics_nat.nat)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 : cic.Term (cic.type cic.z) B => P __ __1)
                          matita_arithmetics_nat.O b2)
                       (__ :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 : cic.Term (cic.type cic.z) B => P __ __1)
                               matita_arithmetics_nat.O b2) =>
                        cic.prod cic.prop cic.prop
                          (cic.prod (cic.type cic.z) cic.prop
                             matita_arithmetics_nat.nat
                             (l :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (b1 : cic.Term (cic.type cic.z) B =>
                                 cic.prod (cic.type cic.z) cic.prop B
                                   (b : cic.Term (cic.type cic.z) B =>
                                    cic.prod cic.prop cic.prop
                                      ((__1 : cic.Term (cic.type cic.z) B =>
                                        __2 : cic.Term (cic.type cic.z) B =>
                                        R __1 __2) b1 b)
                                      (__1 :
                                         cic.Term cic.prop
                                           ((__1 :
                                               cic.Term (cic.type cic.z) B =>
                                             __2 :
                                               cic.Term (cic.type cic.z) B =>
                                             R __1 __2) b1 b) =>
                                       cic.prod cic.prop cic.prop
                                         (matita_arithmetics_lstar.lstar
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            (__2 :
                                               cic.Term (cic.type cic.z) B =>
                                             __3 :
                                               cic.Term (cic.type cic.z) B =>
                                             R __2 __3)
                                            l b b2)
                                         (__2 :
                                            cic.Term cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 (__2 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  __3 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  R __2 __3)
                                                 l b b2) =>
                                          cic.prod cic.prop cic.prop
                                            ((__3 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __4 :
                                                cic.Term (cic.type cic.z) B =>
                                              P __3 __4) l b)
                                            (__3 :
                                               cic.Term cic.prop
                                                 ((__3 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __4 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __3 __4) l b) =>
                                             (__4 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __5 :
                                                cic.Term (cic.type cic.z) B =>
                                              P __4 __5)
                                               (matita_arithmetics_nat.plus l
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               b1)))))))
                          (__1 :
                             cic.Term cic.prop
                               (cic.prod (cic.type cic.z) cic.prop
                                  matita_arithmetics_nat.nat
                                  (l :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   cic.prod (cic.type cic.z) cic.prop B
                                     (b1 : cic.Term (cic.type cic.z) B =>
                                      cic.prod (cic.type cic.z) cic.prop B
                                        (b : cic.Term (cic.type cic.z) B =>
                                         cic.prod cic.prop cic.prop
                                           ((__1 :
                                               cic.Term (cic.type cic.z) B =>
                                             __2 :
                                               cic.Term (cic.type cic.z) B =>
                                             R __1 __2) b1 b)
                                           (__1 :
                                              cic.Term cic.prop
                                                ((__1 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  __2 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  R __1 __2) b1 b) =>
                                            cic.prod cic.prop cic.prop
                                              (matita_arithmetics_lstar.lstar
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) B)
                                                 (__2 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  __3 :
                                                    cic.Term (cic.type cic.z)
                                                      B =>
                                                  R __2 __3)
                                                 l b b2)
                                              (__2 :
                                                 cic.Term cic.prop
                                                   (matita_arithmetics_lstar.lstar
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) B)
                                                      (__2 :
                                                         cic.Term
                                                           (cic.type cic.z) B =>
                                                       __3 :
                                                         cic.Term
                                                           (cic.type cic.z) B =>
                                                       R __2 __3)
                                                      l b b2) =>
                                               cic.prod cic.prop cic.prop
                                                 ((__3 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __4 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __3 __4) l b)
                                                 (__3 :
                                                    cic.Term cic.prop
                                                      ((__3 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        __4 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        P __3 __4) l b) =>
                                                  (__4 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __5 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __4 __5)
                                                    (matita_arithmetics_nat.plus
                                                       l
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    b1))))))) =>
                           cic.prod (cic.type cic.z) cic.prop
                             matita_arithmetics_nat.nat
                             (l :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (b1 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop cic.prop
                                   (matita_arithmetics_lstar.lstar
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      (__2 : cic.Term (cic.type cic.z) B =>
                                       __3 : cic.Term (cic.type cic.z) B =>
                                       R __2 __3)
                                      l b1 b2)
                                   (__2 :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           (__2 :
                                              cic.Term (cic.type cic.z) B =>
                                            __3 :
                                              cic.Term (cic.type cic.z) B =>
                                            R __2 __3)
                                           l b1 b2) =>
                                    (__3 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __4 : cic.Term (cic.type cic.z) B =>
                                     P __3 __4) l b1))))))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) B
             (__ : cic.Term (cic.type cic.z) B =>
              cic.prod (cic.type cic.z) (cic.type cic.z) B
                (__1 : cic.Term (cic.type cic.z) B => cic.univ cic.prop))) =>
      b2 : cic.Term (cic.type cic.z) B =>
      P :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation2
              (cic.lift (cic.type cic.z) (cic.type cic.z) __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      H1 :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) B => P __ __1)
             matita_arithmetics_nat.O b2) =>
      H2 :
        cic.Term cic.prop
          (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
             (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod (cic.type cic.z) cic.prop B
                (b1 : cic.Term (cic.type cic.z) B =>
                 cic.prod (cic.type cic.z) cic.prop B
                   (b : cic.Term (cic.type cic.z) B =>
                    cic.prod cic.prop cic.prop
                      ((__ : cic.Term (cic.type cic.z) B =>
                        __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 b)
                      (__ :
                         cic.Term cic.prop
                           ((__ : cic.Term (cic.type cic.z) B =>
                             __1 : cic.Term (cic.type cic.z) B => R __ __1)
                              b1 b) =>
                       cic.prod cic.prop cic.prop
                         (matita_arithmetics_lstar.lstar
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            (__1 : cic.Term (cic.type cic.z) B =>
                             __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                            l b b2)
                         (__1 :
                            cic.Term cic.prop
                              (matita_arithmetics_lstar.lstar
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    B)
                                 (__1 : cic.Term (cic.type cic.z) B =>
                                  __2 : cic.Term (cic.type cic.z) B =>
                                  R __1 __2)
                                 l b b2) =>
                          cic.prod cic.prop cic.prop
                            ((__2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __3 : cic.Term (cic.type cic.z) B => P __2 __3)
                               l b)
                            (__2 :
                               cic.Term cic.prop
                                 ((__2 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __3 : cic.Term (cic.type cic.z) B =>
                                   P __2 __3) l b) =>
                             (__3 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __4 : cic.Term (cic.type cic.z) B => P __3 __4)
                               (matita_arithmetics_nat.plus l
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               b1))))))) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b1 : cic.Term (cic.type cic.z) B =>
      Hb12 :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l b1 b2) =>
      matita_arithmetics_lstar.lstar_ind_l_aux
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B =>
         cic.lift cic.prop cic.prop (R __ __1))
        b2
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         __1 : cic.Term (cic.type cic.z) B => P __ __1)
        H1 H2 l b1 b2 Hb12
        (matita_basics_logic.refl
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B) b2).

def lstar_step :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              (cic.prod (cic.type cic.z) (cic.type cic.z) B
                 (__ : cic.Term (cic.type cic.z) B =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) B
                    (__1 : cic.Term (cic.type cic.z) B => cic.univ cic.prop)))
              (R :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) B
                      (__ : cic.Term (cic.type cic.z) B =>
                       cic.prod (cic.type cic.z) (cic.type cic.z) B
                         (__1 : cic.Term (cic.type cic.z) B =>
                          cic.univ cic.prop))) =>
               cic.prod (cic.type cic.z) cic.prop B
                 (b1 : cic.Term (cic.type cic.z) B =>
                  cic.prod (cic.type cic.z) cic.prop B
                    (b2 : cic.Term (cic.type cic.z) B =>
                     cic.prod cic.prop cic.prop
                       ((__ : cic.Term (cic.type cic.z) B =>
                         __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 b2)
                       (__ :
                          cic.Term cic.prop
                            ((__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                               b1 b2) =>
                        matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__1 : cic.Term (cic.type cic.z) B =>
                           __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          b1 b2))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) B
             (__ : cic.Term (cic.type cic.z) B =>
              cic.prod (cic.type cic.z) (cic.type cic.z) B
                (__1 : cic.Term (cic.type cic.z) B => cic.univ cic.prop))) =>
      b1 : cic.Term (cic.type cic.z) B =>
      b2 : cic.Term (cic.type cic.z) B =>
      auto :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 b2) =>
      matita_basics_logic.eq_coerc
        (cic.lift cic.prop (cic.type cic.z)
           (matita_arithmetics_lstar.lstar
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              b1 b2))
        (cic.lift cic.prop (cic.type cic.z)
           (matita_arithmetics_lstar.lstar
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O) b1 b2))
        (matita_arithmetics_lstar.lstar_S
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1)
           b1 b2 auto matita_arithmetics_nat.O b2
           (matita_arithmetics_lstar.lstar_O
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              b2))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type (cic.s cic.z))
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.univ (cic.type cic.z)))
                 (cic.lift cic.prop (cic.type cic.z)
                    (matita_arithmetics_lstar.lstar
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (__ : cic.Term (cic.type cic.z) B =>
                        __1 : cic.Term (cic.type cic.z) B => R __ __1)
                       x b1 b2))
                 (cic.lift cic.prop (cic.type cic.z)
                    (matita_arithmetics_lstar.lstar
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (__ : cic.Term (cic.type cic.z) B =>
                        __1 : cic.Term (cic.type cic.z) B => R __ __1)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O) b1
                       b2))))
           (matita_basics_logic.refl
              (cic.lift (cic.type (cic.s cic.z))
                 (cic.type (cic.s (cic.s cic.z))) (cic.univ (cic.type cic.z)))
              (cic.lift cic.prop (cic.type cic.z)
                 (matita_arithmetics_lstar.lstar
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__ : cic.Term (cic.type cic.z) B =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O) b1 b2)))
           (matita_arithmetics_nat.plus matita_arithmetics_nat.O
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (matita_arithmetics_nat.plus_O_n
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))).

def lstar_dx :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop B
                    (b1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) cic.prop B
                       (b : cic.Term (cic.type cic.z) B =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             l b1 b)
                          (__ :
                             cic.Term cic.prop
                               (matita_arithmetics_lstar.lstar
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__ : cic.Term (cic.type cic.z) B =>
                                   __1 : cic.Term (cic.type cic.z) B =>
                                   R __ __1)
                                  l b1 b) =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (b2 : cic.Term (cic.type cic.z) B =>
                              cic.prod cic.prop cic.prop
                                ((__1 : cic.Term (cic.type cic.z) B =>
                                  __2 : cic.Term (cic.type cic.z) B =>
                                  R __1 __2) b b2)
                                (__1 :
                                   cic.Term cic.prop
                                     ((__1 : cic.Term (cic.type cic.z) B =>
                                       __2 : cic.Term (cic.type cic.z) B =>
                                       R __1 __2) b b2) =>
                                 matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   (__2 : cic.Term (cic.type cic.z) B =>
                                    __3 : cic.Term (cic.type cic.z) B =>
                                    R __2 __3)
                                   (matita_arithmetics_nat.plus l
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   b1 b2)))))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b1 : cic.Term (cic.type cic.z) B =>
      b : cic.Term (cic.type cic.z) B =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l b1 b) =>
      matita_arithmetics_lstar.lstar_ind_l
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B =>
         cic.lift cic.prop cic.prop (R __ __1))
        b
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _0 : cic.Term (cic.type cic.z) B =>
         cic.prod (cic.type cic.z) cic.prop B
           (b2 : cic.Term (cic.type cic.z) B =>
            cic.prod cic.prop cic.prop
              ((__1 : cic.Term (cic.type cic.z) B =>
                __2 : cic.Term (cic.type cic.z) B => R __1 __2) b b2)
              (__1 :
                 cic.Term cic.prop
                   ((__1 : cic.Term (cic.type cic.z) B =>
                     __2 : cic.Term (cic.type cic.z) B => R __1 __2) b b2) =>
               matita_arithmetics_lstar.lstar
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (__2 : cic.Term (cic.type cic.z) B =>
                  __3 : cic.Term (cic.type cic.z) B => R __2 __3)
                 (matita_arithmetics_nat.plus __
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 _0 b2)))
        (b2 : cic.Term (cic.type cic.z) B =>
         auto :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b b2) =>
         matita_arithmetics_lstar.lstar_step
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B =>
            cic.lift cic.prop cic.prop (R __ __1))
           b b2 auto)
        (l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b10 : cic.Term (cic.type cic.z) B =>
         b0 : cic.Term (cic.type cic.z) B =>
         auto :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b10 b0) =>
         auto' :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l0 b0 b) =>
         auto'' :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop B
                (b2 : cic.Term (cic.type cic.z) B =>
                 cic.prod cic.prop cic.prop
                   ((__ : cic.Term (cic.type cic.z) B =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1) b b2)
                   (__ :
                      cic.Term cic.prop
                        ((__ : cic.Term (cic.type cic.z) B =>
                          __1 : cic.Term (cic.type cic.z) B => R __ __1) b b2) =>
                    matita_arithmetics_lstar.lstar
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                      (__1 : cic.Term (cic.type cic.z) B =>
                       __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                      (matita_arithmetics_nat.plus l0
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      b0 b2))) =>
         b2 : cic.Term (cic.type cic.z) B =>
         auto''' :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b b2) =>
         matita_arithmetics_lstar.lstar_S
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1)
           b10 b0 auto
           (matita_arithmetics_nat.plus l0
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           b2 (auto'' b2 auto'''))
        l b1 H.

def lstar_inv_O :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop B
                    (b1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) cic.prop B
                       (b2 : cic.Term (cic.type cic.z) B =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             l b1 b2)
                          (__ :
                             cic.Term cic.prop
                               (matita_arithmetics_lstar.lstar
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__ : cic.Term (cic.type cic.z) B =>
                                   __1 : cic.Term (cic.type cic.z) B =>
                                   R __ __1)
                                  l b1 b2) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __1)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                matita_arithmetics_nat.O l)
                             (__1 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __1 :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __1)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     matita_arithmetics_nat.O l) =>
                              (A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __2 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __2)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) B)
                                b1 b2))))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b1 : cic.Term (cic.type cic.z) B =>
      b2 : cic.Term (cic.type cic.z) B =>
      _clearme :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l b1 b2) =>
      matita_arithmetics_lstar.match_lstar cic.prop
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B => R __ __1)
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _0 : cic.Term (cic.type cic.z) B =>
         _1 : cic.Term (cic.type cic.z) B =>
         _2 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__1 : cic.Term (cic.type cic.z) B =>
                 __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                __ _0 _1) =>
         cic.prod cic.prop cic.prop
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              matita_arithmetics_nat.O __)
           (__1 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __1)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   matita_arithmetics_nat.O __) =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __2)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B)
              _0 _1))
        (b : cic.Term (cic.type cic.z) B =>
         auto :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                matita_arithmetics_nat.O matita_arithmetics_nat.O) =>
         matita_basics_logic.refl
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B) b)
        (b10 : cic.Term (cic.type cic.z) B =>
         b : cic.Term (cic.type cic.z) B =>
         __ :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b10 b) =>
         l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b20 : cic.Term (cic.type cic.z) B =>
         _0 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__1 : cic.Term (cic.type cic.z) B =>
                 __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                l0 b b20) =>
         matita_basics_logic.eq_ind
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.plus l0 matita_arithmetics_nat.O))
           (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __1)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.plus l0
                         matita_arithmetics_nat.O))
                   x_1) =>
            cic.lift cic.prop cic.prop
              (cic.prod cic.prop cic.prop
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O x_1)
                 (__1 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __1)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         matita_arithmetics_nat.O x_1) =>
                  (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __2)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    b10 b20)))
           (H :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __1)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   matita_arithmetics_nat.O
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.plus l0
                         matita_arithmetics_nat.O))) =>
            matita_arithmetics_nat.nat_discr matita_arithmetics_nat.O
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.plus l0 matita_arithmetics_nat.O))
              H
              (cic.lift cic.prop (cic.type (cic.s cic.z))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    b10 b20)))
           (matita_arithmetics_nat.plus l0
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (matita_arithmetics_nat.plus_n_Sm l0 matita_arithmetics_nat.O))
        l b1 b2 _clearme.

def lstar_inv_S :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop B
                    (b1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) cic.prop B
                       (b2 : cic.Term (cic.type cic.z) B =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             l b1 b2)
                          (__ :
                             cic.Term cic.prop
                               (matita_arithmetics_lstar.lstar
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__ : cic.Term (cic.type cic.z) B =>
                                   __1 : cic.Term (cic.type cic.z) B =>
                                   R __ __1)
                                  l b1 b2) =>
                           cic.prod (cic.type cic.z) cic.prop
                             matita_arithmetics_nat.nat
                             (l0 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod cic.prop cic.prop
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus l0
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   l)
                                (__1 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __1 :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.plus l0
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        l) =>
                                 (A : cic.Univ (cic.type cic.z) =>
                                  _P :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) A
                                         (__2 :
                                            cic.Term (cic.type cic.z) A =>
                                          cic.univ cic.prop)) =>
                                  _Q :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) A
                                         (__2 :
                                            cic.Term (cic.type cic.z) A =>
                                          cic.univ cic.prop)) =>
                                  matita_basics_logic.ex2
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) A)
                                    _P _Q)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   (b : cic.Term (cic.type cic.z) B =>
                                    cic.lift cic.prop cic.prop
                                      ((__2 : cic.Term (cic.type cic.z) B =>
                                        __3 : cic.Term (cic.type cic.z) B =>
                                        R __2 __3) b1 b))
                                   (b : cic.Term (cic.type cic.z) B =>
                                    cic.lift cic.prop cic.prop
                                      (matita_arithmetics_lstar.lstar
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) B)
                                         (__2 :
                                            cic.Term (cic.type cic.z) B =>
                                          __3 :
                                            cic.Term (cic.type cic.z) B =>
                                          R __2 __3)
                                         l0 b b2)))))))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b1 : cic.Term (cic.type cic.z) B =>
      b2 : cic.Term (cic.type cic.z) B =>
      _clearme :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l b1 b2) =>
      matita_arithmetics_lstar.match_lstar cic.prop
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B => R __ __1)
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _0 : cic.Term (cic.type cic.z) B =>
         _1 : cic.Term (cic.type cic.z) B =>
         _2 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__1 : cic.Term (cic.type cic.z) B =>
                 __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                __ _0 _1) =>
         cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus l0
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 __)
              (__1 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __1)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.plus l0
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      __) =>
               (A : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) A
                       (__2 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop)) =>
                _Q :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) A
                       (__2 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop)) =>
                matita_basics_logic.ex2
                  (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (b : cic.Term (cic.type cic.z) B =>
                  cic.lift cic.prop cic.prop
                    ((__2 : cic.Term (cic.type cic.z) B =>
                      __3 : cic.Term (cic.type cic.z) B => R __2 __3) _0 b))
                 (b : cic.Term (cic.type cic.z) B =>
                  cic.lift cic.prop cic.prop
                    (matita_arithmetics_lstar.lstar
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (__2 : cic.Term (cic.type cic.z) B =>
                        __3 : cic.Term (cic.type cic.z) B => R __2 __3)
                       l0 b _1)))))
        (b : cic.Term (cic.type cic.z) B =>
         l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_basics_logic.eq_ind
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.plus l0 matita_arithmetics_nat.O))
           (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.plus l0
                         matita_arithmetics_nat.O))
                   x_1) =>
            cic.lift cic.prop cic.prop
              (cic.prod cic.prop cic.prop
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    x_1 matita_arithmetics_nat.O)
                 (__ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         x_1 matita_arithmetics_nat.O) =>
                  (A : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z) A
                          (__1 : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z) A
                          (__1 : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop)) =>
                   matita_basics_logic.ex2
                     (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (b0 : cic.Term (cic.type cic.z) B =>
                     cic.lift cic.prop cic.prop
                       ((__1 : cic.Term (cic.type cic.z) B =>
                         __2 : cic.Term (cic.type cic.z) B => R __1 __2) b b0))
                    (b0 : cic.Term (cic.type cic.z) B =>
                     cic.lift cic.prop cic.prop
                       (matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__1 : cic.Term (cic.type cic.z) B =>
                           __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                          l0 b0 b)))))
           (H :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.plus l0
                         matita_arithmetics_nat.O))
                   matita_arithmetics_nat.O) =>
            matita_arithmetics_nat.nat_discr
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.plus l0 matita_arithmetics_nat.O))
              matita_arithmetics_nat.O H
              (cic.lift cic.prop (cic.type (cic.s cic.z))
                 ((A : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z) A
                          (__ : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z) A
                          (__ : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop)) =>
                   matita_basics_logic.ex2
                     (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (b0 : cic.Term (cic.type cic.z) B =>
                     cic.lift cic.prop cic.prop
                       ((__ : cic.Term (cic.type cic.z) B =>
                         __1 : cic.Term (cic.type cic.z) B => R __ __1) b b0))
                    (b0 : cic.Term (cic.type cic.z) B =>
                     cic.lift cic.prop cic.prop
                       (matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__ : cic.Term (cic.type cic.z) B =>
                           __1 : cic.Term (cic.type cic.z) B => R __ __1)
                          l0 b0 b)))))
           (matita_arithmetics_nat.plus l0
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (matita_arithmetics_nat.plus_n_Sm l0 matita_arithmetics_nat.O))
        (b10 : cic.Term (cic.type cic.z) B =>
         b : cic.Term (cic.type cic.z) B =>
         Hb1 :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b10 b) =>
         l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b20 : cic.Term (cic.type cic.z) B =>
         Hb2 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l0 b b20) =>
         l00 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         H :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.plus l00
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                (matita_arithmetics_nat.plus l0
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
         matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           l0
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   x l0) =>
            cic.lift cic.prop cic.prop
              ((A : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) A
                       (__1 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop)) =>
                _Q :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) A
                       (__1 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop)) =>
                matita_basics_logic.ex2
                  (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (b0 : cic.Term (cic.type cic.z) B =>
                  cic.lift cic.prop cic.prop
                    ((__1 : cic.Term (cic.type cic.z) B =>
                      __2 : cic.Term (cic.type cic.z) B => R __1 __2) b10 b0))
                 (b0 : cic.Term (cic.type cic.z) B =>
                  cic.lift cic.prop cic.prop
                    (matita_arithmetics_lstar.lstar
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (__1 : cic.Term (cic.type cic.z) B =>
                        __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                       x b0 b20))))
           (matita_basics_logic.ex2_intro
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (b0 : cic.Term (cic.type cic.z) B =>
               cic.lift cic.prop cic.prop
                 ((__ : cic.Term (cic.type cic.z) B =>
                   __1 : cic.Term (cic.type cic.z) B => R __ __1) b10 b0))
              (b0 : cic.Term (cic.type cic.z) B =>
               cic.lift cic.prop cic.prop
                 (matita_arithmetics_lstar.lstar
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__ : cic.Term (cic.type cic.z) B =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1)
                    l0 b0 b20))
              b Hb1 Hb2)
           l00
           (matita_arithmetics_nat.injective_plus_l
              (matita_arithmetics_nat.S matita_arithmetics_nat.O) l00 l0 H))
        l b1 b2 _clearme.

def lstar_inv_step :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop B
                 (b1 : cic.Term (cic.type cic.z) B =>
                  cic.prod (cic.type cic.z) cic.prop B
                    (b2 : cic.Term (cic.type cic.z) B =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__ : cic.Term (cic.type cic.z) B =>
                           __1 : cic.Term (cic.type cic.z) B => R __ __1)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          b1 b2)
                       (__ :
                          cic.Term cic.prop
                            (matita_arithmetics_lstar.lstar
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               (__ : cic.Term (cic.type cic.z) B =>
                                __1 : cic.Term (cic.type cic.z) B => R __ __1)
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O)
                               b1 b2) =>
                        (__1 : cic.Term (cic.type cic.z) B =>
                         __2 : cic.Term (cic.type cic.z) B => R __1 __2) b1
                          b2))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      b1 : cic.Term (cic.type cic.z) B =>
      b2 : cic.Term (cic.type cic.z) B =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) b1 b2) =>
      matita_basics_logic.ex2_ind
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (b : cic.Term (cic.type cic.z) B =>
         cic.lift cic.prop cic.prop
           ((__ : cic.Term (cic.type cic.z) B =>
             __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 b))
        (b : cic.Term (cic.type cic.z) B =>
         cic.lift cic.prop cic.prop
           (matita_arithmetics_lstar.lstar
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              matita_arithmetics_nat.O b b2))
        (_x_274 :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) A
                      (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) A
                      (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
               matita_basics_logic.ex2
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (b : cic.Term (cic.type cic.z) B =>
                 cic.lift cic.prop cic.prop
                   ((__ : cic.Term (cic.type cic.z) B =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 b))
                (b : cic.Term (cic.type cic.z) B =>
                 cic.lift cic.prop cic.prop
                   (matita_arithmetics_lstar.lstar
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                      (__ : cic.Term (cic.type cic.z) B =>
                       __1 : cic.Term (cic.type cic.z) B => R __ __1)
                      matita_arithmetics_nat.O b b2))) =>
         cic.lift cic.prop cic.prop
           ((__ : cic.Term (cic.type cic.z) B =>
             __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 b2))
        (b : cic.Term (cic.type cic.z) B =>
         Hb1 :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 b) =>
         H0 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                matita_arithmetics_nat.O b b2) =>
         matita_basics_logic.eq_ind
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B) b
           (x_1 : cic.Term (cic.type cic.z) B =>
            _x_2 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) B)
                   b x_1) =>
            cic.lift cic.prop cic.prop
              ((__ : cic.Term (cic.type cic.z) B =>
                __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 x_1))
           Hb1 b2
           (matita_arithmetics_lstar.lstar_inv_O
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              matita_arithmetics_nat.O b b2 H0
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O)))
        (matita_arithmetics_lstar.lstar_inv_S
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1)
           (matita_arithmetics_nat.S matita_arithmetics_nat.O) b1 b2 H
           matita_arithmetics_nat.O
           (matita_basics_logic.rewrite_l
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    x (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_arithmetics_nat.plus_O_n
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))).

def lstar_singlevalued :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                __1 : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation2
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     __1 : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation2
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_relations.singlevalued
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__ : cic.Term (cic.type cic.z) B =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1))
                 (__ :
                    cic.Term cic.prop
                      (matita_basics_relations.singlevalued
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__ : cic.Term (cic.type cic.z) B =>
                          __1 : cic.Term (cic.type cic.z) B => R __ __1)) =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (l :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_relations.singlevalued
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (__1 : cic.Term (cic.type cic.z) B =>
                        __2 : cic.Term (cic.type cic.z) B =>
                        matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__3 : cic.Term (cic.type cic.z) B =>
                           __4 : cic.Term (cic.type cic.z) B => R __3 __4)
                          l __1 __2))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation2
              (cic.lift (cic.type cic.z) (cic.type cic.z) __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      HR :
        cic.Term cic.prop
          (matita_basics_relations.singlevalued
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      c : cic.Term (cic.type cic.z) B =>
      c1 : cic.Term (cic.type cic.z) B =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l c c1) =>
      matita_arithmetics_lstar.lstar_ind_l
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B =>
         cic.lift cic.prop cic.prop (R __ __1))
        c1
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _0 : cic.Term (cic.type cic.z) B =>
         cic.prod (cic.type cic.z) cic.prop B
           (b2 : cic.Term (cic.type cic.z) B =>
            cic.prod cic.prop cic.prop
              (matita_arithmetics_lstar.lstar
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (__1 : cic.Term (cic.type cic.z) B =>
                  __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                 __ _0 b2)
              (__1 :
                 cic.Term cic.prop
                   (matita_arithmetics_lstar.lstar
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                      (__1 : cic.Term (cic.type cic.z) B =>
                       __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                      __ _0 b2) =>
               (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __2)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    B)
                 c1 b2)))
        (b2 : cic.Term (cic.type cic.z) B =>
         auto :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                matita_arithmetics_nat.O c1 b2) =>
         matita_arithmetics_lstar.lstar_inv_O
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1)
           matita_arithmetics_nat.O c1 b2 auto
           (matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              matita_arithmetics_nat.O))
        (l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b : cic.Term (cic.type cic.z) B =>
         b1 : cic.Term (cic.type cic.z) B =>
         Hb1 :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b b1) =>
         __ :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l0 b1 c1) =>
         IHbc1 :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop B
                (b2 : cic.Term (cic.type cic.z) B =>
                 cic.prod cic.prop cic.prop
                   (matita_arithmetics_lstar.lstar
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                      (__1 : cic.Term (cic.type cic.z) B =>
                       __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                      l0 b1 b2)
                   (__1 :
                      cic.Term cic.prop
                        (matita_arithmetics_lstar.lstar
                           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                           (__1 : cic.Term (cic.type cic.z) B =>
                            __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                           l0 b1 b2) =>
                    (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __2)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) B)
                      c1 b2))) =>
         c2 : cic.Term (cic.type cic.z) B =>
         H0 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__1 : cic.Term (cic.type cic.z) B =>
                 __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                (matita_arithmetics_nat.plus l0
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                b c2) =>
         matita_basics_logic.ex2_ind
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (b0 : cic.Term (cic.type cic.z) B =>
            cic.lift cic.prop cic.prop
              ((__1 : cic.Term (cic.type cic.z) B =>
                __2 : cic.Term (cic.type cic.z) B => R __1 __2) b b0))
           (b0 : cic.Term (cic.type cic.z) B =>
            cic.lift cic.prop cic.prop
              (matita_arithmetics_lstar.lstar
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (__1 : cic.Term (cic.type cic.z) B =>
                  __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                 l0 b0 c2))
           (_x_274 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z) A
                         (__1 : cic.Term (cic.type cic.z) A =>
                          cic.univ cic.prop)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z) A
                         (__1 : cic.Term (cic.type cic.z) A =>
                          cic.univ cic.prop)) =>
                  matita_basics_logic.ex2
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                   (b0 : cic.Term (cic.type cic.z) B =>
                    cic.lift cic.prop cic.prop
                      ((__1 : cic.Term (cic.type cic.z) B =>
                        __2 : cic.Term (cic.type cic.z) B => R __1 __2) b b0))
                   (b0 : cic.Term (cic.type cic.z) B =>
                    cic.lift cic.prop cic.prop
                      (matita_arithmetics_lstar.lstar
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__1 : cic.Term (cic.type cic.z) B =>
                          __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                         l0 b0 c2))) =>
            cic.lift cic.prop cic.prop
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    B)
                 c1 c2))
           (b2 : cic.Term (cic.type cic.z) B =>
            Hb2 :
              cic.Term cic.prop
                ((__1 : cic.Term (cic.type cic.z) B =>
                  __2 : cic.Term (cic.type cic.z) B => R __1 __2) b b2) =>
            Hbc2 :
              cic.Term cic.prop
                (matita_arithmetics_lstar.lstar
                   (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                   (__1 : cic.Term (cic.type cic.z) B =>
                    __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                   l0 b2 c2) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B)
              b2
              (x : cic.Term (cic.type cic.z) B =>
               _0 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __1)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) B)
                      x b2) =>
               cic.lift cic.prop cic.prop
                 (cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop B
                       (b20 : cic.Term (cic.type cic.z) B =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__1 : cic.Term (cic.type cic.z) B =>
                              __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                             l0 x b20)
                          (__1 :
                             cic.Term cic.prop
                               (matita_arithmetics_lstar.lstar
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__1 : cic.Term (cic.type cic.z) B =>
                                   __2 : cic.Term (cic.type cic.z) B =>
                                   R __1 __2)
                                  l0 x b20) =>
                           (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __2 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __2)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) B)
                             c1 b20)))
                    (__1 :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop B
                            (b20 : cic.Term (cic.type cic.z) B =>
                             cic.prod cic.prop cic.prop
                               (matita_arithmetics_lstar.lstar
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__1 : cic.Term (cic.type cic.z) B =>
                                   __2 : cic.Term (cic.type cic.z) B =>
                                   R __1 __2)
                                  l0 x b20)
                               (__1 :
                                  cic.Term cic.prop
                                    (matita_arithmetics_lstar.lstar
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) B)
                                       (__1 : cic.Term (cic.type cic.z) B =>
                                        __2 : cic.Term (cic.type cic.z) B =>
                                        R __1 __2)
                                       l0 x b20) =>
                                (A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __2 :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __2)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) B)
                                  c1 b20))) =>
                     (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __2)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) B)
                       c1 c2)))
              (IHbc10 :
                 cic.Term cic.prop
                   (cic.prod (cic.type cic.z) cic.prop B
                      (b20 : cic.Term (cic.type cic.z) B =>
                       cic.prod cic.prop cic.prop
                         (matita_arithmetics_lstar.lstar
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            (__1 : cic.Term (cic.type cic.z) B =>
                             __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                            l0 b2 b20)
                         (__1 :
                            cic.Term cic.prop
                              (matita_arithmetics_lstar.lstar
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    B)
                                 (__1 : cic.Term (cic.type cic.z) B =>
                                  __2 : cic.Term (cic.type cic.z) B =>
                                  R __1 __2)
                                 l0 b2 b20) =>
                          (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __2 :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __2)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) B)
                            c1 b20))) =>
               IHbc10 c2 Hbc2)
              b1 (HR b b1 Hb1 b2 Hb2) IHbc1)
           (matita_arithmetics_lstar.lstar_inv_S
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__1 : cic.Term (cic.type cic.z) B =>
               __2 : cic.Term (cic.type cic.z) B => R __1 __2)
              (matita_arithmetics_nat.plus l0
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              b c2 H0 l0
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus l0
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
        l c H.

def lstar_ltransitive :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               matita_arithmetics_lstar.ltransitive
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (matita_arithmetics_lstar.lstar
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__ : cic.Term (cic.type cic.z) B =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1)))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      l1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b1 : cic.Term (cic.type cic.z) B =>
      b : cic.Term (cic.type cic.z) B =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l1 b1 b) =>
      matita_arithmetics_lstar.lstar_ind_l
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B =>
         cic.lift cic.prop cic.prop (R __ __1))
        b
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _0 : cic.Term (cic.type cic.z) B =>
         cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (l2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop B
              (b2 : cic.Term (cic.type cic.z) B =>
               cic.prod cic.prop cic.prop
                 (matita_arithmetics_lstar.lstar
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__1 : cic.Term (cic.type cic.z) B =>
                     __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                    l2 b b2)
                 (__1 :
                    cic.Term cic.prop
                      (matita_arithmetics_lstar.lstar
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__1 : cic.Term (cic.type cic.z) B =>
                          __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                         l2 b b2) =>
                  matita_arithmetics_lstar.lstar
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__2 : cic.Term (cic.type cic.z) B =>
                     __3 : cic.Term (cic.type cic.z) B => R __2 __3)
                    (matita_arithmetics_nat.plus __ l2) _0 b2))))
        (l2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b2 : cic.Term (cic.type cic.z) B =>
         auto :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l2 b b2) =>
         auto)
        (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b10 : cic.Term (cic.type cic.z) B =>
         b0 : cic.Term (cic.type cic.z) B =>
         auto :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b10 b0) =>
         auto' :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l b0 b) =>
         auto'' :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                (l2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod (cic.type cic.z) cic.prop B
                   (b2 : cic.Term (cic.type cic.z) B =>
                    cic.prod cic.prop cic.prop
                      (matita_arithmetics_lstar.lstar
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__ : cic.Term (cic.type cic.z) B =>
                          __1 : cic.Term (cic.type cic.z) B => R __ __1)
                         l2 b b2)
                      (__ :
                         cic.Term cic.prop
                           (matita_arithmetics_lstar.lstar
                              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                              (__ : cic.Term (cic.type cic.z) B =>
                               __1 : cic.Term (cic.type cic.z) B => R __ __1)
                              l2 b b2) =>
                       matita_arithmetics_lstar.lstar
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__1 : cic.Term (cic.type cic.z) B =>
                          __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                         (matita_arithmetics_nat.plus l l2) b0 b2)))) =>
         l2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b2 : cic.Term (cic.type cic.z) B =>
         auto''' :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l2 b b2) =>
         matita_basics_logic.eq_coerc
           (cic.lift cic.prop (cic.type cic.z)
              (matita_arithmetics_lstar.lstar
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (__ : cic.Term (cic.type cic.z) B =>
                  __1 : cic.Term (cic.type cic.z) B => R __ __1)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.plus l l2)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 b10 b2))
           (cic.lift cic.prop (cic.type cic.z)
              (matita_arithmetics_lstar.lstar
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (__ : cic.Term (cic.type cic.z) B =>
                  __1 : cic.Term (cic.type cic.z) B => R __ __1)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.plus l
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    l2)
                 b10 b2))
           (matita_arithmetics_lstar.lstar_S
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              b10 b0 auto (matita_arithmetics_nat.plus l l2) b2
              (auto'' l2 b2 auto'''))
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus l2
                 (matita_arithmetics_nat.plus l
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.univ (cic.type cic.z)))
                    (cic.lift cic.prop (cic.type cic.z)
                       (matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__ : cic.Term (cic.type cic.z) B =>
                           __1 : cic.Term (cic.type cic.z) B => R __ __1)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus l l2)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          b10 b2))
                    (cic.lift cic.prop (cic.type cic.z)
                       (matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__ : cic.Term (cic.type cic.z) B =>
                           __1 : cic.Term (cic.type cic.z) B => R __ __1)
                          x b10 b2))))
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus l
                    (matita_arithmetics_nat.plus l2
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.univ (cic.type cic.z)))
                       (cic.lift cic.prop (cic.type cic.z)
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.plus l l2)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             b10 b2))
                       (cic.lift cic.prop (cic.type cic.z)
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             x b10 b2))))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus l
                       (matita_arithmetics_nat.plus l2
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.univ (cic.type cic.z)))
                          (cic.lift cic.prop (cic.type cic.z)
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (__ : cic.Term (cic.type cic.z) B =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 R __ __1)
                                x b10 b2))
                          (cic.lift cic.prop (cic.type cic.z)
                             (matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (__ : cic.Term (cic.type cic.z) B =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 R __ __1)
                                (matita_arithmetics_nat.plus l
                                   (matita_arithmetics_nat.plus l2
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                b10 b2))))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.univ (cic.type cic.z)))
                       (cic.lift cic.prop (cic.type cic.z)
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             (matita_arithmetics_nat.plus l
                                (matita_arithmetics_nat.plus l2
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))
                             b10 b2)))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.plus l l2)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.associative_plus l l2
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (matita_arithmetics_nat.plus l2
                    (matita_arithmetics_nat.plus l
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.plus l l2)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus l2
                             (matita_arithmetics_nat.plus l
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          x))
                    (matita_arithmetics_nat.assoc_plus1
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O) l
                       l2)
                    (matita_arithmetics_nat.plus l
                       (matita_arithmetics_nat.plus l2
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (matita_arithmetics_nat.associative_plus l l2
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_nat.plus l
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 l2)
              (matita_arithmetics_nat.commutative_plus
                 (matita_arithmetics_nat.plus l
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 l2)))
        l1 b1 H.

def lstar_inv_ltransitive :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               matita_arithmetics_lstar.inv_ltransitive
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (matita_arithmetics_lstar.lstar
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__ : cic.Term (cic.type cic.z) B =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1)))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      l1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind_plus
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (l2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop B
              (b1 : cic.Term (cic.type cic.z) B =>
               cic.prod (cic.type cic.z) cic.prop B
                 (b2 : cic.Term (cic.type cic.z) B =>
                  cic.prod cic.prop cic.prop
                    (matita_arithmetics_lstar.lstar
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (__1 : cic.Term (cic.type cic.z) B =>
                        __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                       (matita_arithmetics_nat.plus __ l2) b1 b2)
                    (__1 :
                       cic.Term cic.prop
                         (matita_arithmetics_lstar.lstar
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            (__1 : cic.Term (cic.type cic.z) B =>
                             __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                            (matita_arithmetics_nat.plus __ l2) b1 b2) =>
                     (A : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z) A
                             (__2 : cic.Term (cic.type cic.z) A =>
                              cic.univ cic.prop)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z) A
                             (__2 : cic.Term (cic.type cic.z) A =>
                              cic.univ cic.prop)) =>
                      matita_basics_logic.ex2
                        (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (b : cic.Term (cic.type cic.z) B =>
                        cic.lift cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__2 : cic.Term (cic.type cic.z) B =>
                              __3 : cic.Term (cic.type cic.z) B => R __2 __3)
                             __ b1 b))
                       (b : cic.Term (cic.type cic.z) B =>
                        cic.lift cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__2 : cic.Term (cic.type cic.z) B =>
                              __3 : cic.Term (cic.type cic.z) B => R __2 __3)
                             l2 b b2)))))))
        (l2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b1 : cic.Term (cic.type cic.z) B =>
         b2 : cic.Term (cic.type cic.z) B =>
         auto :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                (matita_arithmetics_nat.plus matita_arithmetics_nat.O l2) b1
                b2) =>
         matita_basics_logic.ex2_intro
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (b : cic.Term (cic.type cic.z) B =>
            cic.lift cic.prop cic.prop
              (matita_arithmetics_lstar.lstar
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (__ : cic.Term (cic.type cic.z) B =>
                  __1 : cic.Term (cic.type cic.z) B => R __ __1)
                 matita_arithmetics_nat.O b1 b))
           (b : cic.Term (cic.type cic.z) B =>
            cic.lift cic.prop cic.prop
              (matita_arithmetics_lstar.lstar
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (__ : cic.Term (cic.type cic.z) B =>
                  __1 : cic.Term (cic.type cic.z) B => R __ __1)
                 l2 b b2))
           b1
           (matita_arithmetics_lstar.lstar_O
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              b1)
           auto)
        (l10 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         IHl1 :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                (l2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod (cic.type cic.z) cic.prop B
                   (b1 : cic.Term (cic.type cic.z) B =>
                    cic.prod (cic.type cic.z) cic.prop B
                      (b2 : cic.Term (cic.type cic.z) B =>
                       cic.prod cic.prop cic.prop
                         (matita_arithmetics_lstar.lstar
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            (__ : cic.Term (cic.type cic.z) B =>
                             __1 : cic.Term (cic.type cic.z) B => R __ __1)
                            (matita_arithmetics_nat.plus l10 l2) b1 b2)
                         (__ :
                            cic.Term cic.prop
                              (matita_arithmetics_lstar.lstar
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    B)
                                 (__ : cic.Term (cic.type cic.z) B =>
                                  __1 : cic.Term (cic.type cic.z) B =>
                                  R __ __1)
                                 (matita_arithmetics_nat.plus l10 l2) b1 b2) =>
                          (A : cic.Univ (cic.type cic.z) =>
                           _P :
                             cic.Term (cic.type cic.z)
                               (cic.prod (cic.type cic.z) (cic.type cic.z) A
                                  (__1 : cic.Term (cic.type cic.z) A =>
                                   cic.univ cic.prop)) =>
                           _Q :
                             cic.Term (cic.type cic.z)
                               (cic.prod (cic.type cic.z) (cic.type cic.z) A
                                  (__1 : cic.Term (cic.type cic.z) A =>
                                   cic.univ cic.prop)) =>
                           matita_basics_logic.ex2
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             _P _Q)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            (b : cic.Term (cic.type cic.z) B =>
                             cic.lift cic.prop cic.prop
                               (matita_arithmetics_lstar.lstar
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__1 : cic.Term (cic.type cic.z) B =>
                                   __2 : cic.Term (cic.type cic.z) B =>
                                   R __1 __2)
                                  l10 b1 b))
                            (b : cic.Term (cic.type cic.z) B =>
                             cic.lift cic.prop cic.prop
                               (matita_arithmetics_lstar.lstar
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__1 : cic.Term (cic.type cic.z) B =>
                                   __2 : cic.Term (cic.type cic.z) B =>
                                   R __1 __2)
                                  l2 b b2))))))) =>
         l2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b1 : cic.Term (cic.type cic.z) B =>
         b2 : cic.Term (cic.type cic.z) B =>
         matita_basics_logic.eq_ind
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.plus (matita_arithmetics_nat.plus l10 l2)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.plus l10 l2)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   x_1) =>
            cic.lift cic.prop cic.prop
              (cic.prod cic.prop cic.prop
                 (matita_arithmetics_lstar.lstar
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__ : cic.Term (cic.type cic.z) B =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1)
                    x_1 b1 b2)
                 (__ :
                    cic.Term cic.prop
                      (matita_arithmetics_lstar.lstar
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__ : cic.Term (cic.type cic.z) B =>
                          __1 : cic.Term (cic.type cic.z) B => R __ __1)
                         x_1 b1 b2) =>
                  (A : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z) A
                          (__1 : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z) A
                          (__1 : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop)) =>
                   matita_basics_logic.ex2
                     (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (b : cic.Term (cic.type cic.z) B =>
                     cic.lift cic.prop cic.prop
                       (matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__1 : cic.Term (cic.type cic.z) B =>
                           __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                          (matita_arithmetics_nat.plus l10
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          b1 b))
                    (b : cic.Term (cic.type cic.z) B =>
                     cic.lift cic.prop cic.prop
                       (matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__1 : cic.Term (cic.type cic.z) B =>
                           __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                          l2 b b2)))))
           (H :
              cic.Term cic.prop
                (matita_arithmetics_lstar.lstar
                   (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                   (__ : cic.Term (cic.type cic.z) B =>
                    __1 : cic.Term (cic.type cic.z) B => R __ __1)
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.plus l10 l2)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   b1 b2) =>
            matita_basics_logic.ex2_ind
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (b : cic.Term (cic.type cic.z) B =>
               cic.lift cic.prop cic.prop
                 ((__ : cic.Term (cic.type cic.z) B =>
                   __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 b))
              (b : cic.Term (cic.type cic.z) B =>
               cic.lift cic.prop cic.prop
                 (matita_arithmetics_lstar.lstar
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__ : cic.Term (cic.type cic.z) B =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1)
                    (matita_arithmetics_nat.plus l10 l2) b b2))
              (_x_274 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z) A
                            (__ : cic.Term (cic.type cic.z) A =>
                             cic.univ cic.prop)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z) A
                            (__ : cic.Term (cic.type cic.z) A =>
                             cic.univ cic.prop)) =>
                     matita_basics_logic.ex2
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                      (b : cic.Term (cic.type cic.z) B =>
                       cic.lift cic.prop cic.prop
                         ((__ : cic.Term (cic.type cic.z) B =>
                           __1 : cic.Term (cic.type cic.z) B => R __ __1) b1
                            b))
                      (b : cic.Term (cic.type cic.z) B =>
                       cic.lift cic.prop cic.prop
                         (matita_arithmetics_lstar.lstar
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            (__ : cic.Term (cic.type cic.z) B =>
                             __1 : cic.Term (cic.type cic.z) B => R __ __1)
                            (matita_arithmetics_nat.plus l10 l2) b b2))) =>
               cic.lift cic.prop cic.prop
                 ((A : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z) A
                          (__ : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z) A
                          (__ : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop)) =>
                   matita_basics_logic.ex2
                     (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (b : cic.Term (cic.type cic.z) B =>
                     cic.lift cic.prop cic.prop
                       (matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__ : cic.Term (cic.type cic.z) B =>
                           __1 : cic.Term (cic.type cic.z) B => R __ __1)
                          (matita_arithmetics_nat.plus l10
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          b1 b))
                    (b : cic.Term (cic.type cic.z) B =>
                     cic.lift cic.prop cic.prop
                       (matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__ : cic.Term (cic.type cic.z) B =>
                           __1 : cic.Term (cic.type cic.z) B => R __ __1)
                          l2 b b2))))
              (b : cic.Term (cic.type cic.z) B =>
               Hb1 :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) B =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 b) =>
               Hb2 :
                 cic.Term cic.prop
                   (matita_arithmetics_lstar.lstar
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                      (__ : cic.Term (cic.type cic.z) B =>
                       __1 : cic.Term (cic.type cic.z) B => R __ __1)
                      (matita_arithmetics_nat.plus l10 l2) b b2) =>
               matita_basics_logic.ex2_ind
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (b0 : cic.Term (cic.type cic.z) B =>
                  cic.lift cic.prop cic.prop
                    (matita_arithmetics_lstar.lstar
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (__ : cic.Term (cic.type cic.z) B =>
                        __1 : cic.Term (cic.type cic.z) B => R __ __1)
                       l10 b b0))
                 (b0 : cic.Term (cic.type cic.z) B =>
                  cic.lift cic.prop cic.prop
                    (matita_arithmetics_lstar.lstar
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (__ : cic.Term (cic.type cic.z) B =>
                        __1 : cic.Term (cic.type cic.z) B => R __ __1)
                       l2 b0 b2))
                 (_x_274 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type cic.z) =>
                        _P :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z) A
                               (__ : cic.Term (cic.type cic.z) A =>
                                cic.univ cic.prop)) =>
                        _Q :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z) A
                               (__ : cic.Term (cic.type cic.z) A =>
                                cic.univ cic.prop)) =>
                        matita_basics_logic.ex2
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P
                          _Q)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (b0 : cic.Term (cic.type cic.z) B =>
                          cic.lift cic.prop cic.prop
                            (matita_arithmetics_lstar.lstar
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               (__ : cic.Term (cic.type cic.z) B =>
                                __1 : cic.Term (cic.type cic.z) B => R __ __1)
                               l10 b b0))
                         (b0 : cic.Term (cic.type cic.z) B =>
                          cic.lift cic.prop cic.prop
                            (matita_arithmetics_lstar.lstar
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               (__ : cic.Term (cic.type cic.z) B =>
                                __1 : cic.Term (cic.type cic.z) B => R __ __1)
                               l2 b0 b2))) =>
                  cic.lift cic.prop cic.prop
                    ((A : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z) A
                             (__ : cic.Term (cic.type cic.z) A =>
                              cic.univ cic.prop)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z) A
                             (__ : cic.Term (cic.type cic.z) A =>
                              cic.univ cic.prop)) =>
                      matita_basics_logic.ex2
                        (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (b0 : cic.Term (cic.type cic.z) B =>
                        cic.lift cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             (matita_arithmetics_nat.plus l10
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             b1 b0))
                       (b0 : cic.Term (cic.type cic.z) B =>
                        cic.lift cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             l2 b0 b2))))
                 (x : cic.Term (cic.type cic.z) B =>
                  _x_276 :
                    cic.Term cic.prop
                      (matita_arithmetics_lstar.lstar
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__ : cic.Term (cic.type cic.z) B =>
                          __1 : cic.Term (cic.type cic.z) B => R __ __1)
                         l10 b x) =>
                  _x_275 :
                    cic.Term cic.prop
                      (matita_arithmetics_lstar.lstar
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__ : cic.Term (cic.type cic.z) B =>
                          __1 : cic.Term (cic.type cic.z) B => R __ __1)
                         l2 x b2) =>
                  matita_basics_logic.ex2_intro
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (b0 : cic.Term (cic.type cic.z) B =>
                     cic.lift cic.prop cic.prop
                       (matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__ : cic.Term (cic.type cic.z) B =>
                           __1 : cic.Term (cic.type cic.z) B => R __ __1)
                          (matita_arithmetics_nat.plus l10
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          b1 b0))
                    (b0 : cic.Term (cic.type cic.z) B =>
                     cic.lift cic.prop cic.prop
                       (matita_arithmetics_lstar.lstar
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__ : cic.Term (cic.type cic.z) B =>
                           __1 : cic.Term (cic.type cic.z) B => R __ __1)
                          l2 b0 b2))
                    x
                    (matita_arithmetics_lstar.lstar_S
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (__ : cic.Term (cic.type cic.z) B =>
                        __1 : cic.Term (cic.type cic.z) B => R __ __1)
                       b1 b Hb1 l10 x _x_276)
                    _x_275)
                 (IHl1 l2 b b2 Hb2))
              (matita_arithmetics_lstar.lstar_inv_S
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (__ : cic.Term (cic.type cic.z) B =>
                  __1 : cic.Term (cic.type cic.z) B => R __ __1)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.plus l10 l2)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 b1 b2 H (matita_arithmetics_nat.plus l10 l2)
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus l10
                       (matita_arithmetics_nat.plus l2
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus l10 l2)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus l10
                          (matita_arithmetics_nat.plus l2
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus l10
                                (matita_arithmetics_nat.plus l2
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))
                             x))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus l10
                             (matita_arithmetics_nat.plus l2
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.plus l10 l2)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.associative_plus l10 l2
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.plus l10 l2)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.associative_plus l10 l2
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
           (matita_arithmetics_nat.plus
              (matita_arithmetics_nat.plus l10
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              l2)
           (matita_arithmetics_nat.plus_plus_comm_23 l10 l2
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        l1.

def lstar_inv_S_dx :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop B
                    (b1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) cic.prop B
                       (b2 : cic.Term (cic.type cic.z) B =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             (matita_arithmetics_nat.plus l
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             b1 b2)
                          (__ :
                             cic.Term cic.prop
                               (matita_arithmetics_lstar.lstar
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__ : cic.Term (cic.type cic.z) B =>
                                   __1 : cic.Term (cic.type cic.z) B =>
                                   R __ __1)
                                  (matita_arithmetics_nat.plus l
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  b1 b2) =>
                           (A : cic.Univ (cic.type cic.z) =>
                            _P :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                                   (__1 : cic.Term (cic.type cic.z) A =>
                                    cic.univ cic.prop)) =>
                            _Q :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                                   (__1 : cic.Term (cic.type cic.z) A =>
                                    cic.univ cic.prop)) =>
                            matita_basics_logic.ex2
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              _P _Q)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (b : cic.Term (cic.type cic.z) B =>
                              cic.lift cic.prop cic.prop
                                (matita_arithmetics_lstar.lstar
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   (__1 : cic.Term (cic.type cic.z) B =>
                                    __2 : cic.Term (cic.type cic.z) B =>
                                    R __1 __2)
                                   l b1 b))
                             (b : cic.Term (cic.type cic.z) B =>
                              cic.lift cic.prop cic.prop
                                ((__1 : cic.Term (cic.type cic.z) B =>
                                  __2 : cic.Term (cic.type cic.z) B =>
                                  R __1 __2) b b2)))))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b1 : cic.Term (cic.type cic.z) B =>
      b2 : cic.Term (cic.type cic.z) B =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             (matita_arithmetics_nat.plus l
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             b1 b2) =>
      matita_basics_logic.ex2_ind
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (b : cic.Term (cic.type cic.z) B =>
         cic.lift cic.prop cic.prop
           (matita_arithmetics_lstar.lstar
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              l b1 b))
        (b : cic.Term (cic.type cic.z) B =>
         cic.lift cic.prop cic.prop
           (matita_arithmetics_lstar.lstar
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O) b b2))
        (_x_274 :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) A
                      (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) A
                      (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
               matita_basics_logic.ex2
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (b : cic.Term (cic.type cic.z) B =>
                 cic.lift cic.prop cic.prop
                   (matita_arithmetics_lstar.lstar
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                      (__ : cic.Term (cic.type cic.z) B =>
                       __1 : cic.Term (cic.type cic.z) B => R __ __1)
                      l b1 b))
                (b : cic.Term (cic.type cic.z) B =>
                 cic.lift cic.prop cic.prop
                   (matita_arithmetics_lstar.lstar
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                      (__ : cic.Term (cic.type cic.z) B =>
                       __1 : cic.Term (cic.type cic.z) B => R __ __1)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O) b
                      b2))) =>
         cic.lift cic.prop cic.prop
           ((A : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) A
                    (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) A
                    (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
             matita_basics_logic.ex2
               (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P _Q)
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (b : cic.Term (cic.type cic.z) B =>
               cic.lift cic.prop cic.prop
                 (matita_arithmetics_lstar.lstar
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__ : cic.Term (cic.type cic.z) B =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1)
                    l b1 b))
              (b : cic.Term (cic.type cic.z) B =>
               cic.lift cic.prop cic.prop
                 ((__ : cic.Term (cic.type cic.z) B =>
                   __1 : cic.Term (cic.type cic.z) B => R __ __1) b b2))))
        (b : cic.Term (cic.type cic.z) B =>
         Hb1 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l b1 b) =>
         H0 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                (matita_arithmetics_nat.S matita_arithmetics_nat.O) b b2) =>
         matita_basics_logic.ex2_intro
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (b0 : cic.Term (cic.type cic.z) B =>
            cic.lift cic.prop cic.prop
              (matita_arithmetics_lstar.lstar
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (__ : cic.Term (cic.type cic.z) B =>
                  __1 : cic.Term (cic.type cic.z) B => R __ __1)
                 l b1 b0))
           (b0 : cic.Term (cic.type cic.z) B =>
            cic.lift cic.prop cic.prop
              ((__ : cic.Term (cic.type cic.z) B =>
                __1 : cic.Term (cic.type cic.z) B => R __ __1) b0 b2))
           b Hb1
           (matita_arithmetics_lstar.lstar_inv_step
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              b b2 H0))
        (matita_arithmetics_lstar.lstar_inv_ltransitive
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1)
           l (matita_arithmetics_nat.S matita_arithmetics_nat.O) b1 b2 H).

lstar_r :
  cic.Term (cic.type (cic.s cic.z))
    (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
       (cic.univ (cic.type cic.z))
       (B : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B))
          (_R :
             cic.Term (cic.type cic.z)
               ((__ : cic.Univ (cic.type cic.z) =>
                 matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                  (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
           cic.prod (cic.type cic.z) (cic.type cic.z)
             matita_arithmetics_nat.nat
             (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              (__1 : cic.Univ (cic.type cic.z) =>
               matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                (cic.lift (cic.type cic.z) (cic.type cic.z) B))))).

lstar_r_O :
  cic.Term cic.prop
    (cic.prod (cic.type (cic.s cic.z)) cic.prop (cic.univ (cic.type cic.z))
       (B : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) cic.prop
          (matita_basics_relations.relation
             (cic.lift (cic.type cic.z) (cic.type cic.z) B))
          (R :
             cic.Term (cic.type cic.z)
               (matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
           cic.prod (cic.type cic.z) cic.prop B
             (b : cic.Term (cic.type cic.z) B =>
              matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B) R
                matita_arithmetics_nat.O b b)))).

lstar_r_S :
  cic.Term cic.prop
    (cic.prod (cic.type (cic.s cic.z)) cic.prop (cic.univ (cic.type cic.z))
       (B : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) cic.prop
          (matita_basics_relations.relation
             (cic.lift (cic.type cic.z) (cic.type cic.z) B))
          (R :
             cic.Term (cic.type cic.z)
               (matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
           cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
             (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod (cic.type cic.z) cic.prop B
                (b1 : cic.Term (cic.type cic.z) B =>
                 cic.prod (cic.type cic.z) cic.prop B
                   (b : cic.Term (cic.type cic.z) B =>
                    cic.prod cic.prop cic.prop
                      (matita_arithmetics_lstar.lstar_r
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B) R l
                         b1 b)
                      (__ :
                         cic.Term cic.prop
                           (matita_arithmetics_lstar.lstar_r
                              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                              R l b1 b) =>
                       cic.prod (cic.type cic.z) cic.prop B
                         (b2 : cic.Term (cic.type cic.z) B =>
                          cic.prod cic.prop cic.prop (R b b2)
                            (__1 : cic.Term cic.prop (R b b2) =>
                             matita_arithmetics_lstar.lstar_r
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               R
                               (matita_arithmetics_nat.plus l
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               b1 b2))))))))).

def match_lstar_r_Prop :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) (cic.type cic.z) B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z) (cic.type cic.z) B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop (cic.type cic.z)
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ cic.prop)))))
                 (return_type :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z) (cic.type cic.z) B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z) (cic.type cic.z) B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop (cic.type cic.z)
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ cic.prop))))) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_r_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_r_O :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_r_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod cic.prop cic.prop
                       (cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (l :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (b1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop cic.prop
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R l b1 b)
                                   (__ :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b) =>
                                    cic.prod (cic.type cic.z) cic.prop B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop cic.prop (_R b b2)
                                         (__1 :
                                            cic.Term cic.prop (_R b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_r_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R l b1 b __ b2 __1))))))))
                       (case_lstar_r_S :
                          cic.Term cic.prop
                            (cic.prod (cic.type cic.z) cic.prop
                               matita_arithmetics_nat.nat
                               (l :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod (cic.type cic.z) cic.prop B
                                  (b1 : cic.Term (cic.type cic.z) B =>
                                   cic.prod (cic.type cic.z) cic.prop B
                                     (b : cic.Term (cic.type cic.z) B =>
                                      cic.prod cic.prop cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b)
                                        (__ :
                                           cic.Term cic.prop
                                             (matita_arithmetics_lstar.lstar_r
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) B)
                                                _R l b1 b) =>
                                         cic.prod (cic.type cic.z) cic.prop B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop cic.prop
                                              (_R b b2)
                                              (__1 :
                                                 cic.Term cic.prop (_R b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_r_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R l b1 b __ b2 __1)))))))) =>
                        cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop cic.prop
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, b ]
  match_lstar_r_Prop B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_r_O B _R b) -->
  case_lstar_r_O b.

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, l, b1, b, __, b2, __1 ]
  match_lstar_r_Prop B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_r_S B _R l b1 b __ b2 __1) -->
  case_lstar_r_S l b1 b __ b2 __1.

def match_lstar_r_Type5 :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z)
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop
                             (cic.type
                                (cic.s
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))))))))
                 (return_type :
                    cic.Term
                      (cic.type
                         (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                            B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))))))) =>
                  cic.prod
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_r_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_r_O :
                       cic.Term
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_r_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.prod (cic.type cic.z)
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          matita_arithmetics_nat.nat
                          (l :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             B
                             (b1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type
                                      (cic.s
                                         (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R l b1 b)
                                   (__ :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b) =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type
                                         (cic.s
                                            (cic.s
                                               (cic.s (cic.s (cic.s cic.z))))))
                                      B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop
                                         (cic.type
                                            (cic.s
                                               (cic.s
                                                  (cic.s
                                                     (cic.s (cic.s cic.z))))))
                                         (_R b b2)
                                         (__1 :
                                            cic.Term cic.prop (_R b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_r_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R l b1 b __ b2 __1))))))))
                       (case_lstar_r_S :
                          cic.Term
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            (cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               matita_arithmetics_nat.nat
                               (l :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod (cic.type cic.z)
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  B
                                  (b1 : cic.Term (cic.type cic.z) B =>
                                   cic.prod (cic.type cic.z)
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     B
                                     (b : cic.Term (cic.type cic.z) B =>
                                      cic.prod cic.prop
                                        (cic.type
                                           (cic.s
                                              (cic.s
                                                 (cic.s (cic.s (cic.s cic.z))))))
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b)
                                        (__ :
                                           cic.Term cic.prop
                                             (matita_arithmetics_lstar.lstar_r
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) B)
                                                _R l b1 b) =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type
                                              (cic.s
                                                 (cic.s
                                                    (cic.s
                                                       (cic.s (cic.s cic.z))))))
                                           B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type
                                                 (cic.s
                                                    (cic.s
                                                       (cic.s
                                                          (cic.s
                                                             (cic.s cic.z))))))
                                              (_R b b2)
                                              (__1 :
                                                 cic.Term cic.prop (_R b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_r_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R l b1 b __ b2 __1)))))))) =>
                        cic.prod (cic.type cic.z)
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type
                                      (cic.s
                                         (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, b ]
  match_lstar_r_Type5 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_r_O B _R b) -->
  case_lstar_r_O b.

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, l, b1, b, __, b2, __1 ]
  match_lstar_r_Type5 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_r_S B _R l b1 b __ b2 __1) -->
  case_lstar_r_S l b1 b __ b2 __1.

def match_lstar_r_Type4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z)
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z))))))))))
                 (return_type :
                    cic.Term
                      (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_r_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_r_O :
                       cic.Term
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_r_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          matita_arithmetics_nat.nat
                          (l :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             B
                             (b1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R l b1 b)
                                   (__ :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b) =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type
                                         (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                      B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop
                                         (cic.type
                                            (cic.s
                                               (cic.s (cic.s (cic.s cic.z)))))
                                         (_R b b2)
                                         (__1 :
                                            cic.Term cic.prop (_R b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_r_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R l b1 b __ b2 __1))))))))
                       (case_lstar_r_S :
                          cic.Term
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            (cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               matita_arithmetics_nat.nat
                               (l :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod (cic.type cic.z)
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  B
                                  (b1 : cic.Term (cic.type cic.z) B =>
                                   cic.prod (cic.type cic.z)
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     B
                                     (b : cic.Term (cic.type cic.z) B =>
                                      cic.prod cic.prop
                                        (cic.type
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b)
                                        (__ :
                                           cic.Term cic.prop
                                             (matita_arithmetics_lstar.lstar_r
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) B)
                                                _R l b1 b) =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type
                                              (cic.s
                                                 (cic.s (cic.s (cic.s cic.z)))))
                                           B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type
                                                 (cic.s
                                                    (cic.s
                                                       (cic.s (cic.s cic.z)))))
                                              (_R b b2)
                                              (__1 :
                                                 cic.Term cic.prop (_R b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_r_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R l b1 b __ b2 __1)))))))) =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, b ]
  match_lstar_r_Type4 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_r_O B _R b) -->
  case_lstar_r_O b.

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, l, b1, b, __, b2, __1 ]
  match_lstar_r_Type4 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_r_S B _R l b1 b __ b2 __1) -->
  case_lstar_r_S l b1 b __ b2 __1.

def match_lstar_r_Type3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type (cic.s (cic.s (cic.s cic.z)))))))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_r_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_r_O :
                       cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_r_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          matita_arithmetics_nat.nat
                          (l :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                             (b1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R l b1 b)
                                   (__ :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b) =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop
                                         (cic.type
                                            (cic.s (cic.s (cic.s cic.z))))
                                         (_R b b2)
                                         (__1 :
                                            cic.Term cic.prop (_R b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_r_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R l b1 b __ b2 __1))))))))
                       (case_lstar_r_S :
                          cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               matita_arithmetics_nat.nat
                               (l :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod (cic.type cic.z)
                                  (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                                  (b1 : cic.Term (cic.type cic.z) B =>
                                   cic.prod (cic.type cic.z)
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     B
                                     (b : cic.Term (cic.type cic.z) B =>
                                      cic.prod cic.prop
                                        (cic.type
                                           (cic.s (cic.s (cic.s cic.z))))
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b)
                                        (__ :
                                           cic.Term cic.prop
                                             (matita_arithmetics_lstar.lstar_r
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) B)
                                                _R l b1 b) =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type
                                              (cic.s (cic.s (cic.s cic.z))))
                                           B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type
                                                 (cic.s (cic.s (cic.s cic.z))))
                                              (_R b b2)
                                              (__1 :
                                                 cic.Term cic.prop (_R b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_r_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R l b1 b __ b2 __1)))))))) =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, b ]
  match_lstar_r_Type3 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_r_O B _R b) -->
  case_lstar_r_O b.

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, l, b1, b, __, b2, __1 ]
  match_lstar_r_Type3 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_r_S B _R l b1 b __ b2 __1) -->
  case_lstar_r_S l b1 b __ b2 __1.

def match_lstar_r_Type2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s cic.z)))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type (cic.s (cic.s cic.z))))))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type (cic.s (cic.s cic.z)))))))) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_r_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_r_O :
                       cic.Term (cic.type (cic.s (cic.s cic.z)))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_r_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat
                          (l :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) B
                             (b1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R l b1 b)
                                   (__ :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b) =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (_R b b2)
                                         (__1 :
                                            cic.Term cic.prop (_R b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_r_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R l b1 b __ b2 __1))))))))
                       (case_lstar_r_S :
                          cic.Term (cic.type (cic.s (cic.s cic.z)))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat
                               (l :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) B
                                  (b1 : cic.Term (cic.type cic.z) B =>
                                   cic.prod (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) B
                                     (b : cic.Term (cic.type cic.z) B =>
                                      cic.prod cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b)
                                        (__ :
                                           cic.Term cic.prop
                                             (matita_arithmetics_lstar.lstar_r
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) B)
                                                _R l b1 b) =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z))) B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (_R b b2)
                                              (__1 :
                                                 cic.Term cic.prop (_R b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_r_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R l b1 b __ b2 __1)))))))) =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, b ]
  match_lstar_r_Type2 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_r_O B _R b) -->
  case_lstar_r_O b.

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, l, b1, b, __, b2, __1 ]
  match_lstar_r_Type2 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_r_S B _R l b1 b __ b2 __1) -->
  case_lstar_r_S l b1 b __ b2 __1.

def match_lstar_r_Type1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s cic.z))
                 (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type (cic.s cic.z)))))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type (cic.s cic.z))))))) =>
                  cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                    (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_r_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_r_O :
                       cic.Term (cic.type (cic.s cic.z))
                         (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_r_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod (cic.type (cic.s cic.z))
                       (cic.type (cic.s cic.z))
                       (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                          matita_arithmetics_nat.nat
                          (l :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                             B
                             (b1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type (cic.s cic.z)) B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop (cic.type (cic.s cic.z))
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R l b1 b)
                                   (__ :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b) =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop
                                         (cic.type (cic.s cic.z)) (_R b b2)
                                         (__1 :
                                            cic.Term cic.prop (_R b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_r_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R l b1 b __ b2 __1))))))))
                       (case_lstar_r_S :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s cic.z))
                               matita_arithmetics_nat.nat
                               (l :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod (cic.type cic.z)
                                  (cic.type (cic.s cic.z)) B
                                  (b1 : cic.Term (cic.type cic.z) B =>
                                   cic.prod (cic.type cic.z)
                                     (cic.type (cic.s cic.z)) B
                                     (b : cic.Term (cic.type cic.z) B =>
                                      cic.prod cic.prop
                                        (cic.type (cic.s cic.z))
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b)
                                        (__ :
                                           cic.Term cic.prop
                                             (matita_arithmetics_lstar.lstar_r
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) B)
                                                _R l b1 b) =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type (cic.s cic.z)) B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type (cic.s cic.z))
                                              (_R b b2)
                                              (__1 :
                                                 cic.Term cic.prop (_R b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_r_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R l b1 b __ b2 __1)))))))) =>
                        cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                             B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z)
                                (cic.type (cic.s cic.z)) B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop (cic.type (cic.s cic.z))
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, b ]
  match_lstar_r_Type1 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_r_O B _R b) -->
  case_lstar_r_O b.

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, l, b1, b, __, b2, __1 ]
  match_lstar_r_Type1 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_r_S B _R l b1 b __ b2 __1) -->
  case_lstar_r_S l b1 b __ b2 __1.

def match_lstar_r_Type0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    matita_arithmetics_nat.nat
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) B
                          (__2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type cic.z))))))
                 (return_type :
                    cic.Term (cic.type (cic.s cic.z))
                      (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                         matita_arithmetics_nat.nat
                         (__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z)
                               (cic.type (cic.s cic.z)) B
                               (__2 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type cic.z)))))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) B
                       (b : cic.Term (cic.type cic.z) B =>
                        return_type matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_r_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             _R b)))
                    (case_lstar_r_O :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z) B
                            (b : cic.Term (cic.type cic.z) B =>
                             return_type matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_r_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  _R b))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat
                          (l :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) (cic.type cic.z) B
                             (b1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) (cic.type cic.z) B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop (cic.type cic.z)
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R l b1 b)
                                   (__ :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b) =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type cic.z) B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop (cic.type cic.z)
                                         (_R b b2)
                                         (__1 :
                                            cic.Term cic.prop (_R b b2) =>
                                          return_type
                                            (matita_arithmetics_nat.plus l
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            b1 b2
                                            (matita_arithmetics_lstar.lstar_r_S
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) B)
                                               _R l b1 b __ b2 __1))))))))
                       (case_lstar_r_S :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               matita_arithmetics_nat.nat
                               (l :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod (cic.type cic.z) (cic.type cic.z) B
                                  (b1 : cic.Term (cic.type cic.z) B =>
                                   cic.prod (cic.type cic.z) (cic.type cic.z)
                                     B
                                     (b : cic.Term (cic.type cic.z) B =>
                                      cic.prod cic.prop (cic.type cic.z)
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R l b1 b)
                                        (__ :
                                           cic.Term cic.prop
                                             (matita_arithmetics_lstar.lstar_r
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) B)
                                                _R l b1 b) =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type cic.z) B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop
                                              (cic.type cic.z) (_R b b2)
                                              (__1 :
                                                 cic.Term cic.prop (_R b b2) =>
                                               return_type
                                                 (matita_arithmetics_nat.plus
                                                    l
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 b1 b2
                                                 (matita_arithmetics_lstar.lstar_r_S
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) B)
                                                    _R l b1 b __ b2 __1)))))))) =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) (cic.type cic.z) B
                             (__1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) (cic.type cic.z) B
                                (__2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop (cic.type cic.z)
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      _R __ __1 __2)
                                   (z :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           _R __ __1 __2) =>
                                    return_type __ __1 __2 z)))))))))).

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, b ]
  match_lstar_r_Type0 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_r_O B _R b) -->
  case_lstar_r_O b.

[ B, _R, return_type, case_lstar_r_O, case_lstar_r_S, l, b1, b, __, b2, __1 ]
  match_lstar_r_Type0 B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_r_S B _R l b1 b __ b2 __1) -->
  case_lstar_r_S l b1 b __ b2 __1.

def filter_lstar_r_Prop :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) cic.prop B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z) cic.prop
                          (cic.prod cic.prop (cic.type cic.z)
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ cic.prop))
                          (return_type :
                             cic.Term (cic.type cic.z)
                               (cic.prod cic.prop (cic.type cic.z)
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ cic.prop)) =>
                           cic.prod cic.prop cic.prop
                             (cic.prod cic.prop cic.prop
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term cic.prop
                                  (cic.prod cic.prop cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar_r
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop cic.prop
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_r_Prop (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_r_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_r_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, l, b1, b, __, b2, __1, return_type, return ]
  filter_lstar_r_Prop (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_r_S B R l b1 b __ b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_r_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R l b1 b __ b2 __1).

def filter_lstar_r_Type5 :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z)
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.prod cic.prop
                             (cic.type
                                (cic.s
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))))
                          (return_type :
                             cic.Term
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))))) =>
                           cic.prod
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.prod cic.prop
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.prod cic.prop
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar_r
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_r_Type5 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_r_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_r_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, l, b1, b, __, b2, __1, return_type, return ]
  filter_lstar_r_Type5 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_r_S B R l b1 b __ b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_r_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R l b1 b __ b2 __1).

def filter_lstar_r_Type4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          (return_type :
                             cic.Term
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
                           cic.prod
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.prod cic.prop
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar_r
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_r_Type4 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_r_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_r_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, l, b1, b, __, b2, __1, return_type, return ]
  filter_lstar_r_Type4 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_r_S B R l b1 b __ b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_r_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R l b1 b __ b2 __1).

def filter_lstar_r_Type3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ
                                (cic.type (cic.s (cic.s (cic.s cic.z))))))
                          (return_type :
                             cic.Term
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ
                                     (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
                           cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.prod cic.prop
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar_r
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_r_Type3 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_r_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_r_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, l, b1, b, __, b2, __1, return_type, return ]
  filter_lstar_r_Type3 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_r_S B R l b1 b __ b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_r_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R l b1 b __ b2 __1).

def filter_lstar_r_Type2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type (cic.s (cic.s cic.z)))))
                          (return_type :
                             cic.Term
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
                           cic.prod (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term (cic.type (cic.s (cic.s cic.z)))
                                  (cic.prod cic.prop
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar_r
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_r_Type2 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_r_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_r_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, l, b1, b, __, b2, __1, return_type, return ]
  filter_lstar_r_Type2 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_r_S B R l b1 b __ b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_r_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R l b1 b __ b2 __1).

def filter_lstar_r_Type1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s cic.z))
                          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type (cic.s cic.z))))
                          (return_type :
                             cic.Term (cic.type (cic.s (cic.s cic.z)))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type (cic.s cic.z)))) =>
                           cic.prod (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z))
                             (cic.prod cic.prop (cic.type (cic.s cic.z))
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term (cic.type (cic.s cic.z))
                                  (cic.prod cic.prop (cic.type (cic.s cic.z))
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar_r
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop (cic.type (cic.s cic.z))
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_r_Type1 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_r_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_r_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, l, b1, b, __, b2, __1, return_type, return ]
  filter_lstar_r_Type1 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_r_S B R l b1 b __ b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_r_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R l b1 b __ b2 __1).

def filter_lstar_r_Type0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                 matita_arithmetics_nat.nat
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) B
                    (__1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) B
                       (__2 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                          (cic.prod cic.prop (cic.type (cic.s cic.z))
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                _R __ __1 __2)
                             (z :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2) =>
                              cic.univ (cic.type cic.z)))
                          (return_type :
                             cic.Term (cic.type (cic.s cic.z))
                               (cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     _R __ __1 __2)
                                  (z :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          _R __ __1 __2) =>
                                   cic.univ (cic.type cic.z))) =>
                           cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.prod cic.prop (cic.type cic.z)
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))
                             (return :
                                cic.Term (cic.type cic.z)
                                  (cic.prod cic.prop (cic.type cic.z)
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2)
                                     (z :
                                        cic.Term cic.prop
                                          (matita_arithmetics_lstar.lstar_r
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) B)
                                             _R __ __1 __2) =>
                                      return_type z)) =>
                              cic.prod cic.prop (cic.type cic.z)
                                (matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   _R __ __1 __2)
                                (z :
                                   cic.Term cic.prop
                                     (matita_arithmetics_lstar.lstar_r
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        _R __ __1 __2) =>
                                 return_type z))))))))).

[ B, R, b, return_type, return ]
  filter_lstar_r_Type0 (B) (R) (matita_arithmetics_nat.O) (b) (b) return_type
    return (matita_arithmetics_lstar.lstar_r_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_r_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ B, R, l, b1, b, __, b2, __1, return_type, return ]
  filter_lstar_r_Type0 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_r_S B R l b1 b __ b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_r_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R l b1 b __ b2 __1).

def match_lstar_r :
      return_sort : cic.Sort ->
      B : cic.Univ (cic.type cic.z) ->
      _R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) ->
      return_type :
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
         __1 : cic.Term (cic.type cic.z) B ->
         __2 : cic.Term (cic.type cic.z) B ->
         z :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R __ __1 __2) ->
         cic.Univ return_sort) ->
      case_lstar_r_O :
        (b : cic.Term (cic.type cic.z) B ->
         cic.Term return_sort
           (return_type matita_arithmetics_nat.O b b
              (matita_arithmetics_lstar.lstar_r_O
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R b))) ->
      case_lstar_r_S :
        (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
         b1 : cic.Term (cic.type cic.z) B ->
         b : cic.Term (cic.type cic.z) B ->
         __ :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R l b1 b) ->
         b2 : cic.Term (cic.type cic.z) B ->
         __1 : cic.Term cic.prop (_R b b2) ->
         cic.Term return_sort
           (return_type
              (matita_arithmetics_nat.plus l
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              b1 b2
              (matita_arithmetics_lstar.lstar_r_S
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R l b1 b __
                 b2 __1))) ->
      __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      __1 : cic.Term (cic.type cic.z) B ->
      __2 : cic.Term (cic.type cic.z) B ->
      z :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar_r
             (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R __ __1 __2) ->
      cic.Term return_sort (return_type __ __1 __2 z).

[  ] match_lstar_r cic.prop --> matita_arithmetics_lstar.match_lstar_r_Prop.

[  ]
  match_lstar_r (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) -->
  matita_arithmetics_lstar.match_lstar_r_Type5.

[  ] match_lstar_r (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) -->
  matita_arithmetics_lstar.match_lstar_r_Type4.

[  ] match_lstar_r (cic.type (cic.s (cic.s (cic.s cic.z)))) -->
  matita_arithmetics_lstar.match_lstar_r_Type3.

[  ] match_lstar_r (cic.type (cic.s (cic.s cic.z))) -->
  matita_arithmetics_lstar.match_lstar_r_Type2.

[  ] match_lstar_r (cic.type (cic.s cic.z)) -->
  matita_arithmetics_lstar.match_lstar_r_Type1.

[  ] match_lstar_r (cic.type cic.z) -->
  matita_arithmetics_lstar.match_lstar_r_Type0.

[ return_sort, B, _R, return_type, case_lstar_r_O, case_lstar_r_S, b ]
  match_lstar_r return_sort B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.O) (b) (b)
    (matita_arithmetics_lstar.lstar_r_O B _R b) -->
  case_lstar_r_O b.

[ return_sort, B, _R, return_type, case_lstar_r_O, case_lstar_r_S, l, b1, b,
  __, b2, __1 ]
  match_lstar_r return_sort B _R return_type case_lstar_r_O case_lstar_r_S
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) (matita_arithmetics_lstar.lstar_r_S B _R l b1 b __ b2 __1) -->
  case_lstar_r_S l b1 b __ b2 __1.

def filter_lstar_r :
      return_sort : cic.Sort ->
      B : cic.Univ (cic.type cic.z) ->
      _R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) ->
      __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      __1 : cic.Term (cic.type cic.z) B ->
      __2 : cic.Term (cic.type cic.z) B ->
      return_type :
        (z :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R __ __1 __2) ->
         cic.Univ return_sort) ->
      return :
        (z :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R __ __1 __2) ->
         cic.Term return_sort (return_type z)) ->
      z :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar_r
             (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R __ __1 __2) ->
      cic.Term return_sort (return_type z).

[  ] filter_lstar_r cic.prop -->
  matita_arithmetics_lstar.filter_lstar_r_Prop.

[  ]
  filter_lstar_r (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) -->
  matita_arithmetics_lstar.filter_lstar_r_Type5.

[  ] filter_lstar_r (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) -->
  matita_arithmetics_lstar.filter_lstar_r_Type4.

[  ] filter_lstar_r (cic.type (cic.s (cic.s (cic.s cic.z)))) -->
  matita_arithmetics_lstar.filter_lstar_r_Type3.

[  ] filter_lstar_r (cic.type (cic.s (cic.s cic.z))) -->
  matita_arithmetics_lstar.filter_lstar_r_Type2.

[  ] filter_lstar_r (cic.type (cic.s cic.z)) -->
  matita_arithmetics_lstar.filter_lstar_r_Type1.

[  ] filter_lstar_r (cic.type cic.z) -->
  matita_arithmetics_lstar.filter_lstar_r_Type0.

[ return_sort1, B, R, b, return_type, return ]
  filter_lstar_r return_sort1 (B) (R) (matita_arithmetics_nat.O) (b) (b)
    return_type return (matita_arithmetics_lstar.lstar_r_O B R b) -->
  return
    (matita_arithmetics_lstar.lstar_r_O
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R b).

[ return_sort1, B, R, l, b1, b, __, b2, __1, return_type, return ]
  filter_lstar_r return_sort1 (B) (R)
    (matita_arithmetics_nat.plus l
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (b1) (b2) return_type return
    (matita_arithmetics_lstar.lstar_r_S B R l b1 b __ b2 __1) -->
  return
    (matita_arithmetics_lstar.lstar_r_S
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) R l b1 b __ b2 __1).

def lstar_r_ind :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat
                    (x_1337 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) (cic.type cic.z) B
                       (x_1336 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z) (cic.type cic.z) B
                          (x_1335 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop (cic.type cic.z)
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (__ : cic.Term (cic.type cic.z) B =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 _R __ __1)
                                x_1337 x_1336 x_1335)
                             (_x_1338 :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1337 x_1336 x_1335) =>
                              cic.univ cic.prop)))))
                 (Q_ :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         matita_arithmetics_nat.nat
                         (x_1337 :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z) (cic.type cic.z) B
                            (x_1336 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z) (cic.type cic.z) B
                               (x_1335 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop (cic.type cic.z)
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1337 x_1336 x_1335)
                                  (_x_1338 :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          (__ :
                                             cic.Term (cic.type cic.z) B =>
                                           __1 :
                                             cic.Term (cic.type cic.z) B =>
                                           _R __ __1)
                                          x_1337 x_1336 x_1335) =>
                                   cic.univ cic.prop))))) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop B
                       (b : cic.Term (cic.type cic.z) B =>
                        (x_1337 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         x_1336 : cic.Term (cic.type cic.z) B =>
                         x_1335 : cic.Term (cic.type cic.z) B =>
                         _x_1338 :
                           cic.Term cic.prop
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (__ : cic.Term (cic.type cic.z) B =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 _R __ __1)
                                x_1337 x_1336 x_1335) =>
                         Q_ x_1337 x_1336 x_1335 _x_1338)
                          matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_r_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => _R __ __1)
                             b)))
                    (_H_lstar_r_O :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop B
                            (b : cic.Term (cic.type cic.z) B =>
                             (x_1337 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              x_1336 : cic.Term (cic.type cic.z) B =>
                              x_1335 : cic.Term (cic.type cic.z) B =>
                              _x_1338 :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1337 x_1336 x_1335) =>
                              Q_ x_1337 x_1336 x_1335 _x_1338)
                               matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_r_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__ : cic.Term (cic.type cic.z) B =>
                                   __1 : cic.Term (cic.type cic.z) B =>
                                   _R __ __1)
                                  b))) =>
                     cic.prod cic.prop cic.prop
                       (cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (l :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (b1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop cic.prop
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      (__ : cic.Term (cic.type cic.z) B =>
                                       __1 : cic.Term (cic.type cic.z) B =>
                                       _R __ __1)
                                      l b1 b)
                                   (x_1340 :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           (__ :
                                              cic.Term (cic.type cic.z) B =>
                                            __1 :
                                              cic.Term (cic.type cic.z) B =>
                                            _R __ __1)
                                           l b1 b) =>
                                    cic.prod (cic.type cic.z) cic.prop B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop cic.prop
                                         ((__ :
                                             cic.Term (cic.type cic.z) B =>
                                           __1 :
                                             cic.Term (cic.type cic.z) B =>
                                           _R __ __1) b b2)
                                         (x_1339 :
                                            cic.Term cic.prop
                                              ((__ :
                                                  cic.Term (cic.type cic.z) B =>
                                                __1 :
                                                  cic.Term (cic.type cic.z) B =>
                                                _R __ __1) b b2) =>
                                          cic.prod cic.prop cic.prop
                                            ((x_1337 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              x_1336 :
                                                cic.Term (cic.type cic.z) B =>
                                              x_1335 :
                                                cic.Term (cic.type cic.z) B =>
                                              _x_1338 :
                                                cic.Term cic.prop
                                                  (matita_arithmetics_lstar.lstar_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) B)
                                                     (__ :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      __1 :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      _R __ __1)
                                                     x_1337 x_1336 x_1335) =>
                                              Q_ x_1337 x_1336 x_1335 _x_1338)
                                               l b1 b x_1340)
                                            (_x_1342 :
                                               cic.Term cic.prop
                                                 ((x_1337 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1336 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1335 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1338 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar_r
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1337 x_1336
                                                          x_1335) =>
                                                   Q_ x_1337 x_1336 x_1335
                                                     _x_1338)
                                                    l b1 b x_1340) =>
                                             (x_1337 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              x_1336 :
                                                cic.Term (cic.type cic.z) B =>
                                              x_1335 :
                                                cic.Term (cic.type cic.z) B =>
                                              _x_1338 :
                                                cic.Term cic.prop
                                                  (matita_arithmetics_lstar.lstar_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) B)
                                                     (__ :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      __1 :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      _R __ __1)
                                                     x_1337 x_1336 x_1335) =>
                                              Q_ x_1337 x_1336 x_1335 _x_1338)
                                               (matita_arithmetics_nat.plus l
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               b1 b2
                                               (matita_arithmetics_lstar.lstar_r_S
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) B)
                                                  (__ :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   __1 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _R __ __1)
                                                  l b1 b x_1340 b2 x_1339)))))))))
                       (_H_lstar_r_S :
                          cic.Term cic.prop
                            (cic.prod (cic.type cic.z) cic.prop
                               matita_arithmetics_nat.nat
                               (l :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod (cic.type cic.z) cic.prop B
                                  (b1 : cic.Term (cic.type cic.z) B =>
                                   cic.prod (cic.type cic.z) cic.prop B
                                     (b : cic.Term (cic.type cic.z) B =>
                                      cic.prod cic.prop cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           (__ :
                                              cic.Term (cic.type cic.z) B =>
                                            __1 :
                                              cic.Term (cic.type cic.z) B =>
                                            _R __ __1)
                                           l b1 b)
                                        (x_1340 :
                                           cic.Term cic.prop
                                             (matita_arithmetics_lstar.lstar_r
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) B)
                                                (__ :
                                                   cic.Term (cic.type cic.z)
                                                     B =>
                                                 __1 :
                                                   cic.Term (cic.type cic.z)
                                                     B =>
                                                 _R __ __1)
                                                l b1 b) =>
                                         cic.prod (cic.type cic.z) cic.prop B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop cic.prop
                                              ((__ :
                                                  cic.Term (cic.type cic.z) B =>
                                                __1 :
                                                  cic.Term (cic.type cic.z) B =>
                                                _R __ __1) b b2)
                                              (x_1339 :
                                                 cic.Term cic.prop
                                                   ((__ :
                                                       cic.Term
                                                         (cic.type cic.z) B =>
                                                     __1 :
                                                       cic.Term
                                                         (cic.type cic.z) B =>
                                                     _R __ __1) b b2) =>
                                               cic.prod cic.prop cic.prop
                                                 ((x_1337 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1336 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1335 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1338 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar_r
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1337 x_1336
                                                          x_1335) =>
                                                   Q_ x_1337 x_1336 x_1335
                                                     _x_1338)
                                                    l b1 b x_1340)
                                                 (_x_1342 :
                                                    cic.Term cic.prop
                                                      ((x_1337 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        x_1336 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        x_1335 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        _x_1338 :
                                                          cic.Term cic.prop
                                                            (matita_arithmetics_lstar.lstar_r
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    cic.z)
                                                                  B)
                                                               (__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z) B =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z) B =>
                                                                _R __ __1)
                                                               x_1337 x_1336
                                                               x_1335) =>
                                                        Q_ x_1337 x_1336
                                                          x_1335 _x_1338)
                                                         l b1 b x_1340) =>
                                                  (x_1337 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1336 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1335 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1338 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar_r
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1337 x_1336
                                                          x_1335) =>
                                                   Q_ x_1337 x_1336 x_1335
                                                     _x_1338)
                                                    (matita_arithmetics_nat.plus
                                                       l
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    b1 b2
                                                    (matita_arithmetics_lstar.lstar_r_S
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) B)
                                                       (__ :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        __1 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        _R __ __1)
                                                       l b1 b x_1340 b2
                                                       x_1339))))))))) =>
                        cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (x_1337 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (x_1336 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (x_1335 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop cic.prop
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      (__ : cic.Term (cic.type cic.z) B =>
                                       __1 : cic.Term (cic.type cic.z) B =>
                                       _R __ __1)
                                      x_1337 x_1336 x_1335)
                                   (x_1338 :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           (__ :
                                              cic.Term (cic.type cic.z) B =>
                                            __1 :
                                              cic.Term (cic.type cic.z) B =>
                                            _R __ __1)
                                           x_1337 x_1336 x_1335) =>
                                    (x_13371 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     x_13361 : cic.Term (cic.type cic.z) B =>
                                     x_13351 : cic.Term (cic.type cic.z) B =>
                                     _x_1338 :
                                       cic.Term cic.prop
                                         (matita_arithmetics_lstar.lstar_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            (__ :
                                               cic.Term (cic.type cic.z) B =>
                                             __1 :
                                               cic.Term (cic.type cic.z) B =>
                                             _R __ __1)
                                            x_13371 x_13361 x_13351) =>
                                     Q_ x_13371 x_13361 x_13351 _x_1338)
                                      x_1337 x_1336 x_1335 x_1338)))))))))).

def lstar_r_ind_body :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat
                    (x_1337 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) (cic.type cic.z) B
                       (x_1336 : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z) (cic.type cic.z) B
                          (x_1335 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop (cic.type cic.z)
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (__ : cic.Term (cic.type cic.z) B =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 _R __ __1)
                                x_1337 x_1336 x_1335)
                             (_x_1338 :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1337 x_1336 x_1335) =>
                              cic.univ cic.prop)))))
                 (Q_ :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         matita_arithmetics_nat.nat
                         (x_1337 :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod (cic.type cic.z) (cic.type cic.z) B
                            (x_1336 : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z) (cic.type cic.z) B
                               (x_1335 : cic.Term (cic.type cic.z) B =>
                                cic.prod cic.prop (cic.type cic.z)
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1337 x_1336 x_1335)
                                  (_x_1338 :
                                     cic.Term cic.prop
                                       (matita_arithmetics_lstar.lstar_r
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) B)
                                          (__ :
                                             cic.Term (cic.type cic.z) B =>
                                           __1 :
                                             cic.Term (cic.type cic.z) B =>
                                           _R __ __1)
                                          x_1337 x_1336 x_1335) =>
                                   cic.univ cic.prop))))) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop B
                       (b : cic.Term (cic.type cic.z) B =>
                        (x_1337 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         x_1336 : cic.Term (cic.type cic.z) B =>
                         x_1335 : cic.Term (cic.type cic.z) B =>
                         _x_1338 :
                           cic.Term cic.prop
                             (matita_arithmetics_lstar.lstar_r
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (__ : cic.Term (cic.type cic.z) B =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 _R __ __1)
                                x_1337 x_1336 x_1335) =>
                         Q_ x_1337 x_1336 x_1335 _x_1338)
                          matita_arithmetics_nat.O b b
                          (matita_arithmetics_lstar.lstar_r_O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => _R __ __1)
                             b)))
                    (_H_lstar_r_O :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop B
                            (b : cic.Term (cic.type cic.z) B =>
                             (x_1337 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              x_1336 : cic.Term (cic.type cic.z) B =>
                              x_1335 : cic.Term (cic.type cic.z) B =>
                              _x_1338 :
                                cic.Term cic.prop
                                  (matita_arithmetics_lstar.lstar_r
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (__ : cic.Term (cic.type cic.z) B =>
                                      __1 : cic.Term (cic.type cic.z) B =>
                                      _R __ __1)
                                     x_1337 x_1336 x_1335) =>
                              Q_ x_1337 x_1336 x_1335 _x_1338)
                               matita_arithmetics_nat.O b b
                               (matita_arithmetics_lstar.lstar_r_O
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__ : cic.Term (cic.type cic.z) B =>
                                   __1 : cic.Term (cic.type cic.z) B =>
                                   _R __ __1)
                                  b))) =>
                     cic.prod cic.prop cic.prop
                       (cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (l :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (b1 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop cic.prop
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      (__ : cic.Term (cic.type cic.z) B =>
                                       __1 : cic.Term (cic.type cic.z) B =>
                                       _R __ __1)
                                      l b1 b)
                                   (x_1340 :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           (__ :
                                              cic.Term (cic.type cic.z) B =>
                                            __1 :
                                              cic.Term (cic.type cic.z) B =>
                                            _R __ __1)
                                           l b1 b) =>
                                    cic.prod (cic.type cic.z) cic.prop B
                                      (b2 : cic.Term (cic.type cic.z) B =>
                                       cic.prod cic.prop cic.prop
                                         ((__ :
                                             cic.Term (cic.type cic.z) B =>
                                           __1 :
                                             cic.Term (cic.type cic.z) B =>
                                           _R __ __1) b b2)
                                         (x_1339 :
                                            cic.Term cic.prop
                                              ((__ :
                                                  cic.Term (cic.type cic.z) B =>
                                                __1 :
                                                  cic.Term (cic.type cic.z) B =>
                                                _R __ __1) b b2) =>
                                          cic.prod cic.prop cic.prop
                                            ((x_1337 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              x_1336 :
                                                cic.Term (cic.type cic.z) B =>
                                              x_1335 :
                                                cic.Term (cic.type cic.z) B =>
                                              _x_1338 :
                                                cic.Term cic.prop
                                                  (matita_arithmetics_lstar.lstar_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) B)
                                                     (__ :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      __1 :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      _R __ __1)
                                                     x_1337 x_1336 x_1335) =>
                                              Q_ x_1337 x_1336 x_1335 _x_1338)
                                               l b1 b x_1340)
                                            (_x_1342 :
                                               cic.Term cic.prop
                                                 ((x_1337 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1336 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1335 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1338 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar_r
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1337 x_1336
                                                          x_1335) =>
                                                   Q_ x_1337 x_1336 x_1335
                                                     _x_1338)
                                                    l b1 b x_1340) =>
                                             (x_1337 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              x_1336 :
                                                cic.Term (cic.type cic.z) B =>
                                              x_1335 :
                                                cic.Term (cic.type cic.z) B =>
                                              _x_1338 :
                                                cic.Term cic.prop
                                                  (matita_arithmetics_lstar.lstar_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) B)
                                                     (__ :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      __1 :
                                                        cic.Term
                                                          (cic.type cic.z) B =>
                                                      _R __ __1)
                                                     x_1337 x_1336 x_1335) =>
                                              Q_ x_1337 x_1336 x_1335 _x_1338)
                                               (matita_arithmetics_nat.plus l
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               b1 b2
                                               (matita_arithmetics_lstar.lstar_r_S
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) B)
                                                  (__ :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   __1 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _R __ __1)
                                                  l b1 b x_1340 b2 x_1339)))))))))
                       (_H_lstar_r_S :
                          cic.Term cic.prop
                            (cic.prod (cic.type cic.z) cic.prop
                               matita_arithmetics_nat.nat
                               (l :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod (cic.type cic.z) cic.prop B
                                  (b1 : cic.Term (cic.type cic.z) B =>
                                   cic.prod (cic.type cic.z) cic.prop B
                                     (b : cic.Term (cic.type cic.z) B =>
                                      cic.prod cic.prop cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           (__ :
                                              cic.Term (cic.type cic.z) B =>
                                            __1 :
                                              cic.Term (cic.type cic.z) B =>
                                            _R __ __1)
                                           l b1 b)
                                        (x_1340 :
                                           cic.Term cic.prop
                                             (matita_arithmetics_lstar.lstar_r
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) B)
                                                (__ :
                                                   cic.Term (cic.type cic.z)
                                                     B =>
                                                 __1 :
                                                   cic.Term (cic.type cic.z)
                                                     B =>
                                                 _R __ __1)
                                                l b1 b) =>
                                         cic.prod (cic.type cic.z) cic.prop B
                                           (b2 :
                                              cic.Term (cic.type cic.z) B =>
                                            cic.prod cic.prop cic.prop
                                              ((__ :
                                                  cic.Term (cic.type cic.z) B =>
                                                __1 :
                                                  cic.Term (cic.type cic.z) B =>
                                                _R __ __1) b b2)
                                              (x_1339 :
                                                 cic.Term cic.prop
                                                   ((__ :
                                                       cic.Term
                                                         (cic.type cic.z) B =>
                                                     __1 :
                                                       cic.Term
                                                         (cic.type cic.z) B =>
                                                     _R __ __1) b b2) =>
                                               cic.prod cic.prop cic.prop
                                                 ((x_1337 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1336 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1335 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1338 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar_r
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1337 x_1336
                                                          x_1335) =>
                                                   Q_ x_1337 x_1336 x_1335
                                                     _x_1338)
                                                    l b1 b x_1340)
                                                 (_x_1342 :
                                                    cic.Term cic.prop
                                                      ((x_1337 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        x_1336 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        x_1335 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        _x_1338 :
                                                          cic.Term cic.prop
                                                            (matita_arithmetics_lstar.lstar_r
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    cic.z)
                                                                  B)
                                                               (__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z) B =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z) B =>
                                                                _R __ __1)
                                                               x_1337 x_1336
                                                               x_1335) =>
                                                        Q_ x_1337 x_1336
                                                          x_1335 _x_1338)
                                                         l b1 b x_1340) =>
                                                  (x_1337 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   x_1336 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   x_1335 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   _x_1338 :
                                                     cic.Term cic.prop
                                                       (matita_arithmetics_lstar.lstar_r
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             B)
                                                          (__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               B =>
                                                           _R __ __1)
                                                          x_1337 x_1336
                                                          x_1335) =>
                                                   Q_ x_1337 x_1336 x_1335
                                                     _x_1338)
                                                    (matita_arithmetics_nat.plus
                                                       l
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    b1 b2
                                                    (matita_arithmetics_lstar.lstar_r_S
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) B)
                                                       (__ :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        __1 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        _R __ __1)
                                                       l b1 b x_1340 b2
                                                       x_1339))))))))) =>
                        cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (x_1337 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (x_1336 : cic.Term (cic.type cic.z) B =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (x_1335 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop cic.prop
                                   (matita_arithmetics_lstar.lstar_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      (__ : cic.Term (cic.type cic.z) B =>
                                       __1 : cic.Term (cic.type cic.z) B =>
                                       _R __ __1)
                                      x_1337 x_1336 x_1335)
                                   (x_1338 :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar_r
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           (__ :
                                              cic.Term (cic.type cic.z) B =>
                                            __1 :
                                              cic.Term (cic.type cic.z) B =>
                                            _R __ __1)
                                           x_1337 x_1336 x_1335) =>
                                    (x_13371 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     x_13361 : cic.Term (cic.type cic.z) B =>
                                     x_13351 : cic.Term (cic.type cic.z) B =>
                                     _x_1338 :
                                       cic.Term cic.prop
                                         (matita_arithmetics_lstar.lstar_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) B)
                                            (__ :
                                               cic.Term (cic.type cic.z) B =>
                                             __1 :
                                               cic.Term (cic.type cic.z) B =>
                                             _R __ __1)
                                            x_13371 x_13361 x_13351) =>
                                     Q_ x_13371 x_13361 x_13351 _x_1338)
                                      x_1337 x_1336 x_1335 x_1338)))))))))).

[ B, _R, Q_, _H_lstar_r_O, _H_lstar_r_S, x_1337, x_1336, x_1335, x_1338 ]
  lstar_r_ind B _R Q_ _H_lstar_r_O _H_lstar_r_S x_1337 x_1336 x_1335 x_1338 -->
  matita_arithmetics_lstar.filter_lstar_r cic.prop B
    (__ : cic.Term (cic.type cic.z) B =>
     __1 : cic.Term (cic.type cic.z) B => _R __ __1)
    x_1337 x_1336 x_1335
    (x_1338 :
       cic.Term cic.prop
         (matita_arithmetics_lstar.lstar_r
            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
            (__ : cic.Term (cic.type cic.z) B =>
             __1 : cic.Term (cic.type cic.z) B => _R __ __1)
            x_1337 x_1336 x_1335) =>
     (x_13371 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x_13361 : cic.Term (cic.type cic.z) B =>
      x_13351 : cic.Term (cic.type cic.z) B =>
      _x_1338 :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar_r
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => _R __ __1)
             x_13371 x_13361 x_13351) =>
      Q_ x_13371 x_13361 x_13351 _x_1338) x_1337 x_1336 x_1335 x_1338)
    (matita_arithmetics_lstar.lstar_r_ind_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) B) _R Q_ _H_lstar_r_O
       _H_lstar_r_S x_1337 x_1336 x_1335)
    x_1338.

[ B, _R, Q_, _H_lstar_r_O, _H_lstar_r_S, x_1337, x_1336, x_1335, x_1338 ]
  lstar_r_ind_body B _R Q_ _H_lstar_r_O _H_lstar_r_S x_1337 x_1336 x_1335
    x_1338 -->
  matita_arithmetics_lstar.match_lstar_r cic.prop
    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
    (__ : cic.Term (cic.type cic.z) B =>
     __1 : cic.Term (cic.type cic.z) B => _R __ __1)
    (x_13371 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     x_13361 : cic.Term (cic.type cic.z) B =>
     x_13351 : cic.Term (cic.type cic.z) B =>
     _x_1338 :
       cic.Term cic.prop
         (matita_arithmetics_lstar.lstar_r
            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
            (__ : cic.Term (cic.type cic.z) B =>
             __1 : cic.Term (cic.type cic.z) B => _R __ __1)
            x_13371 x_13361 x_13351) =>
     Q_ x_13371 x_13361 x_13351 _x_1338)
    (b : cic.Term (cic.type cic.z) B => _H_lstar_r_O b)
    (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     b1 : cic.Term (cic.type cic.z) B =>
     b : cic.Term (cic.type cic.z) B =>
     x_1340 :
       cic.Term cic.prop
         (matita_arithmetics_lstar.lstar_r
            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
            (__ : cic.Term (cic.type cic.z) B =>
             __1 : cic.Term (cic.type cic.z) B => _R __ __1)
            l b1 b) =>
     b2 : cic.Term (cic.type cic.z) B =>
     x_1339 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) B =>
           __1 : cic.Term (cic.type cic.z) B => _R __ __1) b b2) =>
     _H_lstar_r_S l b1 b x_1340 b2 x_1339
       (matita_arithmetics_lstar.lstar_r_ind
          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
          (__ : cic.Term (cic.type cic.z) B =>
           __1 : cic.Term (cic.type cic.z) B => _R __ __1)
          (x_13371 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           x_13361 : cic.Term (cic.type cic.z) B =>
           x_13351 : cic.Term (cic.type cic.z) B =>
           _x_1338 :
             cic.Term cic.prop
               (matita_arithmetics_lstar.lstar_r
                  (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                  (__ : cic.Term (cic.type cic.z) B =>
                   __1 : cic.Term (cic.type cic.z) B => _R __ __1)
                  x_13371 x_13361 x_13351) =>
           cic.lift cic.prop cic.prop (Q_ x_13371 x_13361 x_13351 _x_1338))
          _H_lstar_r_O _H_lstar_r_S l b1 b x_1340))
    x_1337 x_1336 x_1335 x_1338.

def lstar_r_inv_ind :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
              (x2 :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop x1
                    (x4 : cic.Term (cic.type cic.z) x1 =>
                     cic.prod (cic.type cic.z) cic.prop x1
                       (x5 : cic.Term (cic.type cic.z) x1 =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar_r
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                             (__ : cic.Term (cic.type cic.z) x1 =>
                              __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1)
                             x3 x4 x5)
                          (_Hterm :
                             cic.Term cic.prop
                               (matita_arithmetics_lstar.lstar_r
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)
                                  (__ : cic.Term (cic.type cic.z) x1 =>
                                   __1 : cic.Term (cic.type cic.z) x1 =>
                                   x2 __ __1)
                                  x3 x4 x5) =>
                           cic.prod (cic.type cic.z) cic.prop
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                matita_arithmetics_nat.nat
                                (_z2386 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod (cic.type cic.z) (cic.type cic.z)
                                   x1
                                   (_z2385 : cic.Term (cic.type cic.z) x1 =>
                                    cic.prod (cic.type cic.z)
                                      (cic.type cic.z) x1
                                      (_z2384 :
                                         cic.Term (cic.type cic.z) x1 =>
                                       cic.univ cic.prop))))
                             (P :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     matita_arithmetics_nat.nat
                                     (_z2386 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      cic.prod (cic.type cic.z)
                                        (cic.type cic.z) x1
                                        (_z2385 :
                                           cic.Term (cic.type cic.z) x1 =>
                                         cic.prod (cic.type cic.z)
                                           (cic.type cic.z) x1
                                           (_z2384 :
                                              cic.Term (cic.type cic.z) x1 =>
                                            cic.univ cic.prop)))) =>
                              cic.prod cic.prop cic.prop
                                (cic.prod (cic.type cic.z) cic.prop x1
                                   (b : cic.Term (cic.type cic.z) x1 =>
                                    cic.prod cic.prop cic.prop
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         x3 matita_arithmetics_nat.O)
                                      (_z2389 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              x3 matita_arithmetics_nat.O) =>
                                       cic.prod cic.prop cic.prop
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               x1)
                                            x4 b)
                                         (_z2388 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    x1)
                                                 x4 b) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  x1)
                                               x5 b)
                                            (_z2387 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       x1)
                                                    x5 b) =>
                                             (_z2386 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _z2385 :
                                                cic.Term (cic.type cic.z) x1 =>
                                              _z2384 :
                                                cic.Term (cic.type cic.z) x1 =>
                                              P _z2386 _z2385 _z2384)
                                               matita_arithmetics_nat.O b b)))))
                                (_H1 :
                                   cic.Term cic.prop
                                     (cic.prod (cic.type cic.z) cic.prop x1
                                        (b : cic.Term (cic.type cic.z) x1 =>
                                         cic.prod cic.prop cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              x3 matita_arithmetics_nat.O)
                                           (_z2389 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A)
                                                    _x __)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      matita_arithmetics_nat.nat)
                                                   x3
                                                   matita_arithmetics_nat.O) =>
                                            cic.prod cic.prop cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    x1)
                                                 x4 b)
                                              (_z2388 :
                                                 cic.Term cic.prop
                                                   ((A :
                                                       cic.Univ
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z))) =>
                                                     _x :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     __ :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     matita_basics_logic.eq
                                                       (cic.lift
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A)
                                                       _x __)
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         x1)
                                                      x4 b) =>
                                               cic.prod cic.prop cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       x1)
                                                    x5 b)
                                                 (_z2387 :
                                                    cic.Term cic.prop
                                                      ((A :
                                                          cic.Univ
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z))) =>
                                                        _x :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        __ :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        matita_basics_logic.eq
                                                          (cic.lift
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A)
                                                          _x __)
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            x1)
                                                         x5 b) =>
                                                  (_z2386 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _z2385 :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   _z2384 :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   P _z2386 _z2385 _z2384)
                                                    matita_arithmetics_nat.O
                                                    b b))))) =>
                                 cic.prod cic.prop cic.prop
                                   (cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (l :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod (cic.type cic.z) cic.prop x1
                                         (b1 :
                                            cic.Term (cic.type cic.z) x1 =>
                                          cic.prod (cic.type cic.z) cic.prop
                                            x1
                                            (b :
                                               cic.Term (cic.type cic.z) x1 =>
                                             cic.prod cic.prop cic.prop
                                               (matita_arithmetics_lstar.lstar_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) x1)
                                                  (__ :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   __1 :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   x2 __ __1)
                                                  l b1 b)
                                               (_x_1340 :
                                                  cic.Term cic.prop
                                                    (matita_arithmetics_lstar.lstar_r
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) x1)
                                                       (__ :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            x1 =>
                                                        __1 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            x1 =>
                                                        x2 __ __1)
                                                       l b1 b) =>
                                                cic.prod (cic.type cic.z)
                                                  cic.prop x1
                                                  (b2 :
                                                     cic.Term
                                                       (cic.type cic.z) x1 =>
                                                   cic.prod cic.prop cic.prop
                                                     ((__ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           x1 =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           x1 =>
                                                       x2 __ __1) b b2)
                                                     (_x_1339 :
                                                        cic.Term cic.prop
                                                          ((__ :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                x1 =>
                                                            __1 :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                x1 =>
                                                            x2 __ __1) b b2) =>
                                                      cic.prod cic.prop
                                                        cic.prop
                                                        (cic.prod cic.prop
                                                           cic.prop
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              x3 l)
                                                           (_z2389 :
                                                              cic.Term
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A) _x __)
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                   x3 l) =>
                                                            cic.prod cic.prop
                                                              cic.prop
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    x1)
                                                                 x4 b1)
                                                              (_z2388 :
                                                                 cic.Term
                                                                   cic.prop
                                                                   ((
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1) =>
                                                               cic.prod
                                                                 cic.prop
                                                                 cic.prop
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    x1) x5 b)
                                                                 (_z2387 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b) =>
                                                                  (_z2386 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   _z2385 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                   _z2384 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                   P _z2386
                                                                    _z2385
                                                                    _z2384) l
                                                                    b1 b))))
                                                        (_x_1342 :
                                                           cic.Term cic.prop
                                                             (cic.prod
                                                                cic.prop
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A) _x __)
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                   x3 l)
                                                                (_z2389 :
                                                                   cic.Term
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x3 l) =>
                                                                 cic.prod
                                                                   cic.prop
                                                                   cic.prop
                                                                   ((
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1)
                                                                   (_z2388 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b)
                                                                    (
                                                                    _z2387 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b) =>
                                                                    (
                                                                    _z2386 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    _z2385 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    _z2384 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    P _z2386
                                                                    _z2385
                                                                    _z2384) l
                                                                    b1 b)))) =>
                                                         cic.prod cic.prop
                                                           cic.prop
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              x3
                                                              (matita_arithmetics_nat.plus
                                                                 l
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                           (_z2389 :
                                                              cic.Term
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A) _x __)
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                   x3
                                                                   (matita_arithmetics_nat.plus
                                                                    l
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))) =>
                                                            cic.prod cic.prop
                                                              cic.prop
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    x1)
                                                                 x4 b1)
                                                              (_z2388 :
                                                                 cic.Term
                                                                   cic.prop
                                                                   ((
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1) =>
                                                               cic.prod
                                                                 cic.prop
                                                                 cic.prop
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    x1) x5 b2)
                                                                 (_z2387 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2) =>
                                                                  (_z2386 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   _z2385 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                   _z2384 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                   P _z2386
                                                                    _z2385
                                                                    _z2384)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    l
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))
                                                                    b1 b2)))))))))))
                                   (_H2 :
                                      cic.Term cic.prop
                                        (cic.prod (cic.type cic.z) cic.prop
                                           matita_arithmetics_nat.nat
                                           (l :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.prod (cic.type cic.z)
                                              cic.prop x1
                                              (b1 :
                                                 cic.Term (cic.type cic.z) x1 =>
                                               cic.prod (cic.type cic.z)
                                                 cic.prop x1
                                                 (b :
                                                    cic.Term (cic.type cic.z)
                                                      x1 =>
                                                  cic.prod cic.prop cic.prop
                                                    (matita_arithmetics_lstar.lstar_r
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) x1)
                                                       (__ :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            x1 =>
                                                        __1 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            x1 =>
                                                        x2 __ __1)
                                                       l b1 b)
                                                    (_x_1340 :
                                                       cic.Term cic.prop
                                                         (matita_arithmetics_lstar.lstar_r
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  cic.z)
                                                               x1)
                                                            (__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 x1 =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 x1 =>
                                                             x2 __ __1)
                                                            l b1 b) =>
                                                     cic.prod
                                                       (cic.type cic.z)
                                                       cic.prop x1
                                                       (b2 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            x1 =>
                                                        cic.prod cic.prop
                                                          cic.prop
                                                          ((__ :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                x1 =>
                                                            __1 :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                x1 =>
                                                            x2 __ __1) b b2)
                                                          (_x_1339 :
                                                             cic.Term
                                                               cic.prop
                                                               ((__ :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    cic.z) x1 =>
                                                                 __1 :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    cic.z) x1 =>
                                                                 x2 __ __1) b
                                                                  b2) =>
                                                           cic.prod cic.prop
                                                             cic.prop
                                                             (cic.prod
                                                                cic.prop
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A) _x __)
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                   x3 l)
                                                                (_z2389 :
                                                                   cic.Term
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x3 l) =>
                                                                 cic.prod
                                                                   cic.prop
                                                                   cic.prop
                                                                   ((
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1)
                                                                   (_z2388 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b)
                                                                    (
                                                                    _z2387 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b) =>
                                                                    (
                                                                    _z2386 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    _z2385 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    _z2384 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    P _z2386
                                                                    _z2385
                                                                    _z2384) l
                                                                    b1 b))))
                                                             (_x_1342 :
                                                                cic.Term
                                                                  cic.prop
                                                                  (cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x3 l)
                                                                    (
                                                                   _z2389 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x3 l) =>
                                                                   cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1)
                                                                    (
                                                                   _z2388 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1) =>
                                                                   cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    x1) x5 b)
                                                                    (
                                                                   _z2387 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b) =>
                                                                   (_z2386 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    _z2385 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    _z2384 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    P _z2386
                                                                    _z2385
                                                                    _z2384) l
                                                                    b1 b)))) =>
                                                              cic.prod
                                                                cic.prop
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A) _x __)
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                   x3
                                                                   (matita_arithmetics_nat.plus
                                                                    l
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                (_z2389 :
                                                                   cic.Term
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x3
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    l
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))) =>
                                                                 cic.prod
                                                                   cic.prop
                                                                   cic.prop
                                                                   ((
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1)
                                                                   (_z2388 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x4 b1) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2)
                                                                    (
                                                                    _z2387 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    x1) x5 b2) =>
                                                                    (
                                                                    _z2386 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    _z2385 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    _z2384 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z) x1 =>
                                                                    P _z2386
                                                                    _z2385
                                                                    _z2384)
                                                                    (
                                                                    matita_arithmetics_nat.plus
                                                                    l
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))
                                                                    b1 b2))))))))))) =>
                                    (_z2386 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _z2385 : cic.Term (cic.type cic.z) x1 =>
                                     _z2384 : cic.Term (cic.type cic.z) x1 =>
                                     P _z2386 _z2385 _z2384) x3 x4 x5))))))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) x1 =>
      x5 : cic.Term (cic.type cic.z) x1 =>
      Hterm :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar_r
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
             (__ : cic.Term (cic.type cic.z) x1 =>
              __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1)
             x3 x4 x5) =>
      P :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z)
             matita_arithmetics_nat.nat
             (_z2386 :
                cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod (cic.type cic.z) (cic.type cic.z) x1
                (_z2385 : cic.Term (cic.type cic.z) x1 =>
                 cic.prod (cic.type cic.z) (cic.type cic.z) x1
                   (_z2384 : cic.Term (cic.type cic.z) x1 =>
                    cic.univ cic.prop)))) =>
      H1 :
        cic.Term cic.prop
          (cic.prod (cic.type cic.z) cic.prop x1
             (b : cic.Term (cic.type cic.z) x1 =>
              cic.prod cic.prop cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   x3 matita_arithmetics_nat.O)
                (_z2389 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        x3 matita_arithmetics_nat.O) =>
                 cic.prod cic.prop cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) x1)
                      x4 b)
                   (_z2388 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z))) x1)
                           x4 b) =>
                    cic.prod cic.prop cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) x1)
                         x5 b)
                      (_z2387 :
                         cic.Term cic.prop
                           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                             _x :
                               cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                             __ :
                               cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                             matita_basics_logic.eq
                               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s cic.z))) A)
                               _x __)
                              (cic.lift (cic.type cic.z)
                                 (cic.type (cic.s (cic.s cic.z))) x1)
                              x5 b) =>
                       (_z2386 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _z2385 : cic.Term (cic.type cic.z) x1 =>
                        _z2384 : cic.Term (cic.type cic.z) x1 =>
                        P _z2386 _z2385 _z2384) matita_arithmetics_nat.O b b))))) =>
      H2 :
        cic.Term cic.prop
          (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
             (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod (cic.type cic.z) cic.prop x1
                (b1 : cic.Term (cic.type cic.z) x1 =>
                 cic.prod (cic.type cic.z) cic.prop x1
                   (b : cic.Term (cic.type cic.z) x1 =>
                    cic.prod cic.prop cic.prop
                      (matita_arithmetics_lstar.lstar_r
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                         (__ : cic.Term (cic.type cic.z) x1 =>
                          __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1)
                         l b1 b)
                      (_x_1340 :
                         cic.Term cic.prop
                           (matita_arithmetics_lstar.lstar_r
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              (__ : cic.Term (cic.type cic.z) x1 =>
                               __1 : cic.Term (cic.type cic.z) x1 =>
                               x2 __ __1)
                              l b1 b) =>
                       cic.prod (cic.type cic.z) cic.prop x1
                         (b2 : cic.Term (cic.type cic.z) x1 =>
                          cic.prod cic.prop cic.prop
                            ((__ : cic.Term (cic.type cic.z) x1 =>
                              __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1)
                               b b2)
                            (_x_1339 :
                               cic.Term cic.prop
                                 ((__ : cic.Term (cic.type cic.z) x1 =>
                                   __1 : cic.Term (cic.type cic.z) x1 =>
                                   x2 __ __1) b b2) =>
                             cic.prod cic.prop cic.prop
                               (cic.prod cic.prop cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     x3 l)
                                  (_z2389 :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          x3 l) =>
                                   cic.prod cic.prop cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           x1)
                                        x4 b1)
                                     (_z2388 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                x1)
                                             x4 b1) =>
                                      cic.prod cic.prop cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              x1)
                                           x5 b)
                                        (_z2387 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   x1)
                                                x5 b) =>
                                         (_z2386 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _z2385 :
                                            cic.Term (cic.type cic.z) x1 =>
                                          _z2384 :
                                            cic.Term (cic.type cic.z) x1 =>
                                          P _z2386 _z2385 _z2384) l b1 b))))
                               (_x_1342 :
                                  cic.Term cic.prop
                                    (cic.prod cic.prop cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          x3 l)
                                       (_z2389 :
                                          cic.Term cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               x3 l) =>
                                        cic.prod cic.prop cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                x1)
                                             x4 b1)
                                          (_z2388 :
                                             cic.Term cic.prop
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     x1)
                                                  x4 b1) =>
                                           cic.prod cic.prop cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   x1)
                                                x5 b)
                                             (_z2387 :
                                                cic.Term cic.prop
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        x1)
                                                     x5 b) =>
                                              (_z2386 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               _z2385 :
                                                 cic.Term (cic.type cic.z) x1 =>
                                               _z2384 :
                                                 cic.Term (cic.type cic.z) x1 =>
                                               P _z2386 _z2385 _z2384) l b1 b)))) =>
                                cic.prod cic.prop cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     x3
                                     (matita_arithmetics_nat.plus l
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)))
                                  (_z2389 :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          x3
                                          (matita_arithmetics_nat.plus l
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O))) =>
                                   cic.prod cic.prop cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           x1)
                                        x4 b1)
                                     (_z2388 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                x1)
                                             x4 b1) =>
                                      cic.prod cic.prop cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              x1)
                                           x5 b2)
                                        (_z2387 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   x1)
                                                x5 b2) =>
                                         (_z2386 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _z2385 :
                                            cic.Term (cic.type cic.z) x1 =>
                                          _z2384 :
                                            cic.Term (cic.type cic.z) x1 =>
                                          P _z2386 _z2385 _z2384)
                                           (matita_arithmetics_nat.plus l
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           b1 b2))))))))))) =>
      (Hcut :
         cic.Term cic.prop
           (cic.prod cic.prop cic.prop
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x3 x3)
              (_z2389 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      x3 x3) =>
               cic.prod cic.prop cic.prop
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) x1)
                    x4 x4)
                 (_z2388 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) x1)
                         x4 x4) =>
                  cic.prod cic.prop cic.prop
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) x1)
                       x5 x5)
                    (_z2387 :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) x1)
                            x5 x5) =>
                     (_z2386 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _z2385 : cic.Term (cic.type cic.z) x1 =>
                      _z2384 : cic.Term (cic.type cic.z) x1 =>
                      P _z2386 _z2385 _z2384) x3 x4 x5)))) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            x3)
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) x1)
            x4)
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) x1)
            x5))
        (matita_arithmetics_lstar.lstar_r_ind
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
           (__ : cic.Term (cic.type cic.z) x1 =>
            __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1)
           (x_1337 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            x_1336 : cic.Term (cic.type cic.z) x1 =>
            x_1335 : cic.Term (cic.type cic.z) x1 =>
            _x_1338 :
              cic.Term cic.prop
                (matita_arithmetics_lstar.lstar_r
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                   (__ : cic.Term (cic.type cic.z) x1 =>
                    __1 : cic.Term (cic.type cic.z) x1 => x2 __ __1)
                   x_1337 x_1336 x_1335) =>
            cic.lift cic.prop cic.prop
              (cic.prod cic.prop cic.prop
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    x3 x_1337)
                 (_z2389 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         x3 x_1337) =>
                  cic.prod cic.prop cic.prop
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) x1)
                       x4 x_1336)
                    (_z2388 :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) x1)
                            x4 x_1336) =>
                     cic.prod cic.prop cic.prop
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) x1)
                          x5 x_1335)
                       (_z2387 :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) x1)
                               x5 x_1335) =>
                        (_z2386 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _z2385 : cic.Term (cic.type cic.z) x1 =>
                         _z2384 : cic.Term (cic.type cic.z) x1 =>
                         P _z2386 _z2385 _z2384) x_1337 x_1336 x_1335)))))
           H1 H2 x3 x4 x5 Hterm).

def lstar_r_sn :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop B
                    (b : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) cic.prop B
                       (b2 : cic.Term (cic.type cic.z) B =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar_r
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             l b b2)
                          (__ :
                             cic.Term cic.prop
                               (matita_arithmetics_lstar.lstar_r
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__ : cic.Term (cic.type cic.z) B =>
                                   __1 : cic.Term (cic.type cic.z) B =>
                                   R __ __1)
                                  l b b2) =>
                           cic.prod (cic.type cic.z) cic.prop B
                             (b1 : cic.Term (cic.type cic.z) B =>
                              cic.prod cic.prop cic.prop
                                ((__1 : cic.Term (cic.type cic.z) B =>
                                  __2 : cic.Term (cic.type cic.z) B =>
                                  R __1 __2) b1 b)
                                (__1 :
                                   cic.Term cic.prop
                                     ((__1 : cic.Term (cic.type cic.z) B =>
                                       __2 : cic.Term (cic.type cic.z) B =>
                                       R __1 __2) b1 b) =>
                                 matita_arithmetics_lstar.lstar_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   (__2 : cic.Term (cic.type cic.z) B =>
                                    __3 : cic.Term (cic.type cic.z) B =>
                                    R __2 __3)
                                   (matita_arithmetics_nat.plus l
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   b1 b2)))))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) B =>
      b2 : cic.Term (cic.type cic.z) B =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar_r
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l b b2) =>
      matita_arithmetics_lstar.lstar_r_ind
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B => R __ __1)
        (x_1337 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         x_1336 : cic.Term (cic.type cic.z) B =>
         x_1335 : cic.Term (cic.type cic.z) B =>
         _x_1338 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                x_1337 x_1336 x_1335) =>
         cic.lift cic.prop cic.prop
           (cic.prod (cic.type cic.z) cic.prop B
              (b1 : cic.Term (cic.type cic.z) B =>
               cic.prod cic.prop cic.prop
                 ((__ : cic.Term (cic.type cic.z) B =>
                   __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 x_1336)
                 (__ :
                    cic.Term cic.prop
                      ((__ : cic.Term (cic.type cic.z) B =>
                        __1 : cic.Term (cic.type cic.z) B => R __ __1) b1
                         x_1336) =>
                  matita_arithmetics_lstar.lstar_r
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__1 : cic.Term (cic.type cic.z) B =>
                     __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                    (matita_arithmetics_nat.plus x_1337
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    b1 x_1335))))
        (b0 : cic.Term (cic.type cic.z) B =>
         b1 : cic.Term (cic.type cic.z) B =>
         auto :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b1 b0) =>
         matita_arithmetics_lstar.lstar_r_S
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1)
           matita_arithmetics_nat.O b1 b1
           (matita_arithmetics_lstar.lstar_r_O
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              b1)
           b0 auto)
        (l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b1 : cic.Term (cic.type cic.z) B =>
         b0 : cic.Term (cic.type cic.z) B =>
         __ :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l0 b1 b0) =>
         b20 : cic.Term (cic.type cic.z) B =>
         Hb2 :
           cic.Term cic.prop
             ((__1 : cic.Term (cic.type cic.z) B =>
               __2 : cic.Term (cic.type cic.z) B => R __1 __2) b0 b20) =>
         IHb1 :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop B
                (b10 : cic.Term (cic.type cic.z) B =>
                 cic.prod cic.prop cic.prop
                   ((__1 : cic.Term (cic.type cic.z) B =>
                     __2 : cic.Term (cic.type cic.z) B => R __1 __2) b10 b1)
                   (__1 :
                      cic.Term cic.prop
                        ((__1 : cic.Term (cic.type cic.z) B =>
                          __2 : cic.Term (cic.type cic.z) B => R __1 __2) b10
                           b1) =>
                    matita_arithmetics_lstar.lstar_r
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                      (__2 : cic.Term (cic.type cic.z) B =>
                       __3 : cic.Term (cic.type cic.z) B => R __2 __3)
                      (matita_arithmetics_nat.plus l0
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      b10 b0))) =>
         b00 : cic.Term (cic.type cic.z) B =>
         Hb01 :
           cic.Term cic.prop
             ((__1 : cic.Term (cic.type cic.z) B =>
               __2 : cic.Term (cic.type cic.z) B => R __1 __2) b00 b1) =>
         matita_arithmetics_lstar.lstar_r_S
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__1 : cic.Term (cic.type cic.z) B =>
            __2 : cic.Term (cic.type cic.z) B => R __1 __2)
           (matita_arithmetics_nat.plus l0
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           b00 b0 (IHb1 b00 Hb01) b20 Hb2)
        l b b2 H.

def lstar_lstar_r :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop B
                    (b1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) cic.prop B
                       (b2 : cic.Term (cic.type cic.z) B =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             l b1 b2)
                          (__ :
                             cic.Term cic.prop
                               (matita_arithmetics_lstar.lstar
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__ : cic.Term (cic.type cic.z) B =>
                                   __1 : cic.Term (cic.type cic.z) B =>
                                   R __ __1)
                                  l b1 b2) =>
                           matita_arithmetics_lstar.lstar_r
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__1 : cic.Term (cic.type cic.z) B =>
                              __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                             l b1 b2)))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b1 : cic.Term (cic.type cic.z) B =>
      b2 : cic.Term (cic.type cic.z) B =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l b1 b2) =>
      matita_arithmetics_lstar.lstar_ind_l
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B =>
         cic.lift cic.prop cic.prop (R __ __1))
        b2
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _0 : cic.Term (cic.type cic.z) B =>
         matita_arithmetics_lstar.lstar_r
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__1 : cic.Term (cic.type cic.z) B =>
            __2 : cic.Term (cic.type cic.z) B => R __1 __2)
           __ _0 b2)
        (matita_arithmetics_lstar.lstar_r_O
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1)
           b2)
        (l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b10 : cic.Term (cic.type cic.z) B =>
         b : cic.Term (cic.type cic.z) B =>
         auto :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b10 b) =>
         auto' :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l0 b b2) =>
         auto'' :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l0 b b2) =>
         matita_arithmetics_lstar.lstar_r_sn
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1)
           l0 b b2 auto'' b10 auto)
        l b1 H.

def lstar_r_inv_lstar :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop B
                    (b1 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) cic.prop B
                       (b2 : cic.Term (cic.type cic.z) B =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_lstar.lstar_r
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__ : cic.Term (cic.type cic.z) B =>
                              __1 : cic.Term (cic.type cic.z) B => R __ __1)
                             l b1 b2)
                          (__ :
                             cic.Term cic.prop
                               (matita_arithmetics_lstar.lstar_r
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  (__ : cic.Term (cic.type cic.z) B =>
                                   __1 : cic.Term (cic.type cic.z) B =>
                                   R __ __1)
                                  l b1 b2) =>
                           matita_arithmetics_lstar.lstar
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__1 : cic.Term (cic.type cic.z) B =>
                              __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                             l b1 b2)))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b1 : cic.Term (cic.type cic.z) B =>
      b2 : cic.Term (cic.type cic.z) B =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar_r
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l b1 b2) =>
      matita_arithmetics_lstar.lstar_r_ind
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B => R __ __1)
        (x_1337 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         x_1336 : cic.Term (cic.type cic.z) B =>
         x_1335 : cic.Term (cic.type cic.z) B =>
         _x_1338 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                x_1337 x_1336 x_1335) =>
         cic.lift cic.prop cic.prop
           (matita_arithmetics_lstar.lstar
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1)
              x_1337 x_1336 x_1335))
        (b : cic.Term (cic.type cic.z) B =>
         matita_arithmetics_lstar.lstar_O
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1)
           b)
        (l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b10 : cic.Term (cic.type cic.z) B =>
         b : cic.Term (cic.type cic.z) B =>
         _x_1340 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l0 b10 b) =>
         b20 : cic.Term (cic.type cic.z) B =>
         _x_1339 :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b b20) =>
         _x_1342 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l0 b10 b) =>
         matita_arithmetics_lstar.lstar_dx
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1)
           l0 b10 b _x_1342 b20 _x_1339)
        l b1 b2 H.

def lstar_ind_r_aux :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop B
                 (b1 : cic.Term (cic.type cic.z) B =>
                  cic.prod (cic.type cic.z) cic.prop
                    ((__ : cic.Univ (cic.type cic.z) =>
                      __1 : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation2
                        (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                    (P :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           __1 : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.relation2
                             (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                            (cic.lift (cic.type cic.z) (cic.type cic.z)
                               matita_arithmetics_nat.nat)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 : cic.Term (cic.type cic.z) B => P __ __1)
                          matita_arithmetics_nat.O b1)
                       (__ :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 : cic.Term (cic.type cic.z) B => P __ __1)
                               matita_arithmetics_nat.O b1) =>
                        cic.prod cic.prop cic.prop
                          (cic.prod (cic.type cic.z) cic.prop
                             matita_arithmetics_nat.nat
                             (l :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod (cic.type cic.z) cic.prop B
                                   (b2 : cic.Term (cic.type cic.z) B =>
                                    cic.prod cic.prop cic.prop
                                      (matita_arithmetics_lstar.lstar
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) B)
                                         (__1 :
                                            cic.Term (cic.type cic.z) B =>
                                          __2 :
                                            cic.Term (cic.type cic.z) B =>
                                          R __1 __2)
                                         l b1 b)
                                      (__1 :
                                         cic.Term cic.prop
                                           (matita_arithmetics_lstar.lstar
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) B)
                                              (__1 :
                                                 cic.Term (cic.type cic.z) B =>
                                               __2 :
                                                 cic.Term (cic.type cic.z) B =>
                                               R __1 __2)
                                              l b1 b) =>
                                       cic.prod cic.prop cic.prop
                                         ((__2 :
                                             cic.Term (cic.type cic.z) B =>
                                           __3 :
                                             cic.Term (cic.type cic.z) B =>
                                           R __2 __3) b b2)
                                         (__2 :
                                            cic.Term cic.prop
                                              ((__2 :
                                                  cic.Term (cic.type cic.z) B =>
                                                __3 :
                                                  cic.Term (cic.type cic.z) B =>
                                                R __2 __3) b b2) =>
                                          cic.prod cic.prop cic.prop
                                            ((__3 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __4 :
                                                cic.Term (cic.type cic.z) B =>
                                              P __3 __4) l b)
                                            (__3 :
                                               cic.Term cic.prop
                                                 ((__3 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __4 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __3 __4) l b) =>
                                             (__4 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __5 :
                                                cic.Term (cic.type cic.z) B =>
                                              P __4 __5)
                                               (matita_arithmetics_nat.plus l
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               b2)))))))
                          (__1 :
                             cic.Term cic.prop
                               (cic.prod (cic.type cic.z) cic.prop
                                  matita_arithmetics_nat.nat
                                  (l :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   cic.prod (cic.type cic.z) cic.prop B
                                     (b : cic.Term (cic.type cic.z) B =>
                                      cic.prod (cic.type cic.z) cic.prop B
                                        (b2 : cic.Term (cic.type cic.z) B =>
                                         cic.prod cic.prop cic.prop
                                           (matita_arithmetics_lstar.lstar
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) B)
                                              (__1 :
                                                 cic.Term (cic.type cic.z) B =>
                                               __2 :
                                                 cic.Term (cic.type cic.z) B =>
                                               R __1 __2)
                                              l b1 b)
                                           (__1 :
                                              cic.Term cic.prop
                                                (matita_arithmetics_lstar.lstar
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) B)
                                                   (__1 :
                                                      cic.Term
                                                        (cic.type cic.z) B =>
                                                    __2 :
                                                      cic.Term
                                                        (cic.type cic.z) B =>
                                                    R __1 __2)
                                                   l b1 b) =>
                                            cic.prod cic.prop cic.prop
                                              ((__2 :
                                                  cic.Term (cic.type cic.z) B =>
                                                __3 :
                                                  cic.Term (cic.type cic.z) B =>
                                                R __2 __3) b b2)
                                              (__2 :
                                                 cic.Term cic.prop
                                                   ((__2 :
                                                       cic.Term
                                                         (cic.type cic.z) B =>
                                                     __3 :
                                                       cic.Term
                                                         (cic.type cic.z) B =>
                                                     R __2 __3) b b2) =>
                                               cic.prod cic.prop cic.prop
                                                 ((__3 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __4 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __3 __4) l b)
                                                 (__3 :
                                                    cic.Term cic.prop
                                                      ((__3 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        __4 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        P __3 __4) l b) =>
                                                  (__4 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __5 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __4 __5)
                                                    (matita_arithmetics_nat.plus
                                                       l
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    b2))))))) =>
                           cic.prod (cic.type cic.z) cic.prop
                             matita_arithmetics_nat.nat
                             (l :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod (cic.type cic.z) cic.prop B
                                   (b2 : cic.Term (cic.type cic.z) B =>
                                    cic.prod cic.prop cic.prop
                                      (matita_arithmetics_lstar.lstar
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) B)
                                         (__2 :
                                            cic.Term (cic.type cic.z) B =>
                                          __3 :
                                            cic.Term (cic.type cic.z) B =>
                                          R __2 __3)
                                         l b b2)
                                      (__2 :
                                         cic.Term cic.prop
                                           (matita_arithmetics_lstar.lstar
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) B)
                                              (__2 :
                                                 cic.Term (cic.type cic.z) B =>
                                               __3 :
                                                 cic.Term (cic.type cic.z) B =>
                                               R __2 __3)
                                              l b b2) =>
                                       cic.prod cic.prop cic.prop
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __3 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __3)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               B)
                                            b b1)
                                         (__3 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __3 :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __3)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    B)
                                                 b b1) =>
                                          (__4 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __5 :
                                             cic.Term (cic.type cic.z) B =>
                                           P __4 __5) l b2))))))))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      b1 : cic.Term (cic.type cic.z) B =>
      P :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation2
              (cic.lift (cic.type cic.z) (cic.type cic.z) __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      H1 :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) B => P __ __1)
             matita_arithmetics_nat.O b1) =>
      H2 :
        cic.Term cic.prop
          (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
             (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod (cic.type cic.z) cic.prop B
                (b : cic.Term (cic.type cic.z) B =>
                 cic.prod (cic.type cic.z) cic.prop B
                   (b2 : cic.Term (cic.type cic.z) B =>
                    cic.prod cic.prop cic.prop
                      (matita_arithmetics_lstar.lstar
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__ : cic.Term (cic.type cic.z) B =>
                          __1 : cic.Term (cic.type cic.z) B => R __ __1)
                         l b1 b)
                      (__ :
                         cic.Term cic.prop
                           (matita_arithmetics_lstar.lstar
                              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                              (__ : cic.Term (cic.type cic.z) B =>
                               __1 : cic.Term (cic.type cic.z) B => R __ __1)
                              l b1 b) =>
                       cic.prod cic.prop cic.prop
                         ((__1 : cic.Term (cic.type cic.z) B =>
                           __2 : cic.Term (cic.type cic.z) B => R __1 __2) b
                            b2)
                         (__1 :
                            cic.Term cic.prop
                              ((__1 : cic.Term (cic.type cic.z) B =>
                                __2 : cic.Term (cic.type cic.z) B =>
                                R __1 __2) b b2) =>
                          cic.prod cic.prop cic.prop
                            ((__2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __3 : cic.Term (cic.type cic.z) B => P __2 __3)
                               l b)
                            (__2 :
                               cic.Term cic.prop
                                 ((__2 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __3 : cic.Term (cic.type cic.z) B =>
                                   P __2 __3) l b) =>
                             (__3 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __4 : cic.Term (cic.type cic.z) B => P __3 __4)
                               (matita_arithmetics_nat.plus l
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               b2))))))) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) B =>
      b2 : cic.Term (cic.type cic.z) B =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l b b2) =>
      matita_arithmetics_lstar.lstar_r_ind
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B => R __ __1)
        (x_1337 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         x_1336 : cic.Term (cic.type cic.z) B =>
         x_1335 : cic.Term (cic.type cic.z) B =>
         _x_1338 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                x_1337 x_1336 x_1335) =>
         cic.lift cic.prop cic.prop
           (cic.prod cic.prop cic.prop
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    B)
                 x_1336 b1)
              (__ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) B)
                      x_1336 b1) =>
               (__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __2 : cic.Term (cic.type cic.z) B => P __1 __2) x_1337 x_1335)))
        (b0 : cic.Term (cic.type cic.z) B =>
         H0 :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B)
                b0 b1) =>
         matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B) b1
           (x : cic.Term (cic.type cic.z) B =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) B)
                   x b1) =>
            cic.lift cic.prop cic.prop
              ((__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __2 : cic.Term (cic.type cic.z) B => P __1 __2)
                 matita_arithmetics_nat.O x))
           H1 b0 H0)
        (l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b0 : cic.Term (cic.type cic.z) B =>
         b00 : cic.Term (cic.type cic.z) B =>
         Hb0 :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar_r
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                (__ : cic.Term (cic.type cic.z) B =>
                 __1 : cic.Term (cic.type cic.z) B => R __ __1)
                l0 b0 b00) =>
         b20 : cic.Term (cic.type cic.z) B =>
         Hb02 :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) B =>
               __1 : cic.Term (cic.type cic.z) B => R __ __1) b00 b20) =>
         IHb02 :
           cic.Term cic.prop
             (cic.prod cic.prop cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) B)
                   b0 b1)
                (__ :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) B)
                        b0 b1) =>
                 (__1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __2 : cic.Term (cic.type cic.z) B => P __1 __2) l0 b00)) =>
         H0 :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B)
                b0 b1) =>
         matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B) b1
           (x : cic.Term (cic.type cic.z) B =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) B)
                   x b1) =>
            cic.lift cic.prop cic.prop
              (cic.prod cic.prop cic.prop
                 (matita_arithmetics_lstar.lstar_r
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (__1 : cic.Term (cic.type cic.z) B =>
                     __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                    l0 x b00)
                 (__1 :
                    cic.Term cic.prop
                      (matita_arithmetics_lstar.lstar_r
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__1 : cic.Term (cic.type cic.z) B =>
                          __2 : cic.Term (cic.type cic.z) B => R __1 __2)
                         l0 x b00) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod cic.prop cic.prop
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) B)
                          x b1)
                       (__2 :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __2 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __2)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) B)
                               x b1) =>
                        (__3 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __4 : cic.Term (cic.type cic.z) B => P __3 __4) l0
                          b00))
                    (__2 :
                       cic.Term cic.prop
                         (cic.prod cic.prop cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __2 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __2)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) B)
                               x b1)
                            (__2 :
                               cic.Term cic.prop
                                 ((A :
                                     cic.Univ
                                       (cic.type (cic.s (cic.s cic.z))) =>
                                   _x :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   __2 :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   matita_basics_logic.eq
                                     (cic.lift
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s cic.z))) A)
                                     _x __2)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type (cic.s (cic.s cic.z))) B)
                                    x b1) =>
                             (__3 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __4 : cic.Term (cic.type cic.z) B => P __3 __4)
                               l0 b00)) =>
                     (__3 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __4 : cic.Term (cic.type cic.z) B => P __3 __4)
                       (matita_arithmetics_nat.plus l0
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       b20))))
           (Hb00 :
              cic.Term cic.prop
                (matita_arithmetics_lstar.lstar_r
                   (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                   (__ : cic.Term (cic.type cic.z) B =>
                    __1 : cic.Term (cic.type cic.z) B => R __ __1)
                   l0 b1 b00) =>
            IHb020 :
              cic.Term cic.prop
                (cic.prod cic.prop cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) B)
                      b1 b1)
                   (__ :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z))) B)
                           b1 b1) =>
                    (__1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __2 : cic.Term (cic.type cic.z) B => P __1 __2) l0 b00)) =>
            H2 l0 b00 b20
              (matita_arithmetics_lstar.lstar_r_inv_lstar
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (__ : cic.Term (cic.type cic.z) B =>
                  __1 : cic.Term (cic.type cic.z) B => R __ __1)
                 l0 b1 b00 Hb00)
              Hb02
              (IHb020
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    b1)))
           b0 H0 Hb0 IHb02)
        l b b2
        (matita_arithmetics_lstar.lstar_lstar_r
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ : cic.Term (cic.type cic.z) B =>
            __1 : cic.Term (cic.type cic.z) B => R __ __1)
           l b b2 H).

def lstar_ind_r :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (B : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               cic.prod (cic.type cic.z) cic.prop B
                 (b1 : cic.Term (cic.type cic.z) B =>
                  cic.prod (cic.type cic.z) cic.prop
                    ((__ : cic.Univ (cic.type cic.z) =>
                      __1 : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation2
                        (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                    (P :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           __1 : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.relation2
                             (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                            (cic.lift (cic.type cic.z) (cic.type cic.z)
                               matita_arithmetics_nat.nat)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 : cic.Term (cic.type cic.z) B => P __ __1)
                          matita_arithmetics_nat.O b1)
                       (__ :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 : cic.Term (cic.type cic.z) B => P __ __1)
                               matita_arithmetics_nat.O b1) =>
                        cic.prod cic.prop cic.prop
                          (cic.prod (cic.type cic.z) cic.prop
                             matita_arithmetics_nat.nat
                             (l :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (b : cic.Term (cic.type cic.z) B =>
                                 cic.prod (cic.type cic.z) cic.prop B
                                   (b2 : cic.Term (cic.type cic.z) B =>
                                    cic.prod cic.prop cic.prop
                                      (matita_arithmetics_lstar.lstar
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) B)
                                         (__1 :
                                            cic.Term (cic.type cic.z) B =>
                                          __2 :
                                            cic.Term (cic.type cic.z) B =>
                                          R __1 __2)
                                         l b1 b)
                                      (__1 :
                                         cic.Term cic.prop
                                           (matita_arithmetics_lstar.lstar
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) B)
                                              (__1 :
                                                 cic.Term (cic.type cic.z) B =>
                                               __2 :
                                                 cic.Term (cic.type cic.z) B =>
                                               R __1 __2)
                                              l b1 b) =>
                                       cic.prod cic.prop cic.prop
                                         ((__2 :
                                             cic.Term (cic.type cic.z) B =>
                                           __3 :
                                             cic.Term (cic.type cic.z) B =>
                                           R __2 __3) b b2)
                                         (__2 :
                                            cic.Term cic.prop
                                              ((__2 :
                                                  cic.Term (cic.type cic.z) B =>
                                                __3 :
                                                  cic.Term (cic.type cic.z) B =>
                                                R __2 __3) b b2) =>
                                          cic.prod cic.prop cic.prop
                                            ((__3 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __4 :
                                                cic.Term (cic.type cic.z) B =>
                                              P __3 __4) l b)
                                            (__3 :
                                               cic.Term cic.prop
                                                 ((__3 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __4 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __3 __4) l b) =>
                                             (__4 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __5 :
                                                cic.Term (cic.type cic.z) B =>
                                              P __4 __5)
                                               (matita_arithmetics_nat.plus l
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               b2)))))))
                          (__1 :
                             cic.Term cic.prop
                               (cic.prod (cic.type cic.z) cic.prop
                                  matita_arithmetics_nat.nat
                                  (l :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   cic.prod (cic.type cic.z) cic.prop B
                                     (b : cic.Term (cic.type cic.z) B =>
                                      cic.prod (cic.type cic.z) cic.prop B
                                        (b2 : cic.Term (cic.type cic.z) B =>
                                         cic.prod cic.prop cic.prop
                                           (matita_arithmetics_lstar.lstar
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) B)
                                              (__1 :
                                                 cic.Term (cic.type cic.z) B =>
                                               __2 :
                                                 cic.Term (cic.type cic.z) B =>
                                               R __1 __2)
                                              l b1 b)
                                           (__1 :
                                              cic.Term cic.prop
                                                (matita_arithmetics_lstar.lstar
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) B)
                                                   (__1 :
                                                      cic.Term
                                                        (cic.type cic.z) B =>
                                                    __2 :
                                                      cic.Term
                                                        (cic.type cic.z) B =>
                                                    R __1 __2)
                                                   l b1 b) =>
                                            cic.prod cic.prop cic.prop
                                              ((__2 :
                                                  cic.Term (cic.type cic.z) B =>
                                                __3 :
                                                  cic.Term (cic.type cic.z) B =>
                                                R __2 __3) b b2)
                                              (__2 :
                                                 cic.Term cic.prop
                                                   ((__2 :
                                                       cic.Term
                                                         (cic.type cic.z) B =>
                                                     __3 :
                                                       cic.Term
                                                         (cic.type cic.z) B =>
                                                     R __2 __3) b b2) =>
                                               cic.prod cic.prop cic.prop
                                                 ((__3 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __4 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __3 __4) l b)
                                                 (__3 :
                                                    cic.Term cic.prop
                                                      ((__3 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        __4 :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            B =>
                                                        P __3 __4) l b) =>
                                                  (__4 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __5 :
                                                     cic.Term
                                                       (cic.type cic.z) B =>
                                                   P __4 __5)
                                                    (matita_arithmetics_nat.plus
                                                       l
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    b2))))))) =>
                           cic.prod (cic.type cic.z) cic.prop
                             matita_arithmetics_nat.nat
                             (l :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod (cic.type cic.z) cic.prop B
                                (b2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod cic.prop cic.prop
                                   (matita_arithmetics_lstar.lstar
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      (__2 : cic.Term (cic.type cic.z) B =>
                                       __3 : cic.Term (cic.type cic.z) B =>
                                       R __2 __3)
                                      l b1 b2)
                                   (__2 :
                                      cic.Term cic.prop
                                        (matita_arithmetics_lstar.lstar
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           (__2 :
                                              cic.Term (cic.type cic.z) B =>
                                            __3 :
                                              cic.Term (cic.type cic.z) B =>
                                            R __2 __3)
                                           l b1 b2) =>
                                    (__3 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __4 : cic.Term (cic.type cic.z) B =>
                                     P __3 __4) l b2))))))))))
      :=
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      b1 : cic.Term (cic.type cic.z) B =>
      P :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation2
              (cic.lift (cic.type cic.z) (cic.type cic.z) __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      H1 :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) B => P __ __1)
             matita_arithmetics_nat.O b1) =>
      H2 :
        cic.Term cic.prop
          (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
             (l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod (cic.type cic.z) cic.prop B
                (b : cic.Term (cic.type cic.z) B =>
                 cic.prod (cic.type cic.z) cic.prop B
                   (b2 : cic.Term (cic.type cic.z) B =>
                    cic.prod cic.prop cic.prop
                      (matita_arithmetics_lstar.lstar
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (__ : cic.Term (cic.type cic.z) B =>
                          __1 : cic.Term (cic.type cic.z) B => R __ __1)
                         l b1 b)
                      (__ :
                         cic.Term cic.prop
                           (matita_arithmetics_lstar.lstar
                              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                              (__ : cic.Term (cic.type cic.z) B =>
                               __1 : cic.Term (cic.type cic.z) B => R __ __1)
                              l b1 b) =>
                       cic.prod cic.prop cic.prop
                         ((__1 : cic.Term (cic.type cic.z) B =>
                           __2 : cic.Term (cic.type cic.z) B => R __1 __2) b
                            b2)
                         (__1 :
                            cic.Term cic.prop
                              ((__1 : cic.Term (cic.type cic.z) B =>
                                __2 : cic.Term (cic.type cic.z) B =>
                                R __1 __2) b b2) =>
                          cic.prod cic.prop cic.prop
                            ((__2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __3 : cic.Term (cic.type cic.z) B => P __2 __3)
                               l b)
                            (__2 :
                               cic.Term cic.prop
                                 ((__2 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __3 : cic.Term (cic.type cic.z) B =>
                                   P __2 __3) l b) =>
                             (__3 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __4 : cic.Term (cic.type cic.z) B => P __3 __4)
                               (matita_arithmetics_nat.plus l
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               b2))))))) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b2 : cic.Term (cic.type cic.z) B =>
      Hb12 :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) B =>
              __1 : cic.Term (cic.type cic.z) B => R __ __1)
             l b1 b2) =>
      matita_arithmetics_lstar.lstar_ind_r_aux
        (cic.lift (cic.type cic.z) (cic.type cic.z) B)
        (__ : cic.Term (cic.type cic.z) B =>
         __1 : cic.Term (cic.type cic.z) B => R __ __1)
        b1
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         __1 : cic.Term (cic.type cic.z) B => P __ __1)
        H1 H2 l b1 b2 Hb12
        (matita_basics_logic.refl
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) B) b1).

def lstar_Conf3 :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) cic.prop
              (cic.univ (cic.type cic.z))
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) cic.prop
                 ((__ : cic.Univ (cic.type cic.z) =>
                   __1 : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation2
                     (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                 (S :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        __1 : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.relation2
                          (cic.lift (cic.type cic.z) (cic.type cic.z) __)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
                  cic.prod (cic.type cic.z) cic.prop
                    ((__ : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation
                        (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                    (R :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z) __))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
                     cic.prod cic.prop cic.prop
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         B1 : cic.Univ (cic.type cic.z) =>
                         __ :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation2
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   A1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   B1)) =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   A1)) =>
                         matita_basics_relations.Conf3
                           (cic.lift (cic.type cic.z) (cic.type cic.z) A1)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) B1) __
                           __1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) B => S __ __1)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R __ __1))
                       (__ :
                          cic.Term cic.prop
                            ((A1 : cic.Univ (cic.type cic.z) =>
                              B1 : cic.Univ (cic.type cic.z) =>
                              __ :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_relations.relation2
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A1)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B1)) =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_relations.relation
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A1)) =>
                              matita_basics_relations.Conf3
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   A1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   B1)
                                __ __1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               (__ : cic.Term (cic.type cic.z) A =>
                                __1 : cic.Term (cic.type cic.z) B => S __ __1)
                               (__ : cic.Term (cic.type cic.z) A =>
                                __1 : cic.Term (cic.type cic.z) A => R __ __1)) =>
                        cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (l :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           (A1 : cic.Univ (cic.type cic.z) =>
                            B1 : cic.Univ (cic.type cic.z) =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation2
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B1)) =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A1)) =>
                            matita_basics_relations.Conf3
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A1)
                              (cic.lift (cic.type cic.z) (cic.type cic.z) B1)
                              __1 __2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (__1 : cic.Term (cic.type cic.z) A =>
                              __2 : cic.Term (cic.type cic.z) B => S __1 __2)
                             (__1 : cic.Term (cic.type cic.z) A =>
                              __2 : cic.Term (cic.type cic.z) A =>
                              matita_arithmetics_lstar.lstar
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (__3 : cic.Term (cic.type cic.z) A =>
                                 __4 : cic.Term (cic.type cic.z) A =>
                                 R __3 __4)
                                l __1 __2))))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      S :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation2
              (cic.lift (cic.type cic.z) (cic.type cic.z) __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
      HSR :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            B1 : cic.Univ (cic.type cic.z) =>
            __ :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation2
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A1)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) B1)) =>
            __1 :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A1)) =>
            matita_basics_relations.Conf3
              (cic.lift (cic.type cic.z) (cic.type cic.z) A1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) B1) __ __1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) B => S __ __1)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R __ __1)) =>
      l : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) B =>
      a1 : cic.Term (cic.type cic.z) A =>
      Ha1 :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) A =>
            __1 : cic.Term (cic.type cic.z) B => S __ __1) a1 b) =>
      a2 : cic.Term (cic.type cic.z) A =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_lstar.lstar
             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R __ __1)
             l a1 a2) =>
      matita_arithmetics_lstar.lstar_ind_r
        (cic.lift (cic.type cic.z) (cic.type cic.z) A)
        (__ : cic.Term (cic.type cic.z) A =>
         __1 : cic.Term (cic.type cic.z) A => R __ __1)
        a1
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _0 : cic.Term (cic.type cic.z) A =>
         (__1 : cic.Term (cic.type cic.z) A =>
          __2 : cic.Term (cic.type cic.z) B => S __1 __2) _0 b)
        Ha1
        (l0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         b0 : cic.Term (cic.type cic.z) A =>
         b2 : cic.Term (cic.type cic.z) A =>
         auto :
           cic.Term cic.prop
             (matita_arithmetics_lstar.lstar
                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                (__ : cic.Term (cic.type cic.z) A =>
                 __1 : cic.Term (cic.type cic.z) A => R __ __1)
                l0 a1 b0) =>
         auto' :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) A =>
               __1 : cic.Term (cic.type cic.z) A => R __ __1) b0 b2) =>
         auto'' :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) A =>
               __1 : cic.Term (cic.type cic.z) B => S __ __1) b0 b) =>
         HSR b b0 auto'' b2 auto')
        l a2 H.


