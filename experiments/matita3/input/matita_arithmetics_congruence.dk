def congruent :
  cic.Term
    (cic.type cic.z)
    (cic.prod
       (cic.type cic.z)
       (cic.type cic.z)
       (cic.type cic.z)
       cic.I
       matita_arithmetics_nat.nat
       (_n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (_m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (_p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.univ cic.prop (cic.type cic.z) cic.I))))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  matita_basics_logic.eq
    (cic.cast
       (cic.type (cic.s cic.z))
       (cic.type (cic.s (cic.s (cic.s cic.z))))
       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
       (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
       cic.I
       matita_arithmetics_nat.nat)
    (matita_arithmetics_div_and_mod.mod n p)
    (matita_arithmetics_div_and_mod.mod m p).

def congruent_n_n :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           matita_arithmetics_congruence.congruent n n p)))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  matita_basics_logic.refl
    (cic.cast
       (cic.type (cic.s cic.z))
       (cic.type (cic.s (cic.s (cic.s cic.z))))
       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
       (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
       cic.I
       matita_arithmetics_nat.nat)
    (matita_arithmetics_div_and_mod.mod n p).

def transitive_congruent :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        matita_basics_relations.transitive
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s cic.z))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)))
             (matita_basics_relations.relation
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s cic.z))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   cic.I
                   matita_arithmetics_nat.nat))
             cic.I
             (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              matita_arithmetics_congruence.congruent n m p))))
  :=
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  y:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  z:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  auto:(cic.Term cic.prop (matita_arithmetics_congruence.congruent x y p)) =>
  auto':(cic.Term cic.prop (matita_arithmetics_congruence.congruent y z p)) =>
  matita_basics_logic.rewrite_l
    (cic.cast
       (cic.type (cic.s cic.z))
       (cic.type (cic.s (cic.s (cic.s cic.z))))
       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
       (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
       cic.I
       matita_arithmetics_nat.nat)
    (matita_arithmetics_div_and_mod.mod x p)
    (cic.cast
       (cic.type cic.z)
       (cic.type (cic.s (cic.s (cic.s cic.z))))
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (x0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ cic.prop (cic.type cic.z) cic.I))
       (cic.prod
          (cic.type cic.z)
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          cic.I
          matita_arithmetics_nat.nat
          (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I))
       cic.I
       (x0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_div_and_mod.mod x p)
          x0))
    (matita_basics_logic.refl
       (cic.cast
          (cic.type (cic.s cic.z))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
          (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
          cic.I
          matita_arithmetics_nat.nat)
       (matita_arithmetics_div_and_mod.mod x p))
    (matita_arithmetics_div_and_mod.mod z p)
    (matita_basics_logic.rewrite_r
       (cic.cast
          (cic.type (cic.s cic.z))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
          (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
          cic.I
          matita_arithmetics_nat.nat)
       (matita_arithmetics_div_and_mod.mod y p)
       (cic.cast
          (cic.type cic.z)
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.univ cic.prop (cic.type cic.z) cic.I))
          (cic.prod
             (cic.type cic.z)
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             cic.I
             matita_arithmetics_nat.nat
             (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I))
          cic.I
          (x0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             x0
             (matita_arithmetics_div_and_mod.mod z p)))
       auto'
       (matita_arithmetics_div_and_mod.mod x p)
       auto).

def mod_mod :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             cic.prop
             cic.prop
             cic.prop
             cic.I
             (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
             (__:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
              matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_div_and_mod.mod n p)
                (matita_arithmetics_div_and_mod.mod (matita_arithmetics_div_and_mod.mod n p) p)))))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  posp:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
  matita_basics_logic.eq_ind_r
    (cic.cast
       (cic.type (cic.s cic.z))
       (cic.type (cic.s (cic.s (cic.s cic.z))))
       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
       (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
       cic.I
       matita_arithmetics_nat.nat)
    (matita_arithmetics_nat.plus
       (matita_arithmetics_nat.times
          (matita_arithmetics_div_and_mod.div (matita_arithmetics_div_and_mod.mod n p) p)
          p)
       (matita_arithmetics_div_and_mod.mod (matita_arithmetics_div_and_mod.mod n p) p))
    (cic.cast
       (cic.type cic.z)
       (cic.type cic.z)
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             cic.prop
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             (matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_div_and_mod.div
                         (matita_arithmetics_div_and_mod.mod n p)
                         p)
                      p)
                   (matita_arithmetics_div_and_mod.mod
                      (matita_arithmetics_div_and_mod.mod n p)
                      p)))
             (__:(cic.Term
                    cic.prop
                    (matita_basics_logic.eq
                       (cic.cast
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                          (cic.univ
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I)
                          cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div
                                (matita_arithmetics_div_and_mod.mod n p)
                                p)
                             p)
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_div_and_mod.mod n p)
                             p)))) =>
              cic.univ cic.prop (cic.type cic.z) cic.I)))
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             cic.prop
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             (matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_div_and_mod.div
                         (matita_arithmetics_div_and_mod.mod n p)
                         p)
                      p)
                   (matita_arithmetics_div_and_mod.mod
                      (matita_arithmetics_div_and_mod.mod n p)
                      p)))
             (__:(cic.Term
                    cic.prop
                    (matita_basics_logic.eq
                       (cic.cast
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                          (cic.univ
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I)
                          cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div
                                (matita_arithmetics_div_and_mod.mod n p)
                                p)
                             p)
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_div_and_mod.mod n p)
                             p)))) =>
              cic.univ cic.prop (cic.type cic.z) cic.I)))
       cic.I
       (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        __:(cic.Term
              cic.prop
              (matita_basics_logic.eq
                 (cic.cast
                    (cic.type (cic.s cic.z))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                    (cic.univ
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       cic.I)
                    cic.I
                    matita_arithmetics_nat.nat)
                 x
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div
                          (matita_arithmetics_div_and_mod.mod n p)
                          p)
                       p)
                    (matita_arithmetics_div_and_mod.mod
                       (matita_arithmetics_div_and_mod.mod n p)
                       p)))) =>
        matita_basics_logic.eq
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          x
          (matita_arithmetics_div_and_mod.mod (matita_arithmetics_div_and_mod.mod n p) p)))
    (matita_basics_logic.eq_ind_r
       (cic.cast
          (cic.type (cic.s cic.z))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
          (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
          cic.I
          matita_arithmetics_nat.nat)
       matita_arithmetics_nat.O
       (cic.cast
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                (matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   x
                   matita_arithmetics_nat.O)
                (__:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          matita_arithmetics_nat.O)) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I)))
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                (matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   x
                   matita_arithmetics_nat.O)
                (__:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          matita_arithmetics_nat.O)) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I)))
          cic.I
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           __:(cic.Term
                 cic.prop
                 (matita_basics_logic.eq
                    (cic.cast
                       (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                       (cic.univ
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          cic.I)
                       cic.I
                       matita_arithmetics_nat.nat)
                    x
                    matita_arithmetics_nat.O)) =>
           matita_basics_logic.eq
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times x p)
                (matita_arithmetics_div_and_mod.mod (matita_arithmetics_div_and_mod.mod n p) p))
             (matita_arithmetics_div_and_mod.mod (matita_arithmetics_div_and_mod.mod n p) p)))
       (matita_basics_logic.rewrite_r
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_nat.times p matita_arithmetics_nat.O)
          (cic.cast
             (cic.type cic.z)
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I))
             (cic.prod
                (cic.type cic.z)
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I
                matita_arithmetics_nat.nat
                (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I))
             cic.I
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.plus
                   x
                   (matita_arithmetics_div_and_mod.mod
                      (matita_arithmetics_div_and_mod.mod n p)
                      p))
                (matita_arithmetics_div_and_mod.mod (matita_arithmetics_div_and_mod.mod n p) p)))
          (matita_basics_logic.rewrite_l
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             matita_arithmetics_nat.O
             (cic.cast
                (cic.type cic.z)
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I))
                (cic.prod
                   (cic.type cic.z)
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I
                   matita_arithmetics_nat.nat
                   (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I))
                cic.I
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.plus
                      x
                      (matita_arithmetics_div_and_mod.mod
                         (matita_arithmetics_div_and_mod.mod n p)
                         p))
                   (matita_arithmetics_div_and_mod.mod
                      (matita_arithmetics_div_and_mod.mod n p)
                      p)))
             (matita_basics_logic.rewrite_l
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_div_and_mod.mod (matita_arithmetics_div_and_mod.mod n p) p)
                (cic.cast
                   (cic.type cic.z)
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I
                      matita_arithmetics_nat.nat
                      (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I))
                   cic.I
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_div_and_mod.mod
                         (matita_arithmetics_div_and_mod.mod n p)
                         p)))
                (matita_basics_logic.refl
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod
                      (matita_arithmetics_div_and_mod.mod n p)
                      p))
                (matita_arithmetics_nat.plus
                   matita_arithmetics_nat.O
                   (matita_arithmetics_div_and_mod.mod
                      (matita_arithmetics_div_and_mod.mod n p)
                      p))
                (matita_arithmetics_nat.plus_O_n
                   (matita_arithmetics_div_and_mod.mod
                      (matita_arithmetics_div_and_mod.mod n p)
                      p)))
             (matita_arithmetics_nat.times p matita_arithmetics_nat.O)
             (matita_arithmetics_nat.times_n_O p))
          (matita_arithmetics_nat.times matita_arithmetics_nat.O p)
          (matita_arithmetics_nat.commutative_times matita_arithmetics_nat.O p))
       (matita_arithmetics_div_and_mod.div (matita_arithmetics_div_and_mod.mod n p) p)
       (matita_arithmetics_div_and_mod.eq_div_O
          (matita_arithmetics_div_and_mod.mod n p)
          p
          (matita_arithmetics_div_and_mod.lt_mod_m_m n p posp)))
    (matita_arithmetics_div_and_mod.mod n p)
    (matita_arithmetics_div_and_mod.div_mod (matita_arithmetics_div_and_mod.mod n p) p).

def congruent_n_mod_n :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             cic.prop
             cic.prop
             cic.prop
             cic.I
             (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
             (__:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
              matita_arithmetics_congruence.congruent n (matita_arithmetics_div_and_mod.mod n p) p))))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  posp:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
  matita_arithmetics_congruence.mod_mod n p posp.

def eq_times_plus_to_congruent :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             (cic.type cic.z)
             cic.prop
             cic.prop
             cic.I
             matita_arithmetics_nat.nat
             (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                (cic.type cic.z)
                cic.prop
                cic.prop
                cic.I
                matita_arithmetics_nat.nat
                (r:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   cic.prop
                   cic.prop
                   cic.I
                   (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
                   (__:(cic.Term
                          cic.prop
                          (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
                    cic.prod
                      cic.prop
                      cic.prop
                      cic.prop
                      cic.I
                      (matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         n
                         (matita_arithmetics_nat.plus (matita_arithmetics_nat.times r p) m))
                      (__1:(cic.Term
                              cic.prop
                              (matita_basics_logic.eq
                                 (cic.cast
                                    (cic.type (cic.s cic.z))
                                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                                    (cic.univ
                                       (cic.type cic.z)
                                       (cic.type (cic.s cic.z))
                                       cic.I)
                                    (cic.univ
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                                       cic.I)
                                    cic.I
                                    matita_arithmetics_nat.nat)
                                 n
                                 (matita_arithmetics_nat.plus
                                    (matita_arithmetics_nat.times r p)
                                    m))) =>
                       matita_arithmetics_congruence.congruent n m p)))))))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  r:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  posp:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
  Hn:(cic.Term
        cic.prop
        (matita_basics_logic.eq
           (cic.cast
              (cic.type (cic.s cic.z))
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (cic.univ
                 (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 cic.I)
              cic.I
              matita_arithmetics_nat.nat)
           n
           (matita_arithmetics_nat.plus (matita_arithmetics_nat.times r p) m))) =>
  matita_arithmetics_div_and_mod.div_mod_spec_to_eq2
    n
    p
    (matita_arithmetics_div_and_mod.div n p)
    (matita_arithmetics_div_and_mod.mod n p)
    (matita_arithmetics_nat.plus r (matita_arithmetics_div_and_mod.div m p))
    (matita_arithmetics_div_and_mod.mod m p)
    (matita_arithmetics_div_and_mod.div_mod_spec_div_mod n p posp)
    (matita_arithmetics_div_and_mod.div_mod_spec_intro
       n
       p
       (matita_arithmetics_nat.plus r (matita_arithmetics_div_and_mod.div m p))
       (matita_arithmetics_div_and_mod.mod m p)
       (matita_arithmetics_div_and_mod.lt_mod_m_m m p posp)
       (matita_basics_logic.eq_ind_r
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_nat.times
             p
             (matita_arithmetics_nat.plus r (matita_arithmetics_div_and_mod.div m p)))
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   (matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.times
                         p
                         (matita_arithmetics_nat.plus
                            r
                            (matita_arithmetics_div_and_mod.div m p))))
                   (__:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.times
                                p
                                (matita_arithmetics_nat.plus
                                   r
                                   (matita_arithmetics_div_and_mod.div m p))))) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)))
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   (matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.times
                         p
                         (matita_arithmetics_nat.plus
                            r
                            (matita_arithmetics_div_and_mod.div m p))))
                   (__:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.times
                                p
                                (matita_arithmetics_nat.plus
                                   r
                                   (matita_arithmetics_div_and_mod.div m p))))) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)))
             cic.I
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              __:(cic.Term
                    cic.prop
                    (matita_basics_logic.eq
                       (cic.cast
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                          (cic.univ
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I)
                          cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.times
                          p
                          (matita_arithmetics_nat.plus
                             r
                             (matita_arithmetics_div_and_mod.div m p))))) =>
              matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                n
                (matita_arithmetics_nat.plus x (matita_arithmetics_div_and_mod.mod m p))))
          (matita_basics_logic.eq_ind_r
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times p r)
                (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div m p)))
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      (matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times p r)
                            (matita_arithmetics_nat.times
                               p
                               (matita_arithmetics_div_and_mod.div m p))))
                      (__:(cic.Term
                             cic.prop
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times p r)
                                   (matita_arithmetics_nat.times
                                      p
                                      (matita_arithmetics_div_and_mod.div m p))))) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)))
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      (matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times p r)
                            (matita_arithmetics_nat.times
                               p
                               (matita_arithmetics_div_and_mod.div m p))))
                      (__:(cic.Term
                             cic.prop
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times p r)
                                   (matita_arithmetics_nat.times
                                      p
                                      (matita_arithmetics_div_and_mod.div m p))))) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)))
                cic.I
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 __:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times p r)
                             (matita_arithmetics_nat.times
                                p
                                (matita_arithmetics_div_and_mod.div m p))))) =>
                 matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   n
                   (matita_arithmetics_nat.plus x (matita_arithmetics_div_and_mod.mod m p))))
             (matita_basics_logic.eq_ind_r
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.times r p)
                (cic.cast
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.prod
                         cic.prop
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         (matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            x
                            (matita_arithmetics_nat.times r p))
                         (__:(cic.Term
                                cic.prop
                                (matita_basics_logic.eq
                                   (cic.cast
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      (cic.univ
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         cic.I)
                                      cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_nat.times r p))) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.prod
                         cic.prop
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         (matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            x
                            (matita_arithmetics_nat.times r p))
                         (__:(cic.Term
                                cic.prop
                                (matita_basics_logic.eq
                                   (cic.cast
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      (cic.univ
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         cic.I)
                                      cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_nat.times r p))) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)))
                   cic.I
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    __:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.times r p))) =>
                    matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      n
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.plus
                            x
                            (matita_arithmetics_nat.times
                               p
                               (matita_arithmetics_div_and_mod.div m p)))
                         (matita_arithmetics_div_and_mod.mod m p))))
                (matita_basics_logic.eq_ind_r
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p)
                   (cic.cast
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         matita_arithmetics_nat.nat
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.prod
                            cic.prop
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            (matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div m p)
                                  p))
                            (__:(cic.Term
                                   cic.prop
                                   (matita_basics_logic.eq
                                      (cic.cast
                                         (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         (cic.univ
                                            (cic.type cic.z)
                                            (cic.type (cic.s cic.z))
                                            cic.I)
                                         (cic.univ
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            cic.I)
                                         cic.I
                                         matita_arithmetics_nat.nat)
                                      x
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div m p)
                                         p))) =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)))
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         matita_arithmetics_nat.nat
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.prod
                            cic.prop
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            (matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div m p)
                                  p))
                            (__:(cic.Term
                                   cic.prop
                                   (matita_basics_logic.eq
                                      (cic.cast
                                         (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         (cic.univ
                                            (cic.type cic.z)
                                            (cic.type (cic.s cic.z))
                                            cic.I)
                                         (cic.univ
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            cic.I)
                                         cic.I
                                         matita_arithmetics_nat.nat)
                                      x
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div m p)
                                         p))) =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)))
                      cic.I
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       __:(cic.Term
                             cic.prop
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div m p)
                                   p))) =>
                       matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         n
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times r p) x)
                            (matita_arithmetics_div_and_mod.mod m p))))
                   (matita_basics_logic.eq_ind_r
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times r p)
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div m p)
                               p)
                            (matita_arithmetics_div_and_mod.mod m p)))
                      (cic.cast
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times r p)
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div m p)
                                           p)
                                        (matita_arithmetics_div_and_mod.mod m p))))
                               (__:(cic.Term
                                      cic.prop
                                      (matita_basics_logic.eq
                                         (cic.cast
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            (cic.univ
                                               (cic.type cic.z)
                                               (cic.type (cic.s cic.z))
                                               cic.I)
                                            (cic.univ
                                               (cic.type (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               cic.I)
                                            cic.I
                                            matita_arithmetics_nat.nat)
                                         x
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times r p)
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_div_and_mod.div
                                                     m
                                                     p)
                                                  p)
                                               (matita_arithmetics_div_and_mod.mod
                                                  m
                                                  p))))) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)))
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times r p)
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div m p)
                                           p)
                                        (matita_arithmetics_div_and_mod.mod m p))))
                               (__:(cic.Term
                                      cic.prop
                                      (matita_basics_logic.eq
                                         (cic.cast
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            (cic.univ
                                               (cic.type cic.z)
                                               (cic.type (cic.s cic.z))
                                               cic.I)
                                            (cic.univ
                                               (cic.type (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               cic.I)
                                            cic.I
                                            matita_arithmetics_nat.nat)
                                         x
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times r p)
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_div_and_mod.div
                                                     m
                                                     p)
                                                  p)
                                               (matita_arithmetics_div_and_mod.mod
                                                  m
                                                  p))))) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)))
                         cic.I
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          __:(cic.Term
                                cic.prop
                                (matita_basics_logic.eq
                                   (cic.cast
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      (cic.univ
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         cic.I)
                                      cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times r p)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div m p)
                                            p)
                                         (matita_arithmetics_div_and_mod.mod m p))))) =>
                          matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            n
                            x))
                      (matita_basics_logic.rewrite_r
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.times p r)
                         (cic.cast
                            (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_arithmetics_nat.nat
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I
                               matita_arithmetics_nat.nat
                               (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I))
                            cic.I
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               n
                               (matita_arithmetics_nat.plus
                                  x
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.div m p)
                                        p)
                                     (matita_arithmetics_div_and_mod.mod m p)))))
                         (matita_basics_logic.rewrite_r
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.times
                               p
                               (matita_arithmetics_div_and_mod.div m p))
                            (cic.cast
                               (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I))
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (__:(cic.Term
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat) =>
                                   cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I))
                               cic.I
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  n
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times p r)
                                     (matita_arithmetics_nat.plus
                                        x
                                        (matita_arithmetics_div_and_mod.mod m p)))))
                            (matita_basics_logic.rewrite_r
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_div_and_mod.mod m p)
                                  (matita_arithmetics_nat.times
                                     p
                                     (matita_arithmetics_div_and_mod.div m p)))
                               (cic.cast
                                  (cic.type cic.z)
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      cic.univ cic.prop (cic.type cic.z) cic.I))
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (__:(cic.Term
                                            (cic.type cic.z)
                                            matita_arithmetics_nat.nat) =>
                                      cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I))
                                  cic.I
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     n
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times p r)
                                        x)))
                               (matita_basics_logic.rewrite_l
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  m
                                  (cic.cast
                                     (cic.type cic.z)
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.prod
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        cic.I
                                        matita_arithmetics_nat.nat
                                        (x:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         cic.univ cic.prop (cic.type cic.z) cic.I))
                                     (cic.prod
                                        (cic.type cic.z)
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I
                                        matita_arithmetics_nat.nat
                                        (__:(cic.Term
                                               (cic.type cic.z)
                                               matita_arithmetics_nat.nat) =>
                                         cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I))
                                     cic.I
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times p r)
                                           x)))
                                  (matita_basics_logic.rewrite_r
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.plus
                                        m
                                        (matita_arithmetics_nat.times p r))
                                     (cic.cast
                                        (cic.type cic.z)
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.prod
                                           (cic.type cic.z)
                                           (cic.type cic.z)
                                           (cic.type cic.z)
                                           cic.I
                                           matita_arithmetics_nat.nat
                                           (x:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            cic.univ cic.prop (cic.type cic.z) cic.I))
                                        (cic.prod
                                           (cic.type cic.z)
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I
                                           matita_arithmetics_nat.nat
                                           (__:(cic.Term
                                                  (cic.type cic.z)
                                                  matita_arithmetics_nat.nat) =>
                                            cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I))
                                        cic.I
                                        (x:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           n
                                           x))
                                     (matita_basics_logic.rewrite_l
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        n
                                        (cic.cast
                                           (cic.type cic.z)
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (x:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               cic.univ cic.prop (cic.type cic.z) cic.I))
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (__:(cic.Term
                                                     (cic.type cic.z)
                                                     matita_arithmetics_nat.nat) =>
                                               cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I))
                                           cic.I
                                           (x:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_basics_logic.eq
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              n
                                              x))
                                        (matita_basics_logic.refl
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           n)
                                        (matita_arithmetics_nat.plus
                                           m
                                           (matita_arithmetics_nat.times p r))
                                        (matita_basics_logic.rewrite_l
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times p r)
                                              m)
                                           (cic.cast
                                              (cic.type cic.z)
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.prod
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 cic.I
                                                 matita_arithmetics_nat.nat
                                                 (x:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  cic.univ
                                                    cic.prop
                                                    (cic.type cic.z)
                                                    cic.I))
                                              (cic.prod
                                                 (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I
                                                 matita_arithmetics_nat.nat
                                                 (__:(cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat) =>
                                                  cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I))
                                              cic.I
                                              (x:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               matita_basics_logic.eq
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type
                                                          (cic.s (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 n
                                                 x))
                                           (matita_basics_logic.rewrite_l
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.times r p)
                                              (cic.cast
                                                 (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.prod
                                                    (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    cic.I
                                                    matita_arithmetics_nat.nat
                                                    (x:(cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat) =>
                                                     cic.univ
                                                       cic.prop
                                                       (cic.type cic.z)
                                                       cic.I))
                                                 (cic.prod
                                                    (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I
                                                    matita_arithmetics_nat.nat
                                                    (__:(cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat) =>
                                                     cic.univ
                                                       (cic.type
                                                          (cic.s (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       cic.I))
                                                 cic.I
                                                 (x:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  matita_basics_logic.eq
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type
                                                             (cic.s (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    n
                                                    (matita_arithmetics_nat.plus x m)))
                                              Hn
                                              (matita_arithmetics_nat.times p r)
                                              (matita_arithmetics_nat.commutative_times
                                                 r
                                                 p))
                                           (matita_arithmetics_nat.plus
                                              m
                                              (matita_arithmetics_nat.times p r))
                                           (matita_arithmetics_nat.commutative_plus
                                              (matita_arithmetics_nat.times p r)
                                              m)))
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times p r)
                                        m)
                                     (matita_arithmetics_nat.commutative_plus
                                        (matita_arithmetics_nat.times p r)
                                        m))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_div_and_mod.mod m p)
                                     (matita_arithmetics_nat.times
                                        p
                                        (matita_arithmetics_div_and_mod.div m p)))
                                  (matita_basics_logic.rewrite_l
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times
                                           p
                                           (matita_arithmetics_div_and_mod.div m p))
                                        (matita_arithmetics_div_and_mod.mod m p))
                                     (cic.cast
                                        (cic.type cic.z)
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.prod
                                           (cic.type cic.z)
                                           (cic.type cic.z)
                                           (cic.type cic.z)
                                           cic.I
                                           matita_arithmetics_nat.nat
                                           (x:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            cic.univ cic.prop (cic.type cic.z) cic.I))
                                        (cic.prod
                                           (cic.type cic.z)
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I
                                           matita_arithmetics_nat.nat
                                           (__:(cic.Term
                                                  (cic.type cic.z)
                                                  matita_arithmetics_nat.nat) =>
                                            cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I))
                                        cic.I
                                        (x:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           m
                                           x))
                                     (matita_basics_logic.rewrite_l
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div m p)
                                           p)
                                        (cic.cast
                                           (cic.type cic.z)
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (x:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               cic.univ cic.prop (cic.type cic.z) cic.I))
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (__:(cic.Term
                                                     (cic.type cic.z)
                                                     matita_arithmetics_nat.nat) =>
                                               cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I))
                                           cic.I
                                           (x:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_basics_logic.eq
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              m
                                              (matita_arithmetics_nat.plus
                                                 x
                                                 (matita_arithmetics_div_and_mod.mod
                                                    m
                                                    p))))
                                        (matita_arithmetics_div_and_mod.div_mod m p)
                                        (matita_arithmetics_nat.times
                                           p
                                           (matita_arithmetics_div_and_mod.div m p))
                                        (matita_arithmetics_nat.commutative_times
                                           (matita_arithmetics_div_and_mod.div m p)
                                           p))
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_div_and_mod.mod m p)
                                        (matita_arithmetics_nat.times
                                           p
                                           (matita_arithmetics_div_and_mod.div m p)))
                                     (matita_arithmetics_nat.commutative_plus
                                        (matita_arithmetics_nat.times
                                           p
                                           (matita_arithmetics_div_and_mod.div m p))
                                        (matita_arithmetics_div_and_mod.mod m p))))
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     p
                                     (matita_arithmetics_div_and_mod.div m p))
                                  (matita_arithmetics_div_and_mod.mod m p))
                               (matita_arithmetics_nat.commutative_plus
                                  (matita_arithmetics_nat.times
                                     p
                                     (matita_arithmetics_div_and_mod.div m p))
                                  (matita_arithmetics_div_and_mod.mod m p)))
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div m p)
                               p)
                            (matita_arithmetics_nat.commutative_times
                               (matita_arithmetics_div_and_mod.div m p)
                               p))
                         (matita_arithmetics_nat.times r p)
                         (matita_arithmetics_nat.commutative_times r p))
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times r p)
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div m p)
                               p))
                         (matita_arithmetics_div_and_mod.mod m p))
                      (matita_arithmetics_nat.associative_plus
                         (matita_arithmetics_nat.times r p)
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div m p)
                            p)
                         (matita_arithmetics_div_and_mod.mod m p)))
                   (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div m p))
                   (matita_arithmetics_nat.commutative_times
                      p
                      (matita_arithmetics_div_and_mod.div m p)))
                (matita_arithmetics_nat.times p r)
                (matita_arithmetics_nat.commutative_times p r))
             (matita_arithmetics_nat.times
                p
                (matita_arithmetics_nat.plus r (matita_arithmetics_div_and_mod.div m p)))
             (matita_arithmetics_nat.distributive_times_plus
                p
                r
                (matita_arithmetics_div_and_mod.div m p)))
          (matita_arithmetics_nat.times
             (matita_arithmetics_nat.plus r (matita_arithmetics_div_and_mod.div m p))
             p)
          (matita_arithmetics_nat.commutative_times
             (matita_arithmetics_nat.plus r (matita_arithmetics_div_and_mod.div m p))
             p))).

def divides_to_congruent :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             (cic.type cic.z)
             cic.prop
             cic.prop
             cic.I
             matita_arithmetics_nat.nat
             (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                cic.prop
                cic.prop
                cic.I
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
                (__:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
                 cic.prod
                   cic.prop
                   cic.prop
                   cic.prop
                   cic.I
                   (matita_arithmetics_nat.le m n)
                   (__1:(cic.Term cic.prop (matita_arithmetics_nat.le m n)) =>
                    cic.prod
                      cic.prop
                      cic.prop
                      cic.prop
                      cic.I
                      (matita_arithmetics_primes.divides p (matita_arithmetics_nat.minus n m))
                      (__2:(cic.Term
                              cic.prop
                              (matita_arithmetics_primes.divides
                                 p
                                 (matita_arithmetics_nat.minus n m))) =>
                       matita_arithmetics_congruence.congruent n m p)))))))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  posp:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
  lemn:(cic.Term cic.prop (matita_arithmetics_nat.le m n)) =>
  _clearme:(cic.Term
              cic.prop
              (matita_arithmetics_primes.divides p (matita_arithmetics_nat.minus n m))) =>
  matita_arithmetics_primes.match_divides
    cic.prop
    p
    (matita_arithmetics_nat.minus n m)
    (__:(cic.Term
           cic.prop
           (matita_arithmetics_primes.divides p (matita_arithmetics_nat.minus n m))) =>
     matita_arithmetics_congruence.congruent n m p)
    (q:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
     Hdiv:(cic.Term
             cic.prop
             (matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus n m)
                (matita_arithmetics_nat.times p q))) =>
     matita_arithmetics_congruence.eq_times_plus_to_congruent
       n
       m
       p
       q
       posp
       (matita_basics_logic.eq_ind_r
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_nat.plus m (matita_arithmetics_nat.times q p))
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   (matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.plus m (matita_arithmetics_nat.times q p)))
                   (__:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.plus
                                m
                                (matita_arithmetics_nat.times q p)))) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)))
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   (matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.plus m (matita_arithmetics_nat.times q p)))
                   (__:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.plus
                                m
                                (matita_arithmetics_nat.times q p)))) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)))
             cic.I
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              __:(cic.Term
                    cic.prop
                    (matita_basics_logic.eq
                       (cic.cast
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                          (cic.univ
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I)
                          cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.plus m (matita_arithmetics_nat.times q p)))) =>
              matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                n
                x))
          (matita_arithmetics_nat.minus_to_plus
             n
             m
             (matita_arithmetics_nat.times q p)
             lemn
             (matita_basics_logic.rewrite_r
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.times p q)
                (cic.cast
                   (cic.type cic.z)
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I
                      matita_arithmetics_nat.nat
                      (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I))
                   cic.I
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.times q p)))
                (matita_basics_logic.rewrite_r
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.times p q)
                   (cic.cast
                      (cic.type cic.z)
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         matita_arithmetics_nat.nat
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I))
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I
                         matita_arithmetics_nat.nat
                         (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I))
                      cic.I
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.times p q)
                         x))
                   (matita_basics_logic.refl
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.times p q))
                   (matita_arithmetics_nat.times q p)
                   (matita_arithmetics_nat.commutative_times q p))
                (matita_arithmetics_nat.minus n m)
                Hdiv))
          (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q p) m)
          (matita_arithmetics_nat.commutative_plus (matita_arithmetics_nat.times q p) m)))
    _clearme.

def congruent_to_divides :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             (cic.type cic.z)
             cic.prop
             cic.prop
             cic.I
             matita_arithmetics_nat.nat
             (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                cic.prop
                cic.prop
                cic.I
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
                (__:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
                 cic.prod
                   cic.prop
                   cic.prop
                   cic.prop
                   cic.I
                   (matita_arithmetics_congruence.congruent n m p)
                   (__1:(cic.Term cic.prop (matita_arithmetics_congruence.congruent n m p)) =>
                    matita_arithmetics_primes.divides p (matita_arithmetics_nat.minus n m)))))))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  posp:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
  Hcong:(cic.Term cic.prop (matita_arithmetics_congruence.congruent n m p)) =>
  matita_arithmetics_primes.quotient
    p
    (matita_arithmetics_nat.minus n m)
    (matita_arithmetics_nat.minus
       (matita_arithmetics_div_and_mod.div n p)
       (matita_arithmetics_div_and_mod.div m p))
    (matita_basics_logic.eq_ind_r
       (cic.cast
          (cic.type (cic.s cic.z))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
          (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
          cic.I
          matita_arithmetics_nat.nat)
       (matita_arithmetics_nat.times
          (matita_arithmetics_nat.minus
             (matita_arithmetics_div_and_mod.div n p)
             (matita_arithmetics_div_and_mod.div m p))
          p)
       (cic.cast
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                (matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_div_and_mod.div n p)
                         (matita_arithmetics_div_and_mod.div m p))
                      p))
                (__:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_div_and_mod.div n p)
                                (matita_arithmetics_div_and_mod.div m p))
                             p))) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I)))
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                (matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_div_and_mod.div n p)
                         (matita_arithmetics_div_and_mod.div m p))
                      p))
                (__:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_div_and_mod.div n p)
                                (matita_arithmetics_div_and_mod.div m p))
                             p))) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I)))
          cic.I
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           __:(cic.Term
                 cic.prop
                 (matita_basics_logic.eq
                    (cic.cast
                       (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                       (cic.univ
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          cic.I)
                       cic.I
                       matita_arithmetics_nat.nat)
                    x
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_div_and_mod.div n p)
                          (matita_arithmetics_div_and_mod.div m p))
                       p))) =>
           matita_basics_logic.eq
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus n m)
             x))
       (matita_basics_logic.eq_ind_r
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
             (matita_arithmetics_div_and_mod.mod n p))
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   (matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div n p)
                            p)
                         (matita_arithmetics_div_and_mod.mod n p)))
                   (__:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div n p)
                                   p)
                                (matita_arithmetics_div_and_mod.mod n p)))) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)))
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   (matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div n p)
                            p)
                         (matita_arithmetics_div_and_mod.mod n p)))
                   (__:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div n p)
                                   p)
                                (matita_arithmetics_div_and_mod.mod n p)))) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)))
             cic.I
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              __:(cic.Term
                    cic.prop
                    (matita_basics_logic.eq
                       (cic.cast
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                          (cic.univ
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I)
                          cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div n p)
                             p)
                          (matita_arithmetics_div_and_mod.mod n p)))) =>
              matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus x m)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.minus
                      (matita_arithmetics_div_and_mod.div n p)
                      (matita_arithmetics_div_and_mod.div m p))
                   p)))
          (matita_basics_logic.eq_ind_r
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p)
                (matita_arithmetics_div_and_mod.mod m p))
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      (matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div m p)
                               p)
                            (matita_arithmetics_div_and_mod.mod m p)))
                      (__:(cic.Term
                             cic.prop
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div m p)
                                      p)
                                   (matita_arithmetics_div_and_mod.mod m p)))) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)))
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      (matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div m p)
                               p)
                            (matita_arithmetics_div_and_mod.mod m p)))
                      (__:(cic.Term
                             cic.prop
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div m p)
                                      p)
                                   (matita_arithmetics_div_and_mod.mod m p)))) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)))
                cic.I
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 __:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_div_and_mod.div m p)
                                p)
                             (matita_arithmetics_div_and_mod.mod m p)))) =>
                 matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.minus
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div n p)
                            p)
                         (matita_arithmetics_div_and_mod.mod n p))
                      x)
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_div_and_mod.div n p)
                         (matita_arithmetics_div_and_mod.div m p))
                      p)))
             (matita_basics_logic.rewrite_r
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div n p))
                (cic.cast
                   (cic.type cic.z)
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I
                      matita_arithmetics_nat.nat
                      (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I))
                   cic.I
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.plus
                            x
                            (matita_arithmetics_div_and_mod.mod n p))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div m p)
                               p)
                            (matita_arithmetics_div_and_mod.mod m p)))
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.minus
                            (matita_arithmetics_div_and_mod.div n p)
                            (matita_arithmetics_div_and_mod.div m p))
                         p)))
                (matita_basics_logic.rewrite_r
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_div_and_mod.mod n p)
                      (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div n p)))
                   (cic.cast
                      (cic.type cic.z)
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         matita_arithmetics_nat.nat
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I))
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I
                         matita_arithmetics_nat.nat
                         (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I))
                      cic.I
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.minus
                            x
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div m p)
                                  p)
                               (matita_arithmetics_div_and_mod.mod m p)))
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_div_and_mod.div n p)
                               (matita_arithmetics_div_and_mod.div m p))
                            p)))
                   (matita_basics_logic.rewrite_l
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      n
                      (cic.cast
                         (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.univ cic.prop (cic.type cic.z) cic.I))
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I
                            matita_arithmetics_nat.nat
                            (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I))
                         cic.I
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.minus
                               x
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div m p)
                                     p)
                                  (matita_arithmetics_div_and_mod.mod m p)))
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_div_and_mod.div n p)
                                  (matita_arithmetics_div_and_mod.div m p))
                               p)))
                      (matita_basics_logic.rewrite_r
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.times
                            p
                            (matita_arithmetics_div_and_mod.div m p))
                         (cic.cast
                            (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_arithmetics_nat.nat
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I
                               matita_arithmetics_nat.nat
                               (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I))
                            cic.I
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.minus
                                  n
                                  (matita_arithmetics_nat.plus
                                     x
                                     (matita_arithmetics_div_and_mod.mod m p)))
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.minus
                                     (matita_arithmetics_div_and_mod.div n p)
                                     (matita_arithmetics_div_and_mod.div m p))
                                  p)))
                         (matita_basics_logic.rewrite_l
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_div_and_mod.mod n p)
                            (cic.cast
                               (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I))
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (__:(cic.Term
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat) =>
                                   cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I))
                               cic.I
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.minus
                                     n
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times
                                           p
                                           (matita_arithmetics_div_and_mod.div m p))
                                        x))
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_div_and_mod.div n p)
                                        (matita_arithmetics_div_and_mod.div m p))
                                     p)))
                            (matita_basics_logic.rewrite_r
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_div_and_mod.mod n p)
                                  (matita_arithmetics_nat.times
                                     p
                                     (matita_arithmetics_div_and_mod.div m p)))
                               (cic.cast
                                  (cic.type cic.z)
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      cic.univ cic.prop (cic.type cic.z) cic.I))
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (__:(cic.Term
                                            (cic.type cic.z)
                                            matita_arithmetics_nat.nat) =>
                                      cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I))
                                  cic.I
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.minus n x)
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_div_and_mod.div n p)
                                           (matita_arithmetics_div_and_mod.div m p))
                                        p)))
                               (matita_basics_logic.rewrite_l
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.minus
                                     (matita_arithmetics_nat.minus
                                        n
                                        (matita_arithmetics_div_and_mod.mod n p))
                                     (matita_arithmetics_nat.times
                                        p
                                        (matita_arithmetics_div_and_mod.div m p)))
                                  (cic.cast
                                     (cic.type cic.z)
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.prod
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        cic.I
                                        matita_arithmetics_nat.nat
                                        (x:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         cic.univ cic.prop (cic.type cic.z) cic.I))
                                     (cic.prod
                                        (cic.type cic.z)
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I
                                        matita_arithmetics_nat.nat
                                        (__:(cic.Term
                                               (cic.type cic.z)
                                               matita_arithmetics_nat.nat) =>
                                         cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I))
                                     cic.I
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_div_and_mod.div n p)
                                              (matita_arithmetics_div_and_mod.div m p))
                                           p)))
                                  (matita_basics_logic.rewrite_l
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.times
                                        p
                                        (matita_arithmetics_div_and_mod.div n p))
                                     (cic.cast
                                        (cic.type cic.z)
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.prod
                                           (cic.type cic.z)
                                           (cic.type cic.z)
                                           (cic.type cic.z)
                                           cic.I
                                           matita_arithmetics_nat.nat
                                           (x:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            cic.univ cic.prop (cic.type cic.z) cic.I))
                                        (cic.prod
                                           (cic.type cic.z)
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I
                                           matita_arithmetics_nat.nat
                                           (__:(cic.Term
                                                  (cic.type cic.z)
                                                  matita_arithmetics_nat.nat) =>
                                            cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I))
                                        cic.I
                                        (x:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.minus
                                              x
                                              (matita_arithmetics_nat.times
                                                 p
                                                 (matita_arithmetics_div_and_mod.div
                                                    m
                                                    p)))
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.minus
                                                 (matita_arithmetics_div_and_mod.div
                                                    n
                                                    p)
                                                 (matita_arithmetics_div_and_mod.div
                                                    m
                                                    p))
                                              p)))
                                     (matita_basics_logic.rewrite_l
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.times
                                           p
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_div_and_mod.div n p)
                                              (matita_arithmetics_div_and_mod.div m p)))
                                        (cic.cast
                                           (cic.type cic.z)
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (x:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               cic.univ cic.prop (cic.type cic.z) cic.I))
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (__:(cic.Term
                                                     (cic.type cic.z)
                                                     matita_arithmetics_nat.nat) =>
                                               cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I))
                                           cic.I
                                           (x:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_basics_logic.eq
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              x
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.minus
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.div
                                                       m
                                                       p))
                                                 p)))
                                        (matita_basics_logic.rewrite_r
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.times
                                              p
                                              (matita_arithmetics_nat.minus
                                                 (matita_arithmetics_div_and_mod.div
                                                    n
                                                    p)
                                                 (matita_arithmetics_div_and_mod.div
                                                    m
                                                    p)))
                                           (cic.cast
                                              (cic.type cic.z)
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.prod
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 cic.I
                                                 matita_arithmetics_nat.nat
                                                 (x:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  cic.univ
                                                    cic.prop
                                                    (cic.type cic.z)
                                                    cic.I))
                                              (cic.prod
                                                 (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I
                                                 matita_arithmetics_nat.nat
                                                 (__:(cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat) =>
                                                  cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I))
                                              cic.I
                                              (x:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               matita_basics_logic.eq
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type
                                                          (cic.s (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.times
                                                    p
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_div_and_mod.div
                                                          n
                                                          p)
                                                       (matita_arithmetics_div_and_mod.div
                                                          m
                                                          p)))
                                                 x))
                                           (matita_basics_logic.refl
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.times
                                                 p
                                                 (matita_arithmetics_nat.minus
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.div
                                                       m
                                                       p))))
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.minus
                                                 (matita_arithmetics_div_and_mod.div
                                                    n
                                                    p)
                                                 (matita_arithmetics_div_and_mod.div
                                                    m
                                                    p))
                                              p)
                                           (matita_arithmetics_nat.commutative_times
                                              (matita_arithmetics_nat.minus
                                                 (matita_arithmetics_div_and_mod.div
                                                    n
                                                    p)
                                                 (matita_arithmetics_div_and_mod.div
                                                    m
                                                    p))
                                              p))
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_nat.times
                                              p
                                              (matita_arithmetics_div_and_mod.div n p))
                                           (matita_arithmetics_nat.times
                                              p
                                              (matita_arithmetics_div_and_mod.div m p)))
                                        (matita_arithmetics_nat.distributive_times_minus
                                           p
                                           (matita_arithmetics_div_and_mod.div n p)
                                           (matita_arithmetics_div_and_mod.div m p)))
                                     (matita_arithmetics_nat.minus
                                        n
                                        (matita_arithmetics_div_and_mod.mod n p))
                                     (matita_basics_logic.rewrite_l
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div n p)
                                           p)
                                        (cic.cast
                                           (cic.type cic.z)
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (x:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               cic.univ cic.prop (cic.type cic.z) cic.I))
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (__:(cic.Term
                                                     (cic.type cic.z)
                                                     matita_arithmetics_nat.nat) =>
                                               cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I))
                                           cic.I
                                           (x:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_basics_logic.eq
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              x
                                              (matita_arithmetics_nat.minus
                                                 n
                                                 (matita_arithmetics_div_and_mod.mod
                                                    n
                                                    p))))
                                        (matita_arithmetics_div_and_mod.eq_times_div_minus_mod
                                           n
                                           p)
                                        (matita_arithmetics_nat.times
                                           p
                                           (matita_arithmetics_div_and_mod.div n p))
                                        (matita_arithmetics_nat.commutative_times
                                           (matita_arithmetics_div_and_mod.div n p)
                                           p)))
                                  (matita_arithmetics_nat.minus
                                     n
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_div_and_mod.mod n p)
                                        (matita_arithmetics_nat.times
                                           p
                                           (matita_arithmetics_div_and_mod.div m p))))
                                  (matita_arithmetics_nat.minus_plus
                                     n
                                     (matita_arithmetics_div_and_mod.mod n p)
                                     (matita_arithmetics_nat.times
                                        p
                                        (matita_arithmetics_div_and_mod.div m p))))
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     p
                                     (matita_arithmetics_div_and_mod.div m p))
                                  (matita_arithmetics_div_and_mod.mod n p))
                               (matita_arithmetics_nat.commutative_plus
                                  (matita_arithmetics_nat.times
                                     p
                                     (matita_arithmetics_div_and_mod.div m p))
                                  (matita_arithmetics_div_and_mod.mod n p)))
                            (matita_arithmetics_div_and_mod.mod m p)
                            Hcong)
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div m p)
                            p)
                         (matita_arithmetics_nat.commutative_times
                            (matita_arithmetics_div_and_mod.div m p)
                            p))
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_div_and_mod.mod n p)
                         (matita_arithmetics_nat.times
                            p
                            (matita_arithmetics_div_and_mod.div n p)))
                      (matita_basics_logic.rewrite_l
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times
                               p
                               (matita_arithmetics_div_and_mod.div n p))
                            (matita_arithmetics_div_and_mod.mod n p))
                         (cic.cast
                            (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_arithmetics_nat.nat
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I
                               matita_arithmetics_nat.nat
                               (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I))
                            cic.I
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               n
                               x))
                         (matita_basics_logic.rewrite_l
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div n p)
                               p)
                            (cic.cast
                               (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I))
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (__:(cic.Term
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat) =>
                                   cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I))
                               cic.I
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  n
                                  (matita_arithmetics_nat.plus
                                     x
                                     (matita_arithmetics_div_and_mod.mod n p))))
                            (matita_arithmetics_div_and_mod.div_mod n p)
                            (matita_arithmetics_nat.times
                               p
                               (matita_arithmetics_div_and_mod.div n p))
                            (matita_arithmetics_nat.commutative_times
                               (matita_arithmetics_div_and_mod.div n p)
                               p))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_div_and_mod.mod n p)
                            (matita_arithmetics_nat.times
                               p
                               (matita_arithmetics_div_and_mod.div n p)))
                         (matita_arithmetics_nat.commutative_plus
                            (matita_arithmetics_nat.times
                               p
                               (matita_arithmetics_div_and_mod.div n p))
                            (matita_arithmetics_div_and_mod.mod n p))))
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div n p))
                      (matita_arithmetics_div_and_mod.mod n p))
                   (matita_arithmetics_nat.commutative_plus
                      (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div n p))
                      (matita_arithmetics_div_and_mod.mod n p)))
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
                (matita_arithmetics_nat.commutative_times
                   (matita_arithmetics_div_and_mod.div n p)
                   p))
             m
             (matita_arithmetics_div_and_mod.div_mod m p))
          n
          (matita_arithmetics_div_and_mod.div_mod n p))
       (matita_arithmetics_nat.times
          p
          (matita_arithmetics_nat.minus
             (matita_arithmetics_div_and_mod.div n p)
             (matita_arithmetics_div_and_mod.div m p)))
       (matita_arithmetics_nat.commutative_times
          p
          (matita_arithmetics_nat.minus
             (matita_arithmetics_div_and_mod.div n p)
             (matita_arithmetics_div_and_mod.div m p)))).

def let_clause_1034 :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             (cic.type cic.z)
             cic.prop
             cic.prop
             cic.I
             matita_arithmetics_nat.nat
             (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                cic.prop
                cic.prop
                cic.I
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
                (posp:(cic.Term
                         cic.prop
                         (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
                 cic.prod
                   (cic.type cic.z)
                   cic.prop
                   cic.prop
                   cic.I
                   matita_arithmetics_nat.nat
                   (x2515:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      (cic.type cic.z)
                      cic.prop
                      cic.prop
                      cic.I
                      matita_arithmetics_nat.nat
                      (x2516:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         x2515
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_div_and_mod.mod x2515 x2516)
                            (matita_arithmetics_nat.times
                               x2516
                               (matita_arithmetics_div_and_mod.div x2515 x2516))))))))))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  posp:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
  x2515:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  x2516:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  matita_basics_logic.rewrite_l
    (cic.cast
       (cic.type (cic.s cic.z))
       (cic.type (cic.s (cic.s (cic.s cic.z))))
       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
       (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
       cic.I
       matita_arithmetics_nat.nat)
    (matita_arithmetics_nat.plus
       (matita_arithmetics_nat.times x2516 (matita_arithmetics_div_and_mod.div x2515 x2516))
       (matita_arithmetics_div_and_mod.mod x2515 x2516))
    (cic.cast
       (cic.type cic.z)
       (cic.type (cic.s (cic.s (cic.s cic.z))))
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ cic.prop (cic.type cic.z) cic.I))
       (cic.prod
          (cic.type cic.z)
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          cic.I
          matita_arithmetics_nat.nat
          (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I))
       cic.I
       (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          x2515
          x))
    (matita_basics_logic.rewrite_l
       (cic.cast
          (cic.type (cic.s cic.z))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
          (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
          cic.I
          matita_arithmetics_nat.nat)
       (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div x2515 x2516) x2516)
       (cic.cast
          (cic.type cic.z)
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.univ cic.prop (cic.type cic.z) cic.I))
          (cic.prod
             (cic.type cic.z)
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             cic.I
             matita_arithmetics_nat.nat
             (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I))
          cic.I
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             x2515
             (matita_arithmetics_nat.plus x (matita_arithmetics_div_and_mod.mod x2515 x2516))))
       (matita_arithmetics_div_and_mod.div_mod x2515 x2516)
       (matita_arithmetics_nat.times x2516 (matita_arithmetics_div_and_mod.div x2515 x2516))
       (matita_arithmetics_nat.commutative_times
          (matita_arithmetics_div_and_mod.div x2515 x2516)
          x2516))
    (matita_arithmetics_nat.plus
       (matita_arithmetics_div_and_mod.mod x2515 x2516)
       (matita_arithmetics_nat.times x2516 (matita_arithmetics_div_and_mod.div x2515 x2516)))
    (matita_arithmetics_nat.commutative_plus
       (matita_arithmetics_nat.times x2516 (matita_arithmetics_div_and_mod.div x2515 x2516))
       (matita_arithmetics_div_and_mod.mod x2515 x2516)).

def let_clause_73 :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             (cic.type cic.z)
             cic.prop
             cic.prop
             cic.I
             matita_arithmetics_nat.nat
             (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                cic.prop
                cic.prop
                cic.I
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
                (posp:(cic.Term
                         cic.prop
                         (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
                 cic.prod
                   (cic.type cic.z)
                   cic.prop
                   cic.prop
                   cic.I
                   matita_arithmetics_nat.nat
                   (x134:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      (cic.type cic.z)
                      cic.prop
                      cic.prop
                      cic.I
                      matita_arithmetics_nat.nat
                      (x135:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.prod
                         (cic.type cic.z)
                         cic.prop
                         cic.prop
                         cic.I
                         matita_arithmetics_nat.nat
                         (x136:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.plus
                               x134
                               (matita_arithmetics_nat.plus x135 x136))
                            (matita_arithmetics_nat.plus
                               x135
                               (matita_arithmetics_nat.plus x134 x136))))))))))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  posp:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
  x134:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  x135:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  x136:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  matita_basics_logic.rewrite_l
    (cic.cast
       (cic.type (cic.s cic.z))
       (cic.type (cic.s (cic.s (cic.s cic.z))))
       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
       (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
       cic.I
       matita_arithmetics_nat.nat)
    (matita_arithmetics_nat.plus (matita_arithmetics_nat.plus x135 x134) x136)
    (cic.cast
       (cic.type cic.z)
       (cic.type (cic.s (cic.s (cic.s cic.z))))
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ cic.prop (cic.type cic.z) cic.I))
       (cic.prod
          (cic.type cic.z)
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          cic.I
          matita_arithmetics_nat.nat
          (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I))
       cic.I
       (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_nat.plus x134 (matita_arithmetics_nat.plus x135 x136))
          x))
    (matita_arithmetics_nat.assoc_plus1 x136 x135 x134)
    (matita_arithmetics_nat.plus x135 (matita_arithmetics_nat.plus x134 x136))
    (matita_arithmetics_nat.associative_plus x135 x134 x136).

def mod_times :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             (cic.type cic.z)
             cic.prop
             cic.prop
             cic.I
             matita_arithmetics_nat.nat
             (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                cic.prop
                cic.prop
                cic.I
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
                (__:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
                 matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times n m) p)
                   (matita_arithmetics_div_and_mod.mod
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_div_and_mod.mod n p)
                         (matita_arithmetics_div_and_mod.mod m p))
                      p))))))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  posp:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
  matita_arithmetics_congruence.eq_times_plus_to_congruent
    (matita_arithmetics_nat.times n m)
    (matita_arithmetics_nat.times
       (matita_arithmetics_div_and_mod.mod n p)
       (matita_arithmetics_div_and_mod.mod m p))
    p
    (matita_arithmetics_nat.plus
       (matita_arithmetics_nat.plus
          (matita_arithmetics_nat.times
             (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
             (matita_arithmetics_div_and_mod.div m p))
          (matita_arithmetics_nat.times
             (matita_arithmetics_div_and_mod.div n p)
             (matita_arithmetics_div_and_mod.mod m p)))
       (matita_arithmetics_nat.times
          (matita_arithmetics_div_and_mod.mod n p)
          (matita_arithmetics_div_and_mod.div m p)))
    posp
    (matita_basics_logic.trans_eq
       (cic.cast
          (cic.type (cic.s cic.z))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
          (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
          cic.I
          matita_arithmetics_nat.nat)
       (matita_arithmetics_nat.times n m)
       (matita_arithmetics_nat.times
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
             (matita_arithmetics_div_and_mod.mod n p))
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p)
             (matita_arithmetics_div_and_mod.mod m p)))
       (matita_arithmetics_nat.plus
          (matita_arithmetics_nat.times
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
                      (matita_arithmetics_div_and_mod.div m p))
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_div_and_mod.div n p)
                      (matita_arithmetics_div_and_mod.mod m p)))
                (matita_arithmetics_nat.times
                   (matita_arithmetics_div_and_mod.mod n p)
                   (matita_arithmetics_div_and_mod.div m p)))
             p)
          (matita_arithmetics_nat.times
             (matita_arithmetics_div_and_mod.mod n p)
             (matita_arithmetics_div_and_mod.mod m p)))
       (matita_basics_logic.rewrite_r
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div n p))
          (cic.cast
             (cic.type cic.z)
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I))
             (cic.prod
                (cic.type cic.z)
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I
                matita_arithmetics_nat.nat
                (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I))
             cic.I
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.times n m)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.plus x (matita_arithmetics_div_and_mod.mod n p))
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p)
                      (matita_arithmetics_div_and_mod.mod m p)))))
          (matita_basics_logic.rewrite_r
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_div_and_mod.mod n p)
                (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div n p)))
             (cic.cast
                (cic.type cic.z)
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I))
                (cic.prod
                   (cic.type cic.z)
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I
                   matita_arithmetics_nat.nat
                   (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I))
                cic.I
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.times n m)
                   (matita_arithmetics_nat.times
                      x
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div m p)
                            p)
                         (matita_arithmetics_div_and_mod.mod m p)))))
             (matita_basics_logic.rewrite_l
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                n
                (cic.cast
                   (cic.type cic.z)
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I
                      matita_arithmetics_nat.nat
                      (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I))
                   cic.I
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.times n m)
                      (matita_arithmetics_nat.times
                         x
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div m p)
                               p)
                            (matita_arithmetics_div_and_mod.mod m p)))))
                (matita_basics_logic.rewrite_r
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div m p))
                   (cic.cast
                      (cic.type cic.z)
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         matita_arithmetics_nat.nat
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I))
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I
                         matita_arithmetics_nat.nat
                         (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I))
                      cic.I
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.times n m)
                         (matita_arithmetics_nat.times
                            n
                            (matita_arithmetics_nat.plus
                               x
                               (matita_arithmetics_div_and_mod.mod m p)))))
                   (matita_basics_logic.rewrite_r
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_div_and_mod.mod m p)
                         (matita_arithmetics_nat.times
                            p
                            (matita_arithmetics_div_and_mod.div m p)))
                      (cic.cast
                         (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.univ cic.prop (cic.type cic.z) cic.I))
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I
                            matita_arithmetics_nat.nat
                            (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I))
                         cic.I
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.times n m)
                            (matita_arithmetics_nat.times n x)))
                      (matita_basics_logic.rewrite_l
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         m
                         (cic.cast
                            (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_arithmetics_nat.nat
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I
                               matita_arithmetics_nat.nat
                               (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I))
                            cic.I
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.times n m)
                               (matita_arithmetics_nat.times n x)))
                         (matita_basics_logic.refl
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.times n m))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_div_and_mod.mod m p)
                            (matita_arithmetics_nat.times
                               p
                               (matita_arithmetics_div_and_mod.div m p)))
                         (matita_arithmetics_congruence.let_clause_1034 n m p posp m p))
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            p
                            (matita_arithmetics_div_and_mod.div m p))
                         (matita_arithmetics_div_and_mod.mod m p))
                      (matita_arithmetics_nat.commutative_plus
                         (matita_arithmetics_nat.times
                            p
                            (matita_arithmetics_div_and_mod.div m p))
                         (matita_arithmetics_div_and_mod.mod m p)))
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p)
                   (matita_arithmetics_nat.commutative_times
                      (matita_arithmetics_div_and_mod.div m p)
                      p))
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_div_and_mod.mod n p)
                   (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div n p)))
                (matita_arithmetics_congruence.let_clause_1034 n m p posp n p))
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div n p))
                (matita_arithmetics_div_and_mod.mod n p))
             (matita_arithmetics_nat.commutative_plus
                (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.div n p))
                (matita_arithmetics_div_and_mod.mod n p)))
          (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
          (matita_arithmetics_nat.commutative_times (matita_arithmetics_div_and_mod.div n p) p))
       (matita_basics_logic.trans_eq
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_nat.times
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
                (matita_arithmetics_div_and_mod.mod n p))
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p)
                (matita_arithmetics_div_and_mod.mod m p)))
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p))
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
                      (matita_arithmetics_div_and_mod.mod m p)))
                (matita_arithmetics_nat.times
                   (matita_arithmetics_div_and_mod.mod n p)
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p)))
             (matita_arithmetics_nat.times
                (matita_arithmetics_div_and_mod.mod n p)
                (matita_arithmetics_div_and_mod.mod m p)))
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div n p)
                            p)
                         (matita_arithmetics_div_and_mod.div m p))
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_div_and_mod.div n p)
                         (matita_arithmetics_div_and_mod.mod m p)))
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_div_and_mod.mod n p)
                      (matita_arithmetics_div_and_mod.div m p)))
                p)
             (matita_arithmetics_nat.times
                (matita_arithmetics_div_and_mod.mod n p)
                (matita_arithmetics_div_and_mod.mod m p)))
          ((a:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
            b:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
            c:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
            d:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
            matita_basics_logic.eq_ind_r
              (cic.cast
                 (cic.type (cic.s cic.z))
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                 (cic.univ
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    cic.I)
                 cic.I
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_nat.times a (matita_arithmetics_nat.plus c d))
                 (matita_arithmetics_nat.times b (matita_arithmetics_nat.plus c d)))
              (cic.cast
                 (cic.type cic.z)
                 (cic.type cic.z)
                 (cic.prod
                    (cic.type cic.z)
                    (cic.type cic.z)
                    (cic.type cic.z)
                    cic.I
                    matita_arithmetics_nat.nat
                    (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                     cic.prod
                       cic.prop
                       (cic.type cic.z)
                       (cic.type cic.z)
                       cic.I
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times
                                a
                                (matita_arithmetics_nat.plus c d))
                             (matita_arithmetics_nat.times
                                b
                                (matita_arithmetics_nat.plus c d))))
                       (__:(cic.Term
                              cic.prop
                              (matita_basics_logic.eq
                                 (cic.cast
                                    (cic.type (cic.s cic.z))
                                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                                    (cic.univ
                                       (cic.type cic.z)
                                       (cic.type (cic.s cic.z))
                                       cic.I)
                                    (cic.univ
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                                       cic.I)
                                    cic.I
                                    matita_arithmetics_nat.nat)
                                 x
                                 (matita_arithmetics_nat.plus
                                    (matita_arithmetics_nat.times
                                       a
                                       (matita_arithmetics_nat.plus c d))
                                    (matita_arithmetics_nat.times
                                       b
                                       (matita_arithmetics_nat.plus c d))))) =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)))
                 (cic.prod
                    (cic.type cic.z)
                    (cic.type cic.z)
                    (cic.type cic.z)
                    cic.I
                    matita_arithmetics_nat.nat
                    (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                     cic.prod
                       cic.prop
                       (cic.type cic.z)
                       (cic.type cic.z)
                       cic.I
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times
                                a
                                (matita_arithmetics_nat.plus c d))
                             (matita_arithmetics_nat.times
                                b
                                (matita_arithmetics_nat.plus c d))))
                       (__:(cic.Term
                              cic.prop
                              (matita_basics_logic.eq
                                 (cic.cast
                                    (cic.type (cic.s cic.z))
                                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                                    (cic.univ
                                       (cic.type cic.z)
                                       (cic.type (cic.s cic.z))
                                       cic.I)
                                    (cic.univ
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                                       cic.I)
                                    cic.I
                                    matita_arithmetics_nat.nat)
                                 x
                                 (matita_arithmetics_nat.plus
                                    (matita_arithmetics_nat.times
                                       a
                                       (matita_arithmetics_nat.plus c d))
                                    (matita_arithmetics_nat.times
                                       b
                                       (matita_arithmetics_nat.plus c d))))) =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)))
                 cic.I
                 (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                  __:(cic.Term
                        cic.prop
                        (matita_basics_logic.eq
                           (cic.cast
                              (cic.type (cic.s cic.z))
                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                              (cic.univ
                                 (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                                 cic.I)
                              cic.I
                              matita_arithmetics_nat.nat)
                           x
                           (matita_arithmetics_nat.plus
                              (matita_arithmetics_nat.times
                                 a
                                 (matita_arithmetics_nat.plus c d))
                              (matita_arithmetics_nat.times
                                 b
                                 (matita_arithmetics_nat.plus c d))))) =>
                  matita_basics_logic.eq
                    (cic.cast
                       (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                       (cic.univ
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          cic.I)
                       cic.I
                       matita_arithmetics_nat.nat)
                    x
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times a c)
                             (matita_arithmetics_nat.times a d))
                          (matita_arithmetics_nat.times b c))
                       (matita_arithmetics_nat.times b d))))
              (matita_basics_logic.eq_ind_r
                 (cic.cast
                    (cic.type (cic.s cic.z))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                    (cic.univ
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       cic.I)
                    cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times a c)
                    (matita_arithmetics_nat.times a d))
                 (cic.cast
                    (cic.type cic.z)
                    (cic.type cic.z)
                    (cic.prod
                       (cic.type cic.z)
                       (cic.type cic.z)
                       (cic.type cic.z)
                       cic.I
                       matita_arithmetics_nat.nat
                       (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                        cic.prod
                          cic.prop
                          (cic.type cic.z)
                          (cic.type cic.z)
                          cic.I
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times a c)
                                (matita_arithmetics_nat.times a d)))
                          (__:(cic.Term
                                 cic.prop
                                 (matita_basics_logic.eq
                                    (cic.cast
                                       (cic.type (cic.s cic.z))
                                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                                       (cic.univ
                                          (cic.type cic.z)
                                          (cic.type (cic.s cic.z))
                                          cic.I)
                                       (cic.univ
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                                          cic.I)
                                       cic.I
                                       matita_arithmetics_nat.nat)
                                    x
                                    (matita_arithmetics_nat.plus
                                       (matita_arithmetics_nat.times a c)
                                       (matita_arithmetics_nat.times a d)))) =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)))
                    (cic.prod
                       (cic.type cic.z)
                       (cic.type cic.z)
                       (cic.type cic.z)
                       cic.I
                       matita_arithmetics_nat.nat
                       (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                        cic.prod
                          cic.prop
                          (cic.type cic.z)
                          (cic.type cic.z)
                          cic.I
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times a c)
                                (matita_arithmetics_nat.times a d)))
                          (__:(cic.Term
                                 cic.prop
                                 (matita_basics_logic.eq
                                    (cic.cast
                                       (cic.type (cic.s cic.z))
                                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                                       (cic.univ
                                          (cic.type cic.z)
                                          (cic.type (cic.s cic.z))
                                          cic.I)
                                       (cic.univ
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                                          cic.I)
                                       cic.I
                                       matita_arithmetics_nat.nat)
                                    x
                                    (matita_arithmetics_nat.plus
                                       (matita_arithmetics_nat.times a c)
                                       (matita_arithmetics_nat.times a d)))) =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)))
                    cic.I
                    (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                     __:(cic.Term
                           cic.prop
                           (matita_basics_logic.eq
                              (cic.cast
                                 (cic.type (cic.s cic.z))
                                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                                 (cic.univ
                                    (cic.type cic.z)
                                    (cic.type (cic.s cic.z))
                                    cic.I)
                                 (cic.univ
                                    (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                                    cic.I)
                                 cic.I
                                 matita_arithmetics_nat.nat)
                              x
                              (matita_arithmetics_nat.plus
                                 (matita_arithmetics_nat.times a c)
                                 (matita_arithmetics_nat.times a d)))) =>
                     matita_basics_logic.eq
                       (cic.cast
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                          (cic.univ
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I)
                          cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          x
                          (matita_arithmetics_nat.times b (matita_arithmetics_nat.plus c d)))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times a c)
                                (matita_arithmetics_nat.times a d))
                             (matita_arithmetics_nat.times b c))
                          (matita_arithmetics_nat.times b d))))
                 (matita_basics_logic.eq_ind_r
                    (cic.cast
                       (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                       (cic.univ
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          cic.I)
                       cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times b c)
                       (matita_arithmetics_nat.times b d))
                    (cic.cast
                       (cic.type cic.z)
                       (cic.type cic.z)
                       (cic.prod
                          (cic.type cic.z)
                          (cic.type cic.z)
                          (cic.type cic.z)
                          cic.I
                          matita_arithmetics_nat.nat
                          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                           cic.prod
                             cic.prop
                             (cic.type cic.z)
                             (cic.type cic.z)
                             cic.I
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times b c)
                                   (matita_arithmetics_nat.times b d)))
                             (__:(cic.Term
                                    cic.prop
                                    (matita_basics_logic.eq
                                       (cic.cast
                                          (cic.type (cic.s cic.z))
                                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                                          (cic.univ
                                             (cic.type cic.z)
                                             (cic.type (cic.s cic.z))
                                             cic.I)
                                          (cic.univ
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type
                                                (cic.s (cic.s (cic.s cic.z))))
                                             cic.I)
                                          cic.I
                                          matita_arithmetics_nat.nat)
                                       x
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.times b c)
                                          (matita_arithmetics_nat.times b d)))) =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)))
                       (cic.prod
                          (cic.type cic.z)
                          (cic.type cic.z)
                          (cic.type cic.z)
                          cic.I
                          matita_arithmetics_nat.nat
                          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                           cic.prod
                             cic.prop
                             (cic.type cic.z)
                             (cic.type cic.z)
                             cic.I
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times b c)
                                   (matita_arithmetics_nat.times b d)))
                             (__:(cic.Term
                                    cic.prop
                                    (matita_basics_logic.eq
                                       (cic.cast
                                          (cic.type (cic.s cic.z))
                                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                                          (cic.univ
                                             (cic.type cic.z)
                                             (cic.type (cic.s cic.z))
                                             cic.I)
                                          (cic.univ
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type
                                                (cic.s (cic.s (cic.s cic.z))))
                                             cic.I)
                                          cic.I
                                          matita_arithmetics_nat.nat)
                                       x
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.times b c)
                                          (matita_arithmetics_nat.times b d)))) =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)))
                       cic.I
                       (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                        __:(cic.Term
                              cic.prop
                              (matita_basics_logic.eq
                                 (cic.cast
                                    (cic.type (cic.s cic.z))
                                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                                    (cic.univ
                                       (cic.type cic.z)
                                       (cic.type (cic.s cic.z))
                                       cic.I)
                                    (cic.univ
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                                       cic.I)
                                    cic.I
                                    matita_arithmetics_nat.nat)
                                 x
                                 (matita_arithmetics_nat.plus
                                    (matita_arithmetics_nat.times b c)
                                    (matita_arithmetics_nat.times b d)))) =>
                        matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times a c)
                                (matita_arithmetics_nat.times a d))
                             x)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times a c)
                                   (matita_arithmetics_nat.times a d))
                                (matita_arithmetics_nat.times b c))
                             (matita_arithmetics_nat.times b d))))
                    (matita_basics_logic.rewrite_l
                       (cic.cast
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                          (cic.univ
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I)
                          cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times a c)
                                (matita_arithmetics_nat.times a d))
                             (matita_arithmetics_nat.times b c))
                          (matita_arithmetics_nat.times b d))
                       (cic.cast
                          (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.prod
                             (cic.type cic.z)
                             (cic.type cic.z)
                             (cic.type cic.z)
                             cic.I
                             matita_arithmetics_nat.nat
                             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                              cic.univ cic.prop (cic.type cic.z) cic.I))
                          (cic.prod
                             (cic.type cic.z)
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I
                             matita_arithmetics_nat.nat
                             (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                              cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I))
                          cic.I
                          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                           matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times a c)
                                      (matita_arithmetics_nat.times a d))
                                   (matita_arithmetics_nat.times b c))
                                (matita_arithmetics_nat.times b d))))
                       (matita_basics_logic.refl
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times a c)
                                   (matita_arithmetics_nat.times a d))
                                (matita_arithmetics_nat.times b c))
                             (matita_arithmetics_nat.times b d)))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times a c)
                             (matita_arithmetics_nat.times a d))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times b c)
                             (matita_arithmetics_nat.times b d)))
                       (matita_arithmetics_nat.associative_plus
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times a c)
                             (matita_arithmetics_nat.times a d))
                          (matita_arithmetics_nat.times b c)
                          (matita_arithmetics_nat.times b d)))
                    (matita_arithmetics_nat.times b (matita_arithmetics_nat.plus c d))
                    (matita_arithmetics_nat.distributive_times_plus b c d))
                 (matita_arithmetics_nat.times a (matita_arithmetics_nat.plus c d))
                 (matita_arithmetics_nat.distributive_times_plus a c d))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.plus a b)
                 (matita_arithmetics_nat.plus c d))
              (matita_arithmetics_nat.distributive_times_plus_r
                 (matita_arithmetics_nat.plus c d)
                 a
                 b))
             (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
             (matita_arithmetics_div_and_mod.mod n p)
             (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p)
             (matita_arithmetics_div_and_mod.mod m p))
          (matita_basics_logic.eq_f2
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             matita_arithmetics_nat.plus
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p))
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
                      (matita_arithmetics_div_and_mod.mod m p)))
                (matita_arithmetics_nat.times
                   (matita_arithmetics_div_and_mod.mod n p)
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p)))
             (matita_arithmetics_nat.times
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div n p)
                            p)
                         (matita_arithmetics_div_and_mod.div m p))
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_div_and_mod.div n p)
                         (matita_arithmetics_div_and_mod.mod m p)))
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_div_and_mod.mod n p)
                      (matita_arithmetics_div_and_mod.div m p)))
                p)
             (matita_arithmetics_nat.times
                (matita_arithmetics_div_and_mod.mod n p)
                (matita_arithmetics_div_and_mod.mod m p))
             (matita_arithmetics_nat.times
                (matita_arithmetics_div_and_mod.mod n p)
                (matita_arithmetics_div_and_mod.mod m p))
             (matita_basics_logic.eq_ind
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
                      (matita_arithmetics_div_and_mod.div m p))
                   p)
                (cic.cast
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.prod
                         cic.prop
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         (matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div n p)
                                     p)
                                  (matita_arithmetics_div_and_mod.div m p))
                               p)
                            x_1)
                         (_x_2:(cic.Term
                                  cic.prop
                                  (matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.div n p)
                                              p)
                                           (matita_arithmetics_div_and_mod.div m p))
                                        p)
                                     x_1)) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.prod
                         cic.prop
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         (matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div n p)
                                     p)
                                  (matita_arithmetics_div_and_mod.div m p))
                               p)
                            x_1)
                         (_x_2:(cic.Term
                                  cic.prop
                                  (matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.div n p)
                                              p)
                                           (matita_arithmetics_div_and_mod.div m p))
                                        p)
                                     x_1)) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)))
                   cic.I
                   (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    _x_2:(cic.Term
                            cic.prop
                            (matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ
                                     (cic.type cic.z)
                                     (cic.type (cic.s cic.z))
                                     cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.div n p)
                                        p)
                                     (matita_arithmetics_div_and_mod.div m p))
                                  p)
                               x_1)) =>
                    matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.plus
                            x_1
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div n p)
                                  p)
                               (matita_arithmetics_div_and_mod.mod m p)))
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.mod n p)
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div m p)
                               p)))
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div n p)
                                     p)
                                  (matita_arithmetics_div_and_mod.div m p))
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div n p)
                                  (matita_arithmetics_div_and_mod.mod m p)))
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.mod n p)
                               (matita_arithmetics_div_and_mod.div m p)))
                         p)))
                (matita_basics_logic.eq_ind_r
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_div_and_mod.div n p)
                      (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.mod m p)))
                   (cic.cast
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         matita_arithmetics_nat.nat
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.prod
                            cic.prop
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            (matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div n p)
                                  (matita_arithmetics_nat.times
                                     p
                                     (matita_arithmetics_div_and_mod.mod m p))))
                            (__:(cic.Term
                                   cic.prop
                                   (matita_basics_logic.eq
                                      (cic.cast
                                         (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         (cic.univ
                                            (cic.type cic.z)
                                            (cic.type (cic.s cic.z))
                                            cic.I)
                                         (cic.univ
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            cic.I)
                                         cic.I
                                         matita_arithmetics_nat.nat)
                                      x
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div n p)
                                         (matita_arithmetics_nat.times
                                            p
                                            (matita_arithmetics_div_and_mod.mod m p))))) =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)))
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         matita_arithmetics_nat.nat
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.prod
                            cic.prop
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            (matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div n p)
                                  (matita_arithmetics_nat.times
                                     p
                                     (matita_arithmetics_div_and_mod.mod m p))))
                            (__:(cic.Term
                                   cic.prop
                                   (matita_basics_logic.eq
                                      (cic.cast
                                         (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         (cic.univ
                                            (cic.type cic.z)
                                            (cic.type (cic.s cic.z))
                                            cic.I)
                                         (cic.univ
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            cic.I)
                                         cic.I
                                         matita_arithmetics_nat.nat)
                                      x
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div n p)
                                         (matita_arithmetics_nat.times
                                            p
                                            (matita_arithmetics_div_and_mod.mod m p))))) =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)))
                      cic.I
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       __:(cic.Term
                             cic.prop
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div n p)
                                   (matita_arithmetics_nat.times
                                      p
                                      (matita_arithmetics_div_and_mod.mod m p))))) =>
                       matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.div n p)
                                        p)
                                     (matita_arithmetics_div_and_mod.div m p))
                                  p)
                               x)
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.mod n p)
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div m p)
                                  p)))
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.div n p)
                                        p)
                                     (matita_arithmetics_div_and_mod.div m p))
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div n p)
                                     (matita_arithmetics_div_and_mod.mod m p)))
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.mod n p)
                                  (matita_arithmetics_div_and_mod.div m p)))
                            p)))
                   (matita_basics_logic.eq_ind_r
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.mod m p) p)
                      (cic.cast
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.mod m p)
                                     p))
                               (__:(cic.Term
                                      cic.prop
                                      (matita_basics_logic.eq
                                         (cic.cast
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            (cic.univ
                                               (cic.type cic.z)
                                               (cic.type (cic.s cic.z))
                                               cic.I)
                                            (cic.univ
                                               (cic.type (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               cic.I)
                                            cic.I
                                            matita_arithmetics_nat.nat)
                                         x
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.mod m p)
                                            p))) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)))
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.mod m p)
                                     p))
                               (__:(cic.Term
                                      cic.prop
                                      (matita_basics_logic.eq
                                         (cic.cast
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            (cic.univ
                                               (cic.type cic.z)
                                               (cic.type (cic.s cic.z))
                                               cic.I)
                                            (cic.univ
                                               (cic.type (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               cic.I)
                                            cic.I
                                            matita_arithmetics_nat.nat)
                                         x
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.mod m p)
                                            p))) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)))
                         cic.I
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          __:(cic.Term
                                cic.prop
                                (matita_basics_logic.eq
                                   (cic.cast
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      (cic.univ
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         cic.I)
                                      cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.mod m p)
                                      p))) =>
                          matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div n p)
                                           p)
                                        (matita_arithmetics_div_and_mod.div m p))
                                     p)
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div n p)
                                     x))
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.mod n p)
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div m p)
                                     p)))
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div n p)
                                           p)
                                        (matita_arithmetics_div_and_mod.div m p))
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.div n p)
                                        (matita_arithmetics_div_and_mod.mod m p)))
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.mod n p)
                                     (matita_arithmetics_div_and_mod.div m p)))
                               p)))
                      (matita_basics_logic.eq_ind
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div n p)
                               (matita_arithmetics_div_and_mod.mod m p))
                            p)
                         (cic.cast
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_arithmetics_nat.nat
                               (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.prod
                                  cic.prop
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  (matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div n p)
                                           (matita_arithmetics_div_and_mod.mod m p))
                                        p)
                                     x_1)
                                  (_x_2:(cic.Term
                                           cic.prop
                                           (matita_basics_logic.eq
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.mod
                                                       m
                                                       p))
                                                 p)
                                              x_1)) =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I)))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_arithmetics_nat.nat
                               (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.prod
                                  cic.prop
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  (matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div n p)
                                           (matita_arithmetics_div_and_mod.mod m p))
                                        p)
                                     x_1)
                                  (_x_2:(cic.Term
                                           cic.prop
                                           (matita_basics_logic.eq
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.mod
                                                       m
                                                       p))
                                                 p)
                                              x_1)) =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I)))
                            cic.I
                            (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             _x_2:(cic.Term
                                     cic.prop
                                     (matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.div n p)
                                              (matita_arithmetics_div_and_mod.mod m p))
                                           p)
                                        x_1)) =>
                             matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.div n p)
                                              p)
                                           (matita_arithmetics_div_and_mod.div m p))
                                        p)
                                     x_1)
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.mod n p)
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.div m p)
                                        p)))
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.div n p)
                                              p)
                                           (matita_arithmetics_div_and_mod.div m p))
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div n p)
                                           (matita_arithmetics_div_and_mod.mod m p)))
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.mod n p)
                                        (matita_arithmetics_div_and_mod.div m p)))
                                  p)))
                         (matita_basics_logic.eq_ind_r
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div n p)
                                           p)
                                        (matita_arithmetics_div_and_mod.div m p))
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.div n p)
                                        (matita_arithmetics_div_and_mod.mod m p)))
                                  p)
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.mod n p)
                                     (matita_arithmetics_div_and_mod.div m p))
                                  p))
                            (cic.cast
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   cic.prod
                                     cic.prop
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     (matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_div_and_mod.div
                                                          n
                                                          p)
                                                       p)
                                                    (matita_arithmetics_div_and_mod.div
                                                       m
                                                       p))
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.mod
                                                       m
                                                       p)))
                                              p)
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.mod
                                                    n
                                                    p)
                                                 (matita_arithmetics_div_and_mod.div
                                                    m
                                                    p))
                                              p)))
                                     (__:(cic.Term
                                            cic.prop
                                            (matita_basics_logic.eq
                                               (cic.cast
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s (cic.s cic.z))))
                                                  (cic.univ
                                                     (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I)
                                                  (cic.univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s
                                                           (cic.s (cic.s cic.z))))
                                                     cic.I)
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               x
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n
                                                                 p)
                                                              p)
                                                           (matita_arithmetics_div_and_mod.div
                                                              m
                                                              p))
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_div_and_mod.div
                                                              n
                                                              p)
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m
                                                              p)))
                                                     p)
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_div_and_mod.mod
                                                           n
                                                           p)
                                                        (matita_arithmetics_div_and_mod.div
                                                           m
                                                           p))
                                                     p)))) =>
                                      cic.univ cic.prop (cic.type cic.z) cic.I)))
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   cic.prod
                                     cic.prop
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     (matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_div_and_mod.div
                                                          n
                                                          p)
                                                       p)
                                                    (matita_arithmetics_div_and_mod.div
                                                       m
                                                       p))
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.mod
                                                       m
                                                       p)))
                                              p)
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.mod
                                                    n
                                                    p)
                                                 (matita_arithmetics_div_and_mod.div
                                                    m
                                                    p))
                                              p)))
                                     (__:(cic.Term
                                            cic.prop
                                            (matita_basics_logic.eq
                                               (cic.cast
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s (cic.s cic.z))))
                                                  (cic.univ
                                                     (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I)
                                                  (cic.univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s
                                                           (cic.s (cic.s cic.z))))
                                                     cic.I)
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               x
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n
                                                                 p)
                                                              p)
                                                           (matita_arithmetics_div_and_mod.div
                                                              m
                                                              p))
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_div_and_mod.div
                                                              n
                                                              p)
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m
                                                              p)))
                                                     p)
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_div_and_mod.mod
                                                           n
                                                           p)
                                                        (matita_arithmetics_div_and_mod.div
                                                           m
                                                           p))
                                                     p)))) =>
                                      cic.univ cic.prop (cic.type cic.z) cic.I)))
                               cic.I
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                __:(cic.Term
                                      cic.prop
                                      (matita_basics_logic.eq
                                         (cic.cast
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            (cic.univ
                                               (cic.type cic.z)
                                               (cic.type (cic.s cic.z))
                                               cic.I)
                                            (cic.univ
                                               (cic.type (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               cic.I)
                                            cic.I
                                            matita_arithmetics_nat.nat)
                                         x
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_div_and_mod.div
                                                           n
                                                           p)
                                                        p)
                                                     (matita_arithmetics_div_and_mod.div
                                                        m
                                                        p))
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_div_and_mod.div
                                                        n
                                                        p)
                                                     (matita_arithmetics_div_and_mod.mod
                                                        m
                                                        p)))
                                               p)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_div_and_mod.mod
                                                     n
                                                     p)
                                                  (matita_arithmetics_div_and_mod.div
                                                     m
                                                     p))
                                               p)))) =>
                                matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.div
                                                    n
                                                    p)
                                                 p)
                                              (matita_arithmetics_div_and_mod.div m p))
                                           p)
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.div n p)
                                              (matita_arithmetics_div_and_mod.mod m p))
                                           p))
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.mod n p)
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div m p)
                                           p)))
                                  x))
                            (matita_basics_logic.rewrite_r
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.times
                                  p
                                  (matita_arithmetics_div_and_mod.div n p))
                               (cic.cast
                                  (cic.type cic.z)
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      cic.univ cic.prop (cic.type cic.z) cic.I))
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (__:(cic.Term
                                            (cic.type cic.z)
                                            matita_arithmetics_nat.nat) =>
                                      cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I))
                                  cic.I
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.times
                                                 x
                                                 (matita_arithmetics_div_and_mod.div
                                                    m
                                                    p))
                                              p)
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.div
                                                    n
                                                    p)
                                                 (matita_arithmetics_div_and_mod.mod
                                                    m
                                                    p))
                                              p))
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.mod n p)
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.div m p)
                                              p)))
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    p)
                                                 (matita_arithmetics_div_and_mod.div
                                                    m
                                                    p))
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.div
                                                    n
                                                    p)
                                                 (matita_arithmetics_div_and_mod.mod
                                                    m
                                                    p)))
                                           p)
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.mod n p)
                                              (matita_arithmetics_div_and_mod.div m p))
                                           p))))
                               (matita_basics_logic.rewrite_r
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div m p)
                                     (matita_arithmetics_nat.times
                                        p
                                        (matita_arithmetics_div_and_mod.div n p)))
                                  (cic.cast
                                     (cic.type cic.z)
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.prod
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        cic.I
                                        matita_arithmetics_nat.nat
                                        (x:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         cic.univ cic.prop (cic.type cic.z) cic.I))
                                     (cic.prod
                                        (cic.type cic.z)
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I
                                        matita_arithmetics_nat.nat
                                        (__:(cic.Term
                                               (cic.type cic.z)
                                               matita_arithmetics_nat.nat) =>
                                         cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I))
                                     cic.I
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times x p)
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.mod
                                                       m
                                                       p))
                                                 p))
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.mod n p)
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.div
                                                    m
                                                    p)
                                                 p)))
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_div_and_mod.div
                                                          n
                                                          p)
                                                       p)
                                                    (matita_arithmetics_div_and_mod.div
                                                       m
                                                       p))
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.mod
                                                       m
                                                       p)))
                                              p)
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.mod
                                                    n
                                                    p)
                                                 (matita_arithmetics_div_and_mod.div
                                                    m
                                                    p))
                                              p))))
                                  (matita_basics_logic.rewrite_r
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.times
                                        p
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div m p)
                                           (matita_arithmetics_div_and_mod.div n p)))
                                     (cic.cast
                                        (cic.type cic.z)
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.prod
                                           (cic.type cic.z)
                                           (cic.type cic.z)
                                           (cic.type cic.z)
                                           cic.I
                                           matita_arithmetics_nat.nat
                                           (x:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            cic.univ cic.prop (cic.type cic.z) cic.I))
                                        (cic.prod
                                           (cic.type cic.z)
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I
                                           matita_arithmetics_nat.nat
                                           (__:(cic.Term
                                                  (cic.type cic.z)
                                                  matita_arithmetics_nat.nat) =>
                                            cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I))
                                        cic.I
                                        (x:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times x p)
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_div_and_mod.div
                                                          n
                                                          p)
                                                       (matita_arithmetics_div_and_mod.mod
                                                          m
                                                          p))
                                                    p))
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.mod
                                                    n
                                                    p)
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       m
                                                       p)
                                                    p)))
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_div_and_mod.div
                                                             n
                                                             p)
                                                          p)
                                                       (matita_arithmetics_div_and_mod.div
                                                          m
                                                          p))
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_div_and_mod.div
                                                          n
                                                          p)
                                                       (matita_arithmetics_div_and_mod.mod
                                                          m
                                                          p)))
                                                 p)
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.mod
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.div
                                                       m
                                                       p))
                                                 p))))
                                     (matita_basics_logic.rewrite_r
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div n p)
                                           (matita_arithmetics_div_and_mod.div m p))
                                        (cic.cast
                                           (cic.type cic.z)
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (x:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               cic.univ cic.prop (cic.type cic.z) cic.I))
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (__:(cic.Term
                                                     (cic.type cic.z)
                                                     matita_arithmetics_nat.nat) =>
                                               cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I))
                                           cic.I
                                           (x:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_basics_logic.eq
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.times
                                                          p
                                                          x)
                                                       p)
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_div_and_mod.div
                                                             n
                                                             p)
                                                          (matita_arithmetics_div_and_mod.mod
                                                             m
                                                             p))
                                                       p))
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.mod
                                                       n
                                                       p)
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_div_and_mod.div
                                                          m
                                                          p)
                                                       p)))
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_div_and_mod.div
                                                                n
                                                                p)
                                                             p)
                                                          (matita_arithmetics_div_and_mod.div
                                                             m
                                                             p))
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_div_and_mod.div
                                                             n
                                                             p)
                                                          (matita_arithmetics_div_and_mod.mod
                                                             m
                                                             p)))
                                                    p)
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_div_and_mod.mod
                                                          n
                                                          p)
                                                       (matita_arithmetics_div_and_mod.div
                                                          m
                                                          p))
                                                    p))))
                                        (matita_basics_logic.rewrite_r
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.times
                                              p
                                              (matita_arithmetics_nat.times
                                                 p
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.div
                                                       m
                                                       p))))
                                           (cic.cast
                                              (cic.type cic.z)
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.prod
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 cic.I
                                                 matita_arithmetics_nat.nat
                                                 (x:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  cic.univ
                                                    cic.prop
                                                    (cic.type cic.z)
                                                    cic.I))
                                              (cic.prod
                                                 (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I
                                                 matita_arithmetics_nat.nat
                                                 (__:(cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat) =>
                                                  cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I))
                                              cic.I
                                              (x:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               matita_basics_logic.eq
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type
                                                          (cic.s (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.plus
                                                       x
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_div_and_mod.div
                                                                n
                                                                p)
                                                             (matita_arithmetics_div_and_mod.mod
                                                                m
                                                                p))
                                                          p))
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_div_and_mod.mod
                                                          n
                                                          p)
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_div_and_mod.div
                                                             m
                                                             p)
                                                          p)))
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.plus
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_nat.times
                                                                (matita_arithmetics_div_and_mod.div
                                                                   n
                                                                   p)
                                                                p)
                                                             (matita_arithmetics_div_and_mod.div
                                                                m
                                                                p))
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_div_and_mod.div
                                                                n
                                                                p)
                                                             (matita_arithmetics_div_and_mod.mod
                                                                m
                                                                p)))
                                                       p)
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_div_and_mod.mod
                                                             n
                                                             p)
                                                          (matita_arithmetics_div_and_mod.div
                                                             m
                                                             p))
                                                       p))))
                                           (matita_basics_logic.rewrite_r
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.times
                                                 p
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.mod
                                                       m
                                                       p)))
                                              (cic.cast
                                                 (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.prod
                                                    (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    cic.I
                                                    matita_arithmetics_nat.nat
                                                    (x:(cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat) =>
                                                     cic.univ
                                                       cic.prop
                                                       (cic.type cic.z)
                                                       cic.I))
                                                 (cic.prod
                                                    (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I
                                                    matita_arithmetics_nat.nat
                                                    (__:(cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat) =>
                                                     cic.univ
                                                       (cic.type
                                                          (cic.s (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       cic.I))
                                                 cic.I
                                                 (x:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  matita_basics_logic.eq
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type
                                                             (cic.s (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.plus
                                                          (matita_arithmetics_nat.times
                                                             p
                                                             (matita_arithmetics_nat.times
                                                                p
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                   (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))))
                                                          x)
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_div_and_mod.mod
                                                             n
                                                             p)
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_div_and_mod.div
                                                                m
                                                                p)
                                                             p)))
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_nat.plus
                                                             (matita_arithmetics_nat.times
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                   p)
                                                                (matita_arithmetics_div_and_mod.div
                                                                   m
                                                                   p))
                                                             (matita_arithmetics_nat.times
                                                                (matita_arithmetics_div_and_mod.div
                                                                   n
                                                                   p)
                                                                (matita_arithmetics_div_and_mod.mod
                                                                   m
                                                                   p)))
                                                          p)
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_div_and_mod.mod
                                                                n
                                                                p)
                                                             (matita_arithmetics_div_and_mod.div
                                                                m
                                                                p))
                                                          p))))
                                              (matita_basics_logic.rewrite_l
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type
                                                          (cic.s (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.times
                                                    p
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          p
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_div_and_mod.div
                                                                n
                                                                p)
                                                             (matita_arithmetics_div_and_mod.div
                                                                m
                                                                p)))
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_div_and_mod.div
                                                             n
                                                             p)
                                                          (matita_arithmetics_div_and_mod.mod
                                                             m
                                                             p))))
                                                 (cic.cast
                                                    (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    (cic.prod
                                                       (cic.type cic.z)
                                                       (cic.type cic.z)
                                                       (cic.type cic.z)
                                                       cic.I
                                                       matita_arithmetics_nat.nat
                                                       (x:(cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat) =>
                                                        cic.univ
                                                          cic.prop
                                                          (cic.type cic.z)
                                                          cic.I))
                                                    (cic.prod
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       cic.I
                                                       matita_arithmetics_nat.nat
                                                       (__:(cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat) =>
                                                        cic.univ
                                                          (cic.type
                                                             (cic.s (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          cic.I))
                                                    cic.I
                                                    (x:(cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat) =>
                                                     matita_basics_logic.eq
                                                       (cic.cast
                                                          (cic.type (cic.s cic.z))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          (cic.univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             cic.I)
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       (matita_arithmetics_nat.plus
                                                          x
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_div_and_mod.mod
                                                                n
                                                                p)
                                                             (matita_arithmetics_nat.times
                                                                (matita_arithmetics_div_and_mod.div
                                                                   m
                                                                   p)
                                                                p)))
                                                       (matita_arithmetics_nat.plus
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_nat.plus
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                   (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                   (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                             p)
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_nat.times
                                                                (matita_arithmetics_div_and_mod.mod
                                                                   n
                                                                   p)
                                                                (matita_arithmetics_div_and_mod.div
                                                                   m
                                                                   p))
                                                             p))))
                                                 (matita_basics_logic.rewrite_r
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type
                                                             (cic.s (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.times
                                                       p
                                                       (matita_arithmetics_div_and_mod.div
                                                          m
                                                          p))
                                                    (cic.cast
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       (cic.prod
                                                          (cic.type cic.z)
                                                          (cic.type cic.z)
                                                          (cic.type cic.z)
                                                          cic.I
                                                          matita_arithmetics_nat.nat
                                                          (x:(cic.Term
                                                                (cic.type cic.z)
                                                                matita_arithmetics_nat.nat) =>
                                                           cic.univ
                                                             cic.prop
                                                             (cic.type cic.z)
                                                             cic.I))
                                                       (cic.prod
                                                          (cic.type cic.z)
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          cic.I
                                                          matita_arithmetics_nat.nat
                                                          (__:(cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat) =>
                                                           cic.univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             cic.I))
                                                       cic.I
                                                       (x:(cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat) =>
                                                        matita_basics_logic.eq
                                                          (cic.cast
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             (cic.univ
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                cic.I)
                                                             cic.I
                                                             matita_arithmetics_nat.nat)
                                                          (matita_arithmetics_nat.plus
                                                             (matita_arithmetics_nat.times
                                                                p
                                                                (matita_arithmetics_nat.plus
                                                                   (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                   (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                             (matita_arithmetics_nat.times
                                                                (matita_arithmetics_div_and_mod.mod
                                                                   n
                                                                   p)
                                                                x))
                                                          (matita_arithmetics_nat.plus
                                                             (matita_arithmetics_nat.times
                                                                (matita_arithmetics_nat.plus
                                                                   (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                   (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                p)
                                                             (matita_arithmetics_nat.times
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                   (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                p))))
                                                    (matita_basics_logic.rewrite_r
                                                       (cic.cast
                                                          (cic.type (cic.s cic.z))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          (cic.univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             cic.I)
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       (matita_arithmetics_nat.times
                                                          p
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_div_and_mod.mod
                                                                n
                                                                p)
                                                             (matita_arithmetics_div_and_mod.div
                                                                m
                                                                p)))
                                                       (cic.cast
                                                          (cic.type cic.z)
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          (cic.prod
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             cic.I
                                                             matita_arithmetics_nat.nat
                                                             (x:(cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat) =>
                                                              cic.univ
                                                                cic.prop
                                                                (cic.type cic.z)
                                                                cic.I))
                                                          (cic.prod
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             cic.I
                                                             matita_arithmetics_nat.nat
                                                             (__:(cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                              cic.univ
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                cic.I))
                                                          cic.I
                                                          (x:(cic.Term
                                                                (cic.type cic.z)
                                                                matita_arithmetics_nat.nat) =>
                                                           matita_basics_logic.eq
                                                             (cic.cast
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                (cic.univ
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                   cic.I)
                                                                cic.I
                                                                matita_arithmetics_nat.nat)
                                                             (matita_arithmetics_nat.plus
                                                                (matita_arithmetics_nat.times
                                                                   p
                                                                   (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                x)
                                                             (matita_arithmetics_nat.plus
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                   p)
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                   p))))
                                                       (matita_basics_logic.rewrite_r
                                                          (cic.cast
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             (cic.univ
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                cic.I)
                                                             cic.I
                                                             matita_arithmetics_nat.nat)
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_div_and_mod.div
                                                                m
                                                                p)
                                                             (matita_arithmetics_div_and_mod.mod
                                                                n
                                                                p))
                                                          (cic.cast
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             (cic.prod
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                cic.I
                                                                matita_arithmetics_nat.nat
                                                                (x:(cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                 cic.univ
                                                                   cic.prop
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I))
                                                             (cic.prod
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                cic.I
                                                                matita_arithmetics_nat.nat
                                                                (__:(
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat) =>
                                                                 cic.univ
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                   cic.I))
                                                             cic.I
                                                             (x:(cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat) =>
                                                              matita_basics_logic.eq
                                                                (cic.cast
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                   (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                   (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat)
                                                                (matita_arithmetics_nat.plus
                                                                   (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                   (matita_arithmetics_nat.times
                                                                    p
                                                                    x))
                                                                (matita_arithmetics_nat.plus
                                                                   (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                   (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    p))))
                                                          (matita_basics_logic.rewrite_r
                                                             (cic.cast
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                (cic.univ
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                   cic.I)
                                                                cic.I
                                                                matita_arithmetics_nat.nat)
                                                             (matita_arithmetics_nat.plus
                                                                (matita_arithmetics_nat.times
                                                                   p
                                                                   (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))
                                                                (matita_arithmetics_nat.times
                                                                   p
                                                                   (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))))
                                                             (cic.cast
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                (cic.prod
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat
                                                                   (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                (cic.prod
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat
                                                                   (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                cic.I
                                                                (x:(cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                 matita_basics_logic.eq
                                                                   (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                   x
                                                                   (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    p))))
                                                             (matita_basics_logic.rewrite_l
                                                                (cic.cast
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                   (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                   (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat)
                                                                (matita_arithmetics_nat.times
                                                                   p
                                                                   (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))))
                                                                (cic.cast
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                   (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                   (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                   cic.I
                                                                   (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    p))))
                                                                (matita_basics_logic.rewrite_r
                                                                   (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                   (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                   (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    x)
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    p))))
                                                                   (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    x))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    p))))
                                                                    (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    x
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    p))))
                                                                    (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.plus
                                                                    x
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    p))))
                                                                    (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.plus
                                                                    x
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    p))))
                                                                    (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    x)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    p))))
                                                                    (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (matita_arithmetics_nat.plus
                                                                    x
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    p))))
                                                                    (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                    (matita_arithmetics_nat.times
                                                                    x
                                                                    p))))
                                                                    (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                    x)))
                                                                    (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    x))
                                                                    (matita_basics_logic.rewrite_l
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    x))
                                                                    (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    x)))
                                                                    (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    x))))
                                                                    (matita_basics_logic.refl
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))))))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.commutative_plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                    (matita_arithmetics_congruence.let_clause_73
                                                                    n
                                                                    m
                                                                    p
                                                                    posp
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))))
                                                                    (matita_arithmetics_nat.distributive_times_plus
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))))
                                                                    (matita_arithmetics_nat.commutative_plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    p)
                                                                    (matita_arithmetics_nat.commutative_times
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.commutative_times
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (matita_arithmetics_nat.commutative_times
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.commutative_times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)))
                                                                    (matita_arithmetics_nat.times_times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    p
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p))
                                                                    (matita_arithmetics_nat.commutative_times
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (matita_arithmetics_nat.commutative_times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    p))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.commutative_plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                   (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                   (matita_arithmetics_congruence.let_clause_73
                                                                    n
                                                                    m
                                                                    p
                                                                    posp
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                (matita_arithmetics_nat.plus
                                                                   (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))
                                                                   (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))))
                                                                (matita_arithmetics_nat.distributive_times_plus
                                                                   p
                                                                   (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))
                                                                   (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p)))))
                                                             (matita_arithmetics_nat.plus
                                                                (matita_arithmetics_nat.times
                                                                   p
                                                                   (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                (matita_arithmetics_nat.times
                                                                   p
                                                                   (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p))))
                                                             (matita_arithmetics_nat.commutative_plus
                                                                (matita_arithmetics_nat.times
                                                                   p
                                                                   (matita_arithmetics_nat.plus
                                                                    (matita_arithmetics_nat.times
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)))
                                                                    (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    n
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    m
                                                                    p))))
                                                                (matita_arithmetics_nat.times
                                                                   p
                                                                   (matita_arithmetics_nat.times
                                                                    (matita_arithmetics_div_and_mod.div
                                                                    m
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    n
                                                                    p)))))
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_div_and_mod.mod
                                                                n
                                                                p)
                                                             (matita_arithmetics_div_and_mod.div
                                                                m
                                                                p))
                                                          (matita_arithmetics_nat.commutative_times
                                                             (matita_arithmetics_div_and_mod.mod
                                                                n
                                                                p)
                                                             (matita_arithmetics_div_and_mod.div
                                                                m
                                                                p)))
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_div_and_mod.mod
                                                             n
                                                             p)
                                                          (matita_arithmetics_nat.times
                                                             p
                                                             (matita_arithmetics_div_and_mod.div
                                                                m
                                                                p)))
                                                       (matita_arithmetics_nat.times_times
                                                          (matita_arithmetics_div_and_mod.mod
                                                             n
                                                             p)
                                                          p
                                                          (matita_arithmetics_div_and_mod.div
                                                             m
                                                             p)))
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_div_and_mod.div
                                                          m
                                                          p)
                                                       p)
                                                    (matita_arithmetics_nat.commutative_times
                                                       (matita_arithmetics_div_and_mod.div
                                                          m
                                                          p)
                                                       p))
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       p
                                                       (matita_arithmetics_nat.times
                                                          p
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_div_and_mod.div
                                                                n
                                                                p)
                                                             (matita_arithmetics_div_and_mod.div
                                                                m
                                                                p))))
                                                    (matita_arithmetics_nat.times
                                                       p
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_div_and_mod.div
                                                             n
                                                             p)
                                                          (matita_arithmetics_div_and_mod.mod
                                                             m
                                                             p))))
                                                 (matita_arithmetics_nat.distributive_times_plus
                                                    p
                                                    (matita_arithmetics_nat.times
                                                       p
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_div_and_mod.div
                                                             n
                                                             p)
                                                          (matita_arithmetics_div_and_mod.div
                                                             m
                                                             p)))
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_div_and_mod.div
                                                          n
                                                          p)
                                                       (matita_arithmetics_div_and_mod.mod
                                                          m
                                                          p))))
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.mod
                                                       m
                                                       p))
                                                 p)
                                              (matita_arithmetics_nat.commutative_times
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.mod
                                                       m
                                                       p))
                                                 p))
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.times
                                                 p
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.div
                                                       m
                                                       p)))
                                              p)
                                           (matita_arithmetics_nat.commutative_times
                                              (matita_arithmetics_nat.times
                                                 p
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_div_and_mod.div
                                                       n
                                                       p)
                                                    (matita_arithmetics_div_and_mod.div
                                                       m
                                                       p)))
                                              p))
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div m p)
                                           (matita_arithmetics_div_and_mod.div n p))
                                        (matita_arithmetics_nat.commutative_times
                                           (matita_arithmetics_div_and_mod.div m p)
                                           (matita_arithmetics_div_and_mod.div n p)))
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.div m p)
                                        (matita_arithmetics_nat.times
                                           p
                                           (matita_arithmetics_div_and_mod.div n p)))
                                     (matita_arithmetics_nat.times_times
                                        (matita_arithmetics_div_and_mod.div m p)
                                        p
                                        (matita_arithmetics_div_and_mod.div n p)))
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.times
                                        p
                                        (matita_arithmetics_div_and_mod.div n p))
                                     (matita_arithmetics_div_and_mod.div m p))
                                  (matita_arithmetics_nat.commutative_times
                                     (matita_arithmetics_nat.times
                                        p
                                        (matita_arithmetics_div_and_mod.div n p))
                                     (matita_arithmetics_div_and_mod.div m p)))
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div n p)
                                  p)
                               (matita_arithmetics_nat.commutative_times
                                  (matita_arithmetics_div_and_mod.div n p)
                                  p))
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_div_and_mod.div n p)
                                           p)
                                        (matita_arithmetics_div_and_mod.div m p))
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.div n p)
                                        (matita_arithmetics_div_and_mod.mod m p)))
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.mod n p)
                                     (matita_arithmetics_div_and_mod.div m p)))
                               p)
                            (matita_arithmetics_nat.distributive_times_plus_r
                               p
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.div n p)
                                        p)
                                     (matita_arithmetics_div_and_mod.div m p))
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div n p)
                                     (matita_arithmetics_div_and_mod.mod m p)))
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.mod n p)
                                  (matita_arithmetics_div_and_mod.div m p))))
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div n p)
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.mod m p)
                               p))
                         (matita_arithmetics_nat.associative_times
                            (matita_arithmetics_div_and_mod.div n p)
                            (matita_arithmetics_div_and_mod.mod m p)
                            p))
                      (matita_arithmetics_nat.times p (matita_arithmetics_div_and_mod.mod m p))
                      (matita_arithmetics_nat.commutative_times
                         p
                         (matita_arithmetics_div_and_mod.mod m p)))
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
                      (matita_arithmetics_div_and_mod.mod m p))
                   (matita_arithmetics_nat.associative_times
                      (matita_arithmetics_div_and_mod.div n p)
                      p
                      (matita_arithmetics_div_and_mod.mod m p)))
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m p) p))
                (matita_arithmetics_nat.associative_times
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n p) p)
                   (matita_arithmetics_div_and_mod.div m p)
                   p))
             (matita_basics_logic.refl
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_div_and_mod.mod n p)
                   (matita_arithmetics_div_and_mod.mod m p)))))).

def congruent_times :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             (cic.type cic.z)
             cic.prop
             cic.prop
             cic.I
             matita_arithmetics_nat.nat
             (n1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                (cic.type cic.z)
                cic.prop
                cic.prop
                cic.I
                matita_arithmetics_nat.nat
                (m1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   (cic.type cic.z)
                   cic.prop
                   cic.prop
                   cic.I
                   matita_arithmetics_nat.nat
                   (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      cic.prop
                      cic.prop
                      cic.prop
                      cic.I
                      (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
                      (__:(cic.Term
                             cic.prop
                             (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
                       cic.prod
                         cic.prop
                         cic.prop
                         cic.prop
                         cic.I
                         (matita_arithmetics_congruence.congruent n n1 p)
                         (__1:(cic.Term
                                 cic.prop
                                 (matita_arithmetics_congruence.congruent n n1 p)) =>
                          cic.prod
                            cic.prop
                            cic.prop
                            cic.prop
                            cic.I
                            (matita_arithmetics_congruence.congruent m m1 p)
                            (__2:(cic.Term
                                    cic.prop
                                    (matita_arithmetics_congruence.congruent m m1 p)) =>
                             matita_arithmetics_congruence.congruent
                               (matita_arithmetics_nat.times n m)
                               (matita_arithmetics_nat.times n1 m1)
                               p)))))))))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  m:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  n1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  m1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  posp:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
  Hcongn:(cic.Term cic.prop (matita_arithmetics_congruence.congruent n n1 p)) =>
  Hcongm:(cic.Term cic.prop (matita_arithmetics_congruence.congruent m m1 p)) =>
  matita_basics_logic.eq_ind_r
    (cic.cast
       (cic.type (cic.s cic.z))
       (cic.type (cic.s (cic.s (cic.s cic.z))))
       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
       (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
       cic.I
       matita_arithmetics_nat.nat)
    (matita_arithmetics_div_and_mod.mod
       (matita_arithmetics_nat.times
          (matita_arithmetics_div_and_mod.mod n p)
          (matita_arithmetics_div_and_mod.mod m p))
       p)
    (cic.cast
       (cic.type cic.z)
       (cic.type cic.z)
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             cic.prop
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             (matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_div_and_mod.mod
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_div_and_mod.mod n p)
                      (matita_arithmetics_div_and_mod.mod m p))
                   p))
             (__:(cic.Term
                    cic.prop
                    (matita_basics_logic.eq
                       (cic.cast
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                          (cic.univ
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I)
                          cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_div_and_mod.mod
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.mod n p)
                             (matita_arithmetics_div_and_mod.mod m p))
                          p))) =>
              cic.univ cic.prop (cic.type cic.z) cic.I)))
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             cic.prop
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             (matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_div_and_mod.mod
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_div_and_mod.mod n p)
                      (matita_arithmetics_div_and_mod.mod m p))
                   p))
             (__:(cic.Term
                    cic.prop
                    (matita_basics_logic.eq
                       (cic.cast
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                          (cic.univ
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I)
                          cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_div_and_mod.mod
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.mod n p)
                             (matita_arithmetics_div_and_mod.mod m p))
                          p))) =>
              cic.univ cic.prop (cic.type cic.z) cic.I)))
       cic.I
       (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        __:(cic.Term
              cic.prop
              (matita_basics_logic.eq
                 (cic.cast
                    (cic.type (cic.s cic.z))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                    (cic.univ
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       cic.I)
                    cic.I
                    matita_arithmetics_nat.nat)
                 x
                 (matita_arithmetics_div_and_mod.mod
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.mod n p)
                       (matita_arithmetics_div_and_mod.mod m p))
                    p))) =>
        matita_basics_logic.eq
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          x
          (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times n1 m1) p)))
    (matita_basics_logic.eq_ind_r
       (cic.cast
          (cic.type (cic.s cic.z))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
          (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
          cic.I
          matita_arithmetics_nat.nat)
       (matita_arithmetics_div_and_mod.mod n1 p)
       (cic.cast
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                (matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_div_and_mod.mod n1 p))
                (__:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_div_and_mod.mod n1 p))) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I)))
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                (matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_div_and_mod.mod n1 p))
                (__:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_div_and_mod.mod n1 p))) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I)))
          cic.I
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           __:(cic.Term
                 cic.prop
                 (matita_basics_logic.eq
                    (cic.cast
                       (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                       (cic.univ
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          cic.I)
                       cic.I
                       matita_arithmetics_nat.nat)
                    x
                    (matita_arithmetics_div_and_mod.mod n1 p))) =>
           matita_basics_logic.eq
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_div_and_mod.mod
                (matita_arithmetics_nat.times x (matita_arithmetics_div_and_mod.mod m p))
                p)
             (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times n1 m1) p)))
       (matita_basics_logic.eq_ind_r
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_div_and_mod.mod m1 p)
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   (matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_div_and_mod.mod m1 p))
                   (__:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_div_and_mod.mod m1 p))) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)))
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   (matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_div_and_mod.mod m1 p))
                   (__:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_div_and_mod.mod m1 p))) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)))
             cic.I
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              __:(cic.Term
                    cic.prop
                    (matita_basics_logic.eq
                       (cic.cast
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                          (cic.univ
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I)
                          cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_div_and_mod.mod m1 p))) =>
              matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_div_and_mod.mod
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.mod n1 p) x)
                   p)
                (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times n1 m1) p)))
          (matita_basics_logic.sym_eq
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times n1 m1) p)
             (matita_arithmetics_div_and_mod.mod
                (matita_arithmetics_nat.times
                   (matita_arithmetics_div_and_mod.mod n1 p)
                   (matita_arithmetics_div_and_mod.mod m1 p))
                p)
             (matita_arithmetics_congruence.mod_times n1 m1 p posp))
          (matita_arithmetics_div_and_mod.mod m p)
          Hcongm)
       (matita_arithmetics_div_and_mod.mod n p)
       Hcongn)
    (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times n m) p)
    (matita_arithmetics_congruence.mod_times n m p posp).

