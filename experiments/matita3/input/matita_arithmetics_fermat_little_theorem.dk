def prime_to_not_divides_fact :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          cic.prop
          cic.prop
          cic.prop
          cic.I
          (matita_arithmetics_primes.prime p)
          (__:(cic.Term cic.prop (matita_arithmetics_primes.prime p)) =>
           cic.prod
             (cic.type cic.z)
             cic.prop
             cic.prop
             cic.I
             matita_arithmetics_nat.nat
             (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                cic.prop
                cic.prop
                cic.I
                (matita_arithmetics_nat.lt n p)
                (__1:(cic.Term cic.prop (matita_arithmetics_nat.lt n p)) =>
                 matita_basics_logic.Not
                   (cic.cast
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                      cic.I
                      (matita_arithmetics_primes.divides
                         p
                         (matita_arithmetics_factorial.fact n))))))))
  :=
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  primep:(cic.Term cic.prop (matita_arithmetics_primes.prime p)) =>
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.nat_ind
    (cic.cast
       (cic.type cic.z)
       (cic.type cic.z)
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (_x_365:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ cic.prop (cic.type cic.z) cic.I))
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (_x_365:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ cic.prop (cic.type cic.z) cic.I))
       cic.I
       (_x_365:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          cic.prop
          cic.prop
          cic.prop
          cic.I
          (matita_arithmetics_nat.lt _x_365 p)
          (__:(cic.Term cic.prop (matita_arithmetics_nat.lt _x_365 p)) =>
           matita_basics_logic.Not
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                cic.I
                (matita_arithmetics_primes.divides p (matita_arithmetics_factorial.fact _x_365))))))
    (__:(cic.Term
           cic.prop
           (matita_arithmetics_nat.le (matita_arithmetics_nat.S matita_arithmetics_nat.O) p)) =>
     matita_basics_logic.nmk
       (cic.cast
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          cic.I
          (matita_arithmetics_primes.divides p (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
       (divp:(cic.Term
                cic.prop
                (matita_arithmetics_primes.divides
                   p
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
        matita_basics_logic.absurd
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.univ cic.prop (cic.type cic.z) cic.I)
             (cic.univ cic.prop (cic.type cic.z) cic.I)
             cic.I
             (matita_arithmetics_nat.le p (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
          (matita_arithmetics_primes.divides_to_le
             p
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             (matita_arithmetics_nat.lt_O_S matita_arithmetics_nat.O)
             divp)
          (matita_arithmetics_nat.lt_to_not_le
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             p
             (matita_arithmetics_primes.prime_to_lt_SO p primep))))
    (n1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
     Hind:(cic.Term
             cic.prop
             (cic.prod
                cic.prop
                cic.prop
                cic.prop
                cic.I
                (matita_arithmetics_nat.lt n1 p)
                (__:(cic.Term cic.prop (matita_arithmetics_nat.lt n1 p)) =>
                 matita_basics_logic.Not
                   (cic.cast
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                      cic.I
                      (matita_arithmetics_primes.divides
                         p
                         (matita_arithmetics_factorial.fact n1)))))) =>
     ltn1:(cic.Term cic.prop (matita_arithmetics_nat.lt (matita_arithmetics_nat.S n1) p)) =>
     matita_basics_logic.nmk
       (cic.cast
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          cic.I
          (matita_arithmetics_primes.divides
             p
             (matita_arithmetics_nat.times
                (matita_arithmetics_factorial.fact n1)
                (matita_arithmetics_nat.S n1))))
       (Hdiv:(cic.Term
                cic.prop
                (matita_arithmetics_primes.divides
                   p
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_factorial.fact n1)
                      (matita_arithmetics_nat.S n1)))) =>
        matita_basics_logic.match_Or
          cic.prop
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.univ cic.prop (cic.type cic.z) cic.I)
             (cic.univ cic.prop (cic.type cic.z) cic.I)
             cic.I
             (matita_arithmetics_primes.divides p (matita_arithmetics_factorial.fact n1)))
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.univ cic.prop (cic.type cic.z) cic.I)
             (cic.univ cic.prop (cic.type cic.z) cic.I)
             cic.I
             (matita_arithmetics_primes.divides p (matita_arithmetics_nat.S n1)))
          (__:(cic.Term
                 cic.prop
                 (matita_basics_logic.Or
                    (cic.cast
                       (cic.type cic.z)
                       (cic.type cic.z)
                       (cic.univ cic.prop (cic.type cic.z) cic.I)
                       (cic.univ cic.prop (cic.type cic.z) cic.I)
                       cic.I
                       (matita_arithmetics_primes.divides
                          p
                          (matita_arithmetics_factorial.fact n1)))
                    (cic.cast
                       (cic.type cic.z)
                       (cic.type cic.z)
                       (cic.univ cic.prop (cic.type cic.z) cic.I)
                       (cic.univ cic.prop (cic.type cic.z) cic.I)
                       cic.I
                       (matita_arithmetics_primes.divides p (matita_arithmetics_nat.S n1))))) =>
           matita_basics_logic.False)
          (Hdiv0:(cic.Term
                    cic.prop
                    (matita_arithmetics_primes.divides p (matita_arithmetics_factorial.fact n1))) =>
           matita_basics_logic.absurd
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                cic.I
                (matita_arithmetics_primes.divides p (matita_arithmetics_factorial.fact n1)))
             Hdiv0
             (Hind (matita_arithmetics_nat.lt_to_le (matita_arithmetics_nat.S n1) p ltn1)))
          (Hdiv0:(cic.Term
                    cic.prop
                    (matita_arithmetics_primes.divides p (matita_arithmetics_nat.S n1))) =>
           matita_basics_logic.absurd
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                cic.I
                (matita_arithmetics_nat.le p (matita_arithmetics_nat.S n1)))
             (matita_arithmetics_primes.divides_to_le
                p
                (matita_arithmetics_nat.S n1)
                (matita_arithmetics_nat.lt_O_S n1)
                Hdiv0)
             (matita_arithmetics_nat.lt_to_not_le (matita_arithmetics_nat.S n1) p ltn1))
          (matita_arithmetics_gcd.divides_times_to_divides
             p
             (matita_arithmetics_factorial.fact n1)
             (matita_arithmetics_nat.S n1)
             primep
             Hdiv)))
    n.

def permut_mod :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (a:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             cic.prop
             cic.prop
             cic.prop
             cic.I
             (matita_arithmetics_primes.prime p)
             (__:(cic.Term cic.prop (matita_arithmetics_primes.prime p)) =>
              cic.prod
                cic.prop
                cic.prop
                cic.prop
                cic.I
                (matita_basics_logic.Not
                   (cic.cast
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                      cic.I
                      (matita_arithmetics_primes.divides p a)))
                (__1:(cic.Term
                        cic.prop
                        (matita_basics_logic.Not
                           (cic.cast
                              (cic.type cic.z)
                              (cic.type cic.z)
                              (cic.univ cic.prop (cic.type cic.z) cic.I)
                              (cic.univ cic.prop (cic.type cic.z) cic.I)
                              cic.I
                              (matita_arithmetics_primes.divides p a)))) =>
                 matita_arithmetics_permutation.permut
                   (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times a n) p)
                   (matita_arithmetics_nat.pred p))))))
  :=
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  a:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  primep:(cic.Term cic.prop (matita_arithmetics_primes.prime p)) =>
  ndiv:(cic.Term
          cic.prop
          (matita_basics_logic.Not
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                cic.I
                (matita_arithmetics_primes.divides p a)))) =>
  matita_basics_logic.conj
    (cic.cast
       (cic.type cic.z)
       (cic.type cic.z)
       (cic.univ cic.prop (cic.type cic.z) cic.I)
       (cic.univ cic.prop (cic.type cic.z) cic.I)
       cic.I
       (cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             cic.prop
             cic.prop
             cic.prop
             cic.I
             (matita_arithmetics_nat.le i (matita_arithmetics_nat.pred p))
             (__:(cic.Term
                    cic.prop
                    (matita_arithmetics_nat.le i (matita_arithmetics_nat.pred p))) =>
              matita_arithmetics_nat.le
                (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times a i) p)
                (matita_arithmetics_nat.pred p)))))
    (cic.cast
       (cic.type cic.z)
       (cic.type cic.z)
       (cic.univ cic.prop (cic.type cic.z) cic.I)
       (cic.univ cic.prop (cic.type cic.z) cic.I)
       cic.I
       (matita_arithmetics_permutation.injn
          (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times a n) p)
          (matita_arithmetics_nat.pred p)))
    (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
     lei:(cic.Term cic.prop (matita_arithmetics_nat.le i (matita_arithmetics_nat.pred p))) =>
     matita_arithmetics_nat.le_S_S_to_le
       (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times a i) p)
       (matita_arithmetics_nat.pred p)
       (matita_arithmetics_nat.transitive_le
          (matita_arithmetics_nat.S
             (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times a i) p))
          p
          (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
          (matita_arithmetics_div_and_mod.lt_mod_m_m
             (matita_arithmetics_nat.times a i)
             p
             (matita_arithmetics_primes.prime_to_lt_O p primep))
          (matita_basics_logic.eq_ind_r
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             p
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      (matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         x
                         p)
                      (__:(cic.Term
                             cic.prop
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                p)) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)))
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      (matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         x
                         p)
                      (__:(cic.Term
                             cic.prop
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                p)) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)))
                cic.I
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 __:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          p)) =>
                 matita_arithmetics_nat.le p x))
             (matita_arithmetics_nat.le_n p)
             (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
             (matita_arithmetics_nat.S_pred p (matita_arithmetics_primes.prime_to_lt_O p primep)))))
    (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
     j:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
     lei:(cic.Term cic.prop (matita_arithmetics_nat.le i (matita_arithmetics_nat.pred p))) =>
     lej:(cic.Term cic.prop (matita_arithmetics_nat.le j (matita_arithmetics_nat.pred p))) =>
     H:(cic.Term
          cic.prop
          (matita_basics_logic.eq
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times a i) p)
             (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.times a j) p))) =>
     matita_basics_logic.match_Or
       cic.prop
       (cic.cast
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          cic.I
          (matita_arithmetics_nat.lt i j))
       (cic.cast
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          cic.I
          (matita_basics_logic.Not
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                cic.I
                (matita_arithmetics_nat.lt i j))))
       (__:(cic.Term
              cic.prop
              (matita_basics_logic.Or
                 (cic.cast
                    (cic.type cic.z)
                    (cic.type cic.z)
                    (cic.univ cic.prop (cic.type cic.z) cic.I)
                    (cic.univ cic.prop (cic.type cic.z) cic.I)
                    cic.I
                    (matita_arithmetics_nat.lt i j))
                 (cic.cast
                    (cic.type cic.z)
                    (cic.type cic.z)
                    (cic.univ cic.prop (cic.type cic.z) cic.I)
                    (cic.univ cic.prop (cic.type cic.z) cic.I)
                    cic.I
                    (matita_basics_logic.Not
                       (cic.cast
                          (cic.type cic.z)
                          (cic.type cic.z)
                          (cic.univ cic.prop (cic.type cic.z) cic.I)
                          (cic.univ cic.prop (cic.type cic.z) cic.I)
                          cic.I
                          (matita_arithmetics_nat.lt i j)))))) =>
        matita_basics_logic.eq
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          i
          j)
       (ltij:(cic.Term cic.prop (matita_arithmetics_nat.lt i j)) =>
        matita_basics_logic.False_ind
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_basics_logic.False
                (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I))
             (cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_basics_logic.False
                (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I))
             cic.I
             (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
              matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                i
                j))
          (matita_basics_logic.absurd
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                cic.I
                (matita_arithmetics_nat.lt (matita_arithmetics_nat.minus j i) p))
             (matita_basics_logic.eq_ind
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                (cic.cast
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.prod
                         cic.prop
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         (matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                            x_1)
                         (_x_2:(cic.Term
                                  cic.prop
                                  (matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.pred p))
                                     x_1)) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.prod
                         cic.prop
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         (matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                            x_1)
                         (_x_2:(cic.Term
                                  cic.prop
                                  (matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.pred p))
                                     x_1)) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)))
                   cic.I
                   (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    _x_2:(cic.Term
                            cic.prop
                            (matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ
                                     (cic.type cic.z)
                                     (cic.type (cic.s cic.z))
                                     cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                               x_1)) =>
                    matita_arithmetics_nat.lt (matita_arithmetics_nat.minus j i) x_1))
                (matita_arithmetics_nat.le_S_S
                   (matita_arithmetics_nat.minus j i)
                   (matita_arithmetics_nat.pred p)
                   (matita_arithmetics_nat.le_plus_to_minus
                      j
                      i
                      (matita_arithmetics_nat.pred p)
                      (matita_arithmetics_nat.transitive_le
                         j
                         (matita_arithmetics_nat.pred p)
                         (matita_arithmetics_nat.plus (matita_arithmetics_nat.pred p) i)
                         lej
                         (matita_arithmetics_nat.le_plus_n_r i (matita_arithmetics_nat.pred p)))))
                p
                (matita_arithmetics_nat.S_pred
                   p
                   (matita_arithmetics_primes.prime_to_lt_O p primep)))
             (matita_arithmetics_nat.le_to_not_lt
                p
                (matita_arithmetics_nat.minus j i)
                (matita_arithmetics_primes.divides_to_le
                   p
                   (matita_arithmetics_nat.minus j i)
                   (matita_arithmetics_nat.lt_plus_to_minus_r matita_arithmetics_nat.O i j ltij)
                   (matita_basics_logic.match_Or
                      cic.prop
                      (cic.cast
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.univ cic.prop (cic.type cic.z) cic.I)
                         (cic.univ cic.prop (cic.type cic.z) cic.I)
                         cic.I
                         (matita_arithmetics_primes.divides p a))
                      (cic.cast
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.univ cic.prop (cic.type cic.z) cic.I)
                         (cic.univ cic.prop (cic.type cic.z) cic.I)
                         cic.I
                         (matita_arithmetics_primes.divides
                            p
                            (matita_arithmetics_nat.minus j i)))
                      (__:(cic.Term
                             cic.prop
                             (matita_basics_logic.Or
                                (cic.cast
                                   (cic.type cic.z)
                                   (cic.type cic.z)
                                   (cic.univ cic.prop (cic.type cic.z) cic.I)
                                   (cic.univ cic.prop (cic.type cic.z) cic.I)
                                   cic.I
                                   (matita_arithmetics_primes.divides p a))
                                (cic.cast
                                   (cic.type cic.z)
                                   (cic.type cic.z)
                                   (cic.univ cic.prop (cic.type cic.z) cic.I)
                                   (cic.univ cic.prop (cic.type cic.z) cic.I)
                                   cic.I
                                   (matita_arithmetics_primes.divides
                                      p
                                      (matita_arithmetics_nat.minus j i))))) =>
                       matita_arithmetics_primes.divides p (matita_arithmetics_nat.minus j i))
                      (Hdiv:(cic.Term cic.prop (matita_arithmetics_primes.divides p a)) =>
                       matita_basics_logic.False_ind
                         (cic.cast
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_basics_logic.False
                               (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I))
                            (cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_basics_logic.False
                               (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I))
                            cic.I
                            (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                             matita_arithmetics_primes.divides
                               p
                               (matita_arithmetics_nat.minus j i)))
                         (matita_basics_logic.absurd
                            (cic.cast
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.univ cic.prop (cic.type cic.z) cic.I)
                               (cic.univ cic.prop (cic.type cic.z) cic.I)
                               cic.I
                               (matita_arithmetics_primes.divides p a))
                            Hdiv
                            ndiv))
                      (auto:(cic.Term
                               cic.prop
                               (matita_arithmetics_primes.divides
                                  p
                                  (matita_arithmetics_nat.minus j i))) =>
                       auto)
                      (matita_arithmetics_gcd.divides_times_to_divides
                         p
                         a
                         (matita_arithmetics_nat.minus j i)
                         primep
                         (matita_basics_logic.eq_ind_r
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_nat.times a j)
                               (matita_arithmetics_nat.times a i))
                            (cic.cast
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   cic.prod
                                     cic.prop
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     (matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_nat.times a j)
                                           (matita_arithmetics_nat.times a i)))
                                     (__:(cic.Term
                                            cic.prop
                                            (matita_basics_logic.eq
                                               (cic.cast
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s (cic.s cic.z))))
                                                  (cic.univ
                                                     (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I)
                                                  (cic.univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s
                                                           (cic.s (cic.s cic.z))))
                                                     cic.I)
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               x
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times a j)
                                                  (matita_arithmetics_nat.times a i)))) =>
                                      cic.univ cic.prop (cic.type cic.z) cic.I)))
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   cic.prod
                                     cic.prop
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     (matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_nat.times a j)
                                           (matita_arithmetics_nat.times a i)))
                                     (__:(cic.Term
                                            cic.prop
                                            (matita_basics_logic.eq
                                               (cic.cast
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s (cic.s cic.z))))
                                                  (cic.univ
                                                     (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I)
                                                  (cic.univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s
                                                           (cic.s (cic.s cic.z))))
                                                     cic.I)
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               x
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times a j)
                                                  (matita_arithmetics_nat.times a i)))) =>
                                      cic.univ cic.prop (cic.type cic.z) cic.I)))
                               cic.I
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                __:(cic.Term
                                      cic.prop
                                      (matita_basics_logic.eq
                                         (cic.cast
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            (cic.univ
                                               (cic.type cic.z)
                                               (cic.type (cic.s cic.z))
                                               cic.I)
                                            (cic.univ
                                               (cic.type (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               cic.I)
                                            cic.I
                                            matita_arithmetics_nat.nat)
                                         x
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.times a j)
                                            (matita_arithmetics_nat.times a i)))) =>
                                matita_arithmetics_primes.divides p x))
                            (matita_arithmetics_primes.eq_mod_to_divides
                               (matita_arithmetics_nat.times a j)
                               (matita_arithmetics_nat.times a i)
                               p
                               (matita_arithmetics_primes.prime_to_lt_O p primep)
                               (matita_basics_logic.rewrite_l
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_div_and_mod.mod
                                     (matita_arithmetics_nat.times a i)
                                     p)
                                  (cic.cast
                                     (cic.type cic.z)
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.prod
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        cic.I
                                        matita_arithmetics_nat.nat
                                        (x:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         cic.univ cic.prop (cic.type cic.z) cic.I))
                                     (cic.prod
                                        (cic.type cic.z)
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I
                                        matita_arithmetics_nat.nat
                                        (__:(cic.Term
                                               (cic.type cic.z)
                                               matita_arithmetics_nat.nat) =>
                                         cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I))
                                     cic.I
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_div_and_mod.mod
                                           (matita_arithmetics_nat.times a i)
                                           p)))
                                  (matita_basics_logic.refl
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_div_and_mod.mod
                                        (matita_arithmetics_nat.times a i)
                                        p))
                                  (matita_arithmetics_div_and_mod.mod
                                     (matita_arithmetics_nat.times a j)
                                     p)
                                  H))
                            (matita_arithmetics_nat.times
                               a
                               (matita_arithmetics_nat.minus j i))
                            (matita_arithmetics_nat.distributive_times_minus a j i))))))))
       (Hij:(cic.Term
               cic.prop
               (matita_basics_logic.Not
                  (cic.cast
                     (cic.type cic.z)
                     (cic.type cic.z)
                     (cic.univ cic.prop (cic.type cic.z) cic.I)
                     (cic.univ cic.prop (cic.type cic.z) cic.I)
                     cic.I
                     (matita_arithmetics_nat.lt i j)))) =>
        matita_basics_logic.match_Or
          cic.prop
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.univ cic.prop (cic.type cic.z) cic.I)
             (cic.univ cic.prop (cic.type cic.z) cic.I)
             cic.I
             (matita_arithmetics_nat.lt j i))
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.univ cic.prop (cic.type cic.z) cic.I)
             (cic.univ cic.prop (cic.type cic.z) cic.I)
             cic.I
             (matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                j
                i))
          (__:(cic.Term
                 cic.prop
                 (matita_basics_logic.Or
                    (cic.cast
                       (cic.type cic.z)
                       (cic.type cic.z)
                       (cic.univ cic.prop (cic.type cic.z) cic.I)
                       (cic.univ cic.prop (cic.type cic.z) cic.I)
                       cic.I
                       (matita_arithmetics_nat.lt j i))
                    (cic.cast
                       (cic.type cic.z)
                       (cic.type cic.z)
                       (cic.univ cic.prop (cic.type cic.z) cic.I)
                       (cic.univ cic.prop (cic.type cic.z) cic.I)
                       cic.I
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          j
                          i)))) =>
           matita_basics_logic.eq
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             i
             j)
          (Hij0:(cic.Term cic.prop (matita_arithmetics_nat.lt j i)) =>
           matita_basics_logic.False_ind
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_basics_logic.False
                   (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I))
                (cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_basics_logic.False
                   (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I))
                cic.I
                (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                 matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   i
                   j))
             (matita_basics_logic.absurd
                (cic.cast
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.univ cic.prop (cic.type cic.z) cic.I)
                   (cic.univ cic.prop (cic.type cic.z) cic.I)
                   cic.I
                   (matita_arithmetics_nat.lt (matita_arithmetics_nat.minus i j) p))
                (matita_basics_logic.eq_ind
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                   (cic.cast
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         matita_arithmetics_nat.nat
                         (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.prod
                            cic.prop
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            (matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                               x_1)
                            (_x_2:(cic.Term
                                     cic.prop
                                     (matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.pred p))
                                        x_1)) =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)))
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         matita_arithmetics_nat.nat
                         (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.prod
                            cic.prop
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            (matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                               x_1)
                            (_x_2:(cic.Term
                                     cic.prop
                                     (matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.pred p))
                                        x_1)) =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)))
                      cic.I
                      (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       _x_2:(cic.Term
                               cic.prop
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.pred p))
                                  x_1)) =>
                       matita_arithmetics_nat.lt (matita_arithmetics_nat.minus i j) x_1))
                   (matita_arithmetics_nat.le_S_S
                      (matita_arithmetics_nat.minus i j)
                      (matita_arithmetics_nat.pred p)
                      (matita_arithmetics_nat.le_plus_to_minus
                         i
                         j
                         (matita_arithmetics_nat.pred p)
                         (matita_arithmetics_nat.transitive_le
                            i
                            (matita_arithmetics_nat.pred p)
                            (matita_arithmetics_nat.plus (matita_arithmetics_nat.pred p) j)
                            lei
                            (matita_arithmetics_nat.le_plus_n_r
                               j
                               (matita_arithmetics_nat.pred p)))))
                   p
                   (matita_arithmetics_nat.S_pred
                      p
                      (matita_arithmetics_primes.prime_to_lt_O p primep)))
                (matita_arithmetics_nat.le_to_not_lt
                   p
                   (matita_arithmetics_nat.minus i j)
                   (matita_arithmetics_primes.divides_to_le
                      p
                      (matita_arithmetics_nat.minus i j)
                      (matita_arithmetics_nat.lt_plus_to_minus_r
                         matita_arithmetics_nat.O
                         j
                         i
                         Hij0)
                      (matita_basics_logic.match_Or
                         cic.prop
                         (cic.cast
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.univ cic.prop (cic.type cic.z) cic.I)
                            (cic.univ cic.prop (cic.type cic.z) cic.I)
                            cic.I
                            (matita_arithmetics_primes.divides p a))
                         (cic.cast
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.univ cic.prop (cic.type cic.z) cic.I)
                            (cic.univ cic.prop (cic.type cic.z) cic.I)
                            cic.I
                            (matita_arithmetics_primes.divides
                               p
                               (matita_arithmetics_nat.minus i j)))
                         (__:(cic.Term
                                cic.prop
                                (matita_basics_logic.Or
                                   (cic.cast
                                      (cic.type cic.z)
                                      (cic.type cic.z)
                                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                                      cic.I
                                      (matita_arithmetics_primes.divides p a))
                                   (cic.cast
                                      (cic.type cic.z)
                                      (cic.type cic.z)
                                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                                      cic.I
                                      (matita_arithmetics_primes.divides
                                         p
                                         (matita_arithmetics_nat.minus i j))))) =>
                          matita_arithmetics_primes.divides
                            p
                            (matita_arithmetics_nat.minus i j))
                         (Hdiv:(cic.Term cic.prop (matita_arithmetics_primes.divides p a)) =>
                          matita_basics_logic.False_ind
                            (cic.cast
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.prod
                                  cic.prop
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  matita_basics_logic.False
                                  (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I))
                               (cic.prod
                                  cic.prop
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  matita_basics_logic.False
                                  (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I))
                               cic.I
                               (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                                matita_arithmetics_primes.divides
                                  p
                                  (matita_arithmetics_nat.minus i j)))
                            (matita_basics_logic.absurd
                               (cic.cast
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.univ cic.prop (cic.type cic.z) cic.I)
                                  (cic.univ cic.prop (cic.type cic.z) cic.I)
                                  cic.I
                                  (matita_arithmetics_primes.divides p a))
                               Hdiv
                               ndiv))
                         (auto:(cic.Term
                                  cic.prop
                                  (matita_arithmetics_primes.divides
                                     p
                                     (matita_arithmetics_nat.minus i j))) =>
                          auto)
                         (matita_arithmetics_gcd.divides_times_to_divides
                            p
                            a
                            (matita_arithmetics_nat.minus i j)
                            primep
                            (matita_basics_logic.eq_ind_r
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_nat.times a i)
                                  (matita_arithmetics_nat.times a j))
                               (cic.cast
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      cic.prod
                                        cic.prop
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        cic.I
                                        (matita_basics_logic.eq
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.times a i)
                                              (matita_arithmetics_nat.times a j)))
                                        (__:(cic.Term
                                               cic.prop
                                               (matita_basics_logic.eq
                                                  (cic.cast
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s
                                                           (cic.s (cic.s cic.z))))
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type (cic.s cic.z))
                                                        cic.I)
                                                     (cic.univ
                                                        (cic.type
                                                           (cic.s (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s
                                                                 (cic.s cic.z))))
                                                        cic.I)
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  x
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.times
                                                        a
                                                        i)
                                                     (matita_arithmetics_nat.times
                                                        a
                                                        j)))) =>
                                         cic.univ cic.prop (cic.type cic.z) cic.I)))
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      cic.prod
                                        cic.prop
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        cic.I
                                        (matita_basics_logic.eq
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.times a i)
                                              (matita_arithmetics_nat.times a j)))
                                        (__:(cic.Term
                                               cic.prop
                                               (matita_basics_logic.eq
                                                  (cic.cast
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s
                                                           (cic.s (cic.s cic.z))))
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type (cic.s cic.z))
                                                        cic.I)
                                                     (cic.univ
                                                        (cic.type
                                                           (cic.s (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s
                                                                 (cic.s cic.z))))
                                                        cic.I)
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  x
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.times
                                                        a
                                                        i)
                                                     (matita_arithmetics_nat.times
                                                        a
                                                        j)))) =>
                                         cic.univ cic.prop (cic.type cic.z) cic.I)))
                                  cic.I
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   __:(cic.Term
                                         cic.prop
                                         (matita_basics_logic.eq
                                            (cic.cast
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               (cic.univ
                                                  (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I)
                                               (cic.univ
                                                  (cic.type (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s (cic.s cic.z))))
                                                  cic.I)
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            x
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.times a i)
                                               (matita_arithmetics_nat.times a j)))) =>
                                   matita_arithmetics_primes.divides p x))
                               (matita_arithmetics_primes.eq_mod_to_divides
                                  (matita_arithmetics_nat.times a i)
                                  (matita_arithmetics_nat.times a j)
                                  p
                                  (matita_arithmetics_primes.prime_to_lt_O p primep)
                                  (matita_basics_logic.rewrite_l
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_div_and_mod.mod
                                        (matita_arithmetics_nat.times a i)
                                        p)
                                     (cic.cast
                                        (cic.type cic.z)
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.prod
                                           (cic.type cic.z)
                                           (cic.type cic.z)
                                           (cic.type cic.z)
                                           cic.I
                                           matita_arithmetics_nat.nat
                                           (x:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            cic.univ cic.prop (cic.type cic.z) cic.I))
                                        (cic.prod
                                           (cic.type cic.z)
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I
                                           matita_arithmetics_nat.nat
                                           (__:(cic.Term
                                                  (cic.type cic.z)
                                                  matita_arithmetics_nat.nat) =>
                                            cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I))
                                        cic.I
                                        (x:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_div_and_mod.mod
                                              (matita_arithmetics_nat.times a i)
                                              p)
                                           x))
                                     (matita_basics_logic.refl
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_div_and_mod.mod
                                           (matita_arithmetics_nat.times a i)
                                           p))
                                     (matita_arithmetics_div_and_mod.mod
                                        (matita_arithmetics_nat.times a j)
                                        p)
                                     H))
                               (matita_arithmetics_nat.times
                                  a
                                  (matita_arithmetics_nat.minus i j))
                               (matita_arithmetics_nat.distributive_times_minus a i j))))))))
          (Hij0:(cic.Term
                   cic.prop
                   (matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      j
                      i)) =>
           matita_basics_logic.rewrite_r
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             i
             (cic.cast
                (cic.type cic.z)
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I))
                (cic.prod
                   (cic.type cic.z)
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I
                   matita_arithmetics_nat.nat
                   (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I))
                cic.I
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   i
                   x))
             (matita_basics_logic.refl
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                i)
             j
             Hij0)
          (matita_arithmetics_nat.le_to_or_lt_eq j i (matita_arithmetics_nat.not_lt_to_le i j Hij)))
       (matita_arithmetics_nat.decidable_lt i j)).

def eq_fact_pi_p :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_factorial.fact n)
          (matita_arithmetics_bigops.bigop
             (matita_arithmetics_nat.minus
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              (i0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
               matita_basics_bool.true)
                (matita_arithmetics_nat.plus
                   i
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s cic.z))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             matita_arithmetics_nat.times
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              (i0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => i0)
                (matita_arithmetics_nat.plus
                   i
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))
  :=
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.nat_ind
    (cic.cast
       (cic.type cic.z)
       (cic.type cic.z)
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (_x_365:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ cic.prop (cic.type cic.z) cic.I))
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (_x_365:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ cic.prop (cic.type cic.z) cic.I))
       cic.I
       (_x_365:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_factorial.fact _x_365)
          (matita_arithmetics_bigops.bigop
             (matita_arithmetics_nat.minus
                (matita_arithmetics_nat.S _x_365)
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              (i0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
               matita_basics_bool.true)
                (matita_arithmetics_nat.plus
                   i
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s cic.z))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             matita_arithmetics_nat.times
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              (i0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => i0)
                (matita_arithmetics_nat.plus
                   i
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))
    (matita_basics_logic.refl
       (cic.cast
          (cic.type (cic.s cic.z))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
          (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
          cic.I
          matita_arithmetics_nat.nat)
       (matita_arithmetics_factorial.fact matita_arithmetics_nat.O))
    (n1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
     Hind:(cic.Term
             cic.prop
             (matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_factorial.fact n1)
                (matita_arithmetics_bigops.bigop
                   (matita_arithmetics_nat.minus
                      (matita_arithmetics_nat.S n1)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    (i0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                     matita_basics_bool.true)
                      (matita_arithmetics_nat.plus
                         i
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s cic.z))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   matita_arithmetics_nat.times
                   (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    (i0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => i0)
                      (matita_arithmetics_nat.plus
                         i
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))) =>
     matita_basics_logic.eq_ind_r
       (cic.cast
          (cic.type (cic.s cic.z))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
          (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
          cic.I
          matita_arithmetics_nat.nat)
       (matita_arithmetics_nat.times
          (matita_arithmetics_nat.S n1)
          (matita_arithmetics_factorial.fact n1))
       (cic.cast
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                (matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.S n1)
                      (matita_arithmetics_factorial.fact n1)))
                (__:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S n1)
                             (matita_arithmetics_factorial.fact n1)))) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I)))
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                (matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.S n1)
                      (matita_arithmetics_factorial.fact n1)))
                (__:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S n1)
                             (matita_arithmetics_factorial.fact n1)))) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I)))
          cic.I
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           __:(cic.Term
                 cic.prop
                 (matita_basics_logic.eq
                    (cic.cast
                       (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                       (cic.univ
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          cic.I)
                       cic.I
                       matita_arithmetics_nat.nat)
                    x
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S n1)
                       (matita_arithmetics_factorial.fact n1)))) =>
           matita_basics_logic.eq
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             x
             (matita_arithmetics_bigops.bigop
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.S (matita_arithmetics_nat.S n1))
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 (i0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                  matita_basics_bool.true)
                   (matita_arithmetics_nat.plus
                      i
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s cic.z))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                matita_arithmetics_nat.times
                (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 (i0:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => i0)
                   (matita_arithmetics_nat.plus
                      i
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))
       (matita_basics_logic.eq_ind_r
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ
                (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_nat.times
             (matita_arithmetics_nat.plus n1 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (matita_arithmetics_bigops.bigop
                n1
                (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 matita_basics_bool.true)
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s cic.z))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                matita_arithmetics_nat.times
                (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 matita_arithmetics_nat.plus
                   i
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   (matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.plus
                            n1
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                         (matita_arithmetics_bigops.bigop
                            n1
                            (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_basics_bool.true)
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s cic.z))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                            matita_arithmetics_nat.times
                            (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_arithmetics_nat.plus
                               i
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
                   (__:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.plus
                                   n1
                                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                                (matita_arithmetics_bigops.bigop
                                   n1
                                   (i:(cic.Term
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat) =>
                                    matita_basics_bool.true)
                                   (cic.cast
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s cic.z))
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                   matita_arithmetics_nat.times
                                   (i:(cic.Term
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat) =>
                                    matita_arithmetics_nat.plus
                                      i
                                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)))
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   (matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.plus
                            n1
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                         (matita_arithmetics_bigops.bigop
                            n1
                            (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_basics_bool.true)
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s cic.z))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                            matita_arithmetics_nat.times
                            (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_arithmetics_nat.plus
                               i
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
                   (__:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.plus
                                   n1
                                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                                (matita_arithmetics_bigops.bigop
                                   n1
                                   (i:(cic.Term
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat) =>
                                    matita_basics_bool.true)
                                   (cic.cast
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s cic.z))
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                   matita_arithmetics_nat.times
                                   (i:(cic.Term
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat) =>
                                    matita_arithmetics_nat.plus
                                      i
                                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))) =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)))
             cic.I
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              __:(cic.Term
                    cic.prop
                    (matita_basics_logic.eq
                       (cic.cast
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                          (cic.univ
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             cic.I)
                          cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.plus
                             n1
                             (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                          (matita_arithmetics_bigops.bigop
                             n1
                             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                              matita_basics_bool.true)
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s cic.z))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                             matita_arithmetics_nat.times
                             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                              matita_arithmetics_nat.plus
                                i
                                (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))) =>
              matita_basics_logic.eq
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.S n1)
                   (matita_arithmetics_factorial.fact n1))
                x))
          (matita_basics_logic.eq_ind
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.S (matita_arithmetics_nat.plus n1 matita_arithmetics_nat.O))
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      (matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.plus n1 matita_arithmetics_nat.O))
                         x_1)
                      (_x_2:(cic.Term
                               cic.prop
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.plus
                                        n1
                                        matita_arithmetics_nat.O))
                                  x_1)) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)))
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      (matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.plus n1 matita_arithmetics_nat.O))
                         x_1)
                      (_x_2:(cic.Term
                               cic.prop
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.plus
                                        n1
                                        matita_arithmetics_nat.O))
                                  x_1)) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)))
                cic.I
                (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 _x_2:(cic.Term
                         cic.prop
                         (matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.plus n1 matita_arithmetics_nat.O))
                            x_1)) =>
                 matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.S n1)
                      (matita_arithmetics_factorial.fact n1))
                   (matita_arithmetics_nat.times
                      x_1
                      (matita_arithmetics_bigops.bigop
                         n1
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_basics_bool.true)
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s cic.z))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         matita_arithmetics_nat.times
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_arithmetics_nat.plus
                            i
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))
             (matita_basics_logic.eq_ind
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                n1
                (cic.cast
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.prod
                         cic.prop
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         (matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            n1
                            x_1)
                         (_x_2:(cic.Term
                                  cic.prop
                                  (matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     n1
                                     x_1)) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.prod
                         cic.prop
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         (matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            n1
                            x_1)
                         (_x_2:(cic.Term
                                  cic.prop
                                  (matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     n1
                                     x_1)) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)))
                   cic.I
                   (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    _x_2:(cic.Term
                            cic.prop
                            (matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ
                                     (cic.type cic.z)
                                     (cic.type (cic.s cic.z))
                                     cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               n1
                               x_1)) =>
                    matita_basics_logic.eq
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S n1)
                         (matita_arithmetics_factorial.fact n1))
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S x_1)
                         (matita_arithmetics_bigops.bigop
                            n1
                            (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_basics_bool.true)
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s cic.z))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                            matita_arithmetics_nat.times
                            (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_arithmetics_nat.plus
                               i
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))
                (matita_basics_logic.eq_f
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.times (matita_arithmetics_nat.S n1))
                   (matita_arithmetics_factorial.fact n1)
                   (matita_arithmetics_bigops.bigop
                      n1
                      (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       matita_basics_bool.true)
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s cic.z))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      matita_arithmetics_nat.times
                      (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       matita_arithmetics_nat.plus
                         i
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                   (matita_basics_logic.eq_ind
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.S n1)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      (cic.cast
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.minus
                                     (matita_arithmetics_nat.S n1)
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                                  x_1)
                               (_x_2:(cic.Term
                                        cic.prop
                                        (matita_basics_logic.eq
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.S n1)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           x_1)) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)))
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.minus
                                     (matita_arithmetics_nat.S n1)
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                                  x_1)
                               (_x_2:(cic.Term
                                        cic.prop
                                        (matita_basics_logic.eq
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.S n1)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           x_1)) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)))
                         cic.I
                         (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          _x_2:(cic.Term
                                  cic.prop
                                  (matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_nat.S n1)
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     x_1)) =>
                          matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_factorial.fact n1)
                            (matita_arithmetics_bigops.bigop
                               x_1
                               (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                matita_basics_bool.true)
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                               matita_arithmetics_nat.times
                               (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                matita_arithmetics_nat.plus
                                  i
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
                      Hind
                      n1
                      (matita_basics_logic.rewrite_l
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         n1
                         (cic.cast
                            (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_arithmetics_nat.nat
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I
                               matita_arithmetics_nat.nat
                               (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I))
                            cic.I
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               x
                               n1))
                         (matita_basics_logic.refl
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            n1)
                         (matita_arithmetics_nat.minus n1 matita_arithmetics_nat.O)
                         (matita_arithmetics_nat.minus_n_O n1))))
                (matita_arithmetics_nat.plus n1 matita_arithmetics_nat.O)
                (matita_arithmetics_nat.plus_n_O n1))
             (matita_arithmetics_nat.plus n1 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (matita_arithmetics_nat.plus_n_Sm n1 matita_arithmetics_nat.O))
          (matita_arithmetics_bigops.bigop
             (matita_arithmetics_nat.S n1)
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => matita_basics_bool.true)
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s cic.z))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             matita_arithmetics_nat.times
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              matita_arithmetics_nat.plus i (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
          (matita_arithmetics_bigops.bigop_Strue
             n1
             (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => matita_basics_bool.true)
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s cic.z))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             matita_arithmetics_nat.times
             (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              matita_arithmetics_nat.plus __ (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (matita_basics_logic.refl
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_basics_bool.bool)
                matita_basics_bool.true)))
       (matita_arithmetics_nat.times
          (matita_arithmetics_factorial.fact n1)
          (matita_arithmetics_nat.S n1))
       (matita_arithmetics_nat.commutative_times
          (matita_arithmetics_factorial.fact n1)
          (matita_arithmetics_nat.S n1)))
    n.

def congruent_pi :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat))
       (f:(cic.Term
             (cic.type cic.z)
             (cic.prod
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_arithmetics_nat.nat
                (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 matita_arithmetics_nat.nat))) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             (cic.type cic.z)
             cic.prop
             cic.prop
             cic.I
             matita_arithmetics_nat.nat
             (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                cic.prop
                cic.prop
                cic.I
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
                (__:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
                 matita_arithmetics_congruence.congruent
                   (matita_arithmetics_bigops.bigop
                      n
                      (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       matita_basics_bool.true)
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s cic.z))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      matita_arithmetics_nat.times
                      (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => f i))
                   (matita_arithmetics_bigops.bigop
                      n
                      (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       matita_basics_bool.true)
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s cic.z))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      matita_arithmetics_nat.times
                      (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       matita_arithmetics_div_and_mod.mod (f i) p))
                   p)))))
  :=
  f:(cic.Term
       (cic.type cic.z)
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           matita_arithmetics_nat.nat))) =>
  n:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.nat_ind
    (cic.cast
       (cic.type cic.z)
       (cic.type cic.z)
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (_x_365:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ cic.prop (cic.type cic.z) cic.I))
       (cic.prod
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.type cic.z)
          cic.I
          matita_arithmetics_nat.nat
          (_x_365:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.univ cic.prop (cic.type cic.z) cic.I))
       cic.I
       (_x_365:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             cic.prop
             cic.prop
             cic.prop
             cic.I
             (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
             (__:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
              matita_arithmetics_congruence.congruent
                (matita_arithmetics_bigops.bigop
                   _x_365
                   (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    matita_basics_bool.true)
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s cic.z))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   matita_arithmetics_nat.times
                   (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => f i))
                (matita_arithmetics_bigops.bigop
                   _x_365
                   (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    matita_basics_bool.true)
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s cic.z))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   matita_arithmetics_nat.times
                   (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    matita_arithmetics_div_and_mod.mod (f i) p))
                p))))
    (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
     auto:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
     matita_arithmetics_congruence.congruent_n_n
       (matita_arithmetics_bigops.bigop
          matita_arithmetics_nat.O
          (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => matita_basics_bool.true)
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s cic.z))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
          matita_arithmetics_nat.times
          (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => f i))
       p)
    (n1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
     Hind:(cic.Term
             cic.prop
             (cic.prod
                (cic.type cic.z)
                cic.prop
                cic.prop
                cic.I
                matita_arithmetics_nat.nat
                (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 cic.prod
                   cic.prop
                   cic.prop
                   cic.prop
                   cic.I
                   (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
                   (__:(cic.Term
                          cic.prop
                          (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
                    matita_arithmetics_congruence.congruent
                      (matita_arithmetics_bigops.bigop
                         n1
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_basics_bool.true)
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s cic.z))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         matita_arithmetics_nat.times
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => f i))
                      (matita_arithmetics_bigops.bigop
                         n1
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_basics_bool.true)
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s cic.z))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         matita_arithmetics_nat.times
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_arithmetics_div_and_mod.mod (f i) p))
                      p)))) =>
     p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
     posp:(cic.Term cic.prop (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)) =>
     matita_basics_logic.eq_ind_r
       (cic.cast
          (cic.type (cic.s cic.z))
          (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
          (cic.univ (cic.type (cic.s (cic.s cic.z))) (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
          cic.I
          matita_arithmetics_nat.nat)
       (matita_arithmetics_nat.times
          (f n1)
          (matita_arithmetics_bigops.bigop
             n1
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => matita_basics_bool.true)
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s cic.z))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             matita_arithmetics_nat.times
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => f i)))
       (cic.cast
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                (matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.times
                      (f n1)
                      (matita_arithmetics_bigops.bigop
                         n1
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_basics_bool.true)
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s cic.z))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         matita_arithmetics_nat.times
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => f i))))
                (__:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.times
                             (f n1)
                             (matita_arithmetics_bigops.bigop
                                n1
                                (i:(cic.Term
                                      (cic.type cic.z)
                                      matita_arithmetics_nat.nat) =>
                                 matita_basics_bool.true)
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s cic.z))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                matita_arithmetics_nat.times
                                (i:(cic.Term
                                      (cic.type cic.z)
                                      matita_arithmetics_nat.nat) =>
                                 f i))))) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I)))
          (cic.prod
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.type cic.z)
             cic.I
             matita_arithmetics_nat.nat
             (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                (matita_basics_logic.eq
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.times
                      (f n1)
                      (matita_arithmetics_bigops.bigop
                         n1
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_basics_bool.true)
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s cic.z))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         matita_arithmetics_nat.times
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => f i))))
                (__:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.times
                             (f n1)
                             (matita_arithmetics_bigops.bigop
                                n1
                                (i:(cic.Term
                                      (cic.type cic.z)
                                      matita_arithmetics_nat.nat) =>
                                 matita_basics_bool.true)
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s cic.z))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                matita_arithmetics_nat.times
                                (i:(cic.Term
                                      (cic.type cic.z)
                                      matita_arithmetics_nat.nat) =>
                                 f i))))) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I)))
          cic.I
          (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           __:(cic.Term
                 cic.prop
                 (matita_basics_logic.eq
                    (cic.cast
                       (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                       (cic.univ
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          cic.I)
                       cic.I
                       matita_arithmetics_nat.nat)
                    x
                    (matita_arithmetics_nat.times
                       (f n1)
                       (matita_arithmetics_bigops.bigop
                          n1
                          (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                           matita_basics_bool.true)
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          matita_arithmetics_nat.times
                          (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => f i))))) =>
           matita_arithmetics_congruence.congruent
             x
             (matita_arithmetics_bigops.bigop
                (matita_arithmetics_nat.S n1)
                (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 matita_basics_bool.true)
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s cic.z))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                matita_arithmetics_nat.times
                (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 matita_arithmetics_div_and_mod.mod (f i) p))
             p))
       (matita_arithmetics_congruence.congruent_times
          (f n1)
          (matita_arithmetics_bigops.bigop
             n1
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => matita_basics_bool.true)
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s cic.z))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             matita_arithmetics_nat.times
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => f i))
          (matita_arithmetics_div_and_mod.mod (f n1) p)
          (matita_arithmetics_bigops.bigop
             n1
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => matita_basics_bool.true)
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s cic.z))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             matita_arithmetics_nat.times
             (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
              matita_arithmetics_div_and_mod.mod (f i) p))
          p
          posp
          (matita_arithmetics_congruence.congruent_n_mod_n (f n1) p posp)
          (Hind p posp))
       (matita_arithmetics_bigops.bigop
          (matita_arithmetics_nat.S n1)
          (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => matita_basics_bool.true)
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s cic.z))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
          matita_arithmetics_nat.times
          (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => f i))
       (matita_arithmetics_bigops.bigop_Strue
          n1
          (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) => matita_basics_bool.true)
          (cic.cast
             (cic.type (cic.s cic.z))
             (cic.type (cic.s cic.z))
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
             cic.I
             matita_arithmetics_nat.nat)
          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
          matita_arithmetics_nat.times
          f
          (matita_basics_logic.refl
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_basics_bool.bool)
             matita_basics_bool.true)))
    n.

def congruent_exp_pred_SO :
  cic.Term
    cic.prop
    (cic.prod
       (cic.type cic.z)
       cic.prop
       cic.prop
       cic.I
       matita_arithmetics_nat.nat
       (p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
        cic.prod
          (cic.type cic.z)
          cic.prop
          cic.prop
          cic.I
          matita_arithmetics_nat.nat
          (a:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             cic.prop
             cic.prop
             cic.prop
             cic.I
             (matita_arithmetics_primes.prime p)
             (__:(cic.Term cic.prop (matita_arithmetics_primes.prime p)) =>
              cic.prod
                cic.prop
                cic.prop
                cic.prop
                cic.I
                (matita_basics_logic.Not
                   (cic.cast
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                      (cic.univ cic.prop (cic.type cic.z) cic.I)
                      cic.I
                      (matita_arithmetics_primes.divides p a)))
                (__1:(cic.Term
                        cic.prop
                        (matita_basics_logic.Not
                           (cic.cast
                              (cic.type cic.z)
                              (cic.type cic.z)
                              (cic.univ cic.prop (cic.type cic.z) cic.I)
                              (cic.univ cic.prop (cic.type cic.z) cic.I)
                              cic.I
                              (matita_arithmetics_primes.divides p a)))) =>
                 matita_arithmetics_congruence.congruent
                   (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   p)))))
  :=
  p:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  a:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
  primep:(cic.Term cic.prop (matita_arithmetics_primes.prime p)) =>
  ndiv:(cic.Term
          cic.prop
          (matita_basics_logic.Not
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                cic.I
                (matita_arithmetics_primes.divides p a)))) =>
  matita_arithmetics_congruence.divides_to_congruent
    (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
    p
    (matita_arithmetics_primes.prime_to_lt_O p primep)
    (matita_arithmetics_exp.lt_O_exp
       a
       (matita_arithmetics_nat.pred p)
       (matita_arithmetics_nat.match_nat
          cic.prop
          (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           cic.prod
             cic.prop
             cic.prop
             cic.prop
             cic.I
             (matita_basics_logic.Not
                (cic.cast
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.univ cic.prop (cic.type cic.z) cic.I)
                   (cic.univ cic.prop (cic.type cic.z) cic.I)
                   cic.I
                   (matita_arithmetics_primes.divides p __)))
             (__1:(cic.Term
                     cic.prop
                     (matita_basics_logic.Not
                        (cic.cast
                           (cic.type cic.z)
                           (cic.type cic.z)
                           (cic.univ cic.prop (cic.type cic.z) cic.I)
                           (cic.univ cic.prop (cic.type cic.z) cic.I)
                           cic.I
                           (matita_arithmetics_primes.divides p __)))) =>
              matita_arithmetics_nat.lt matita_arithmetics_nat.O __))
          (_clearme:(cic.Term
                       cic.prop
                       (matita_basics_logic.Not
                          (cic.cast
                             (cic.type cic.z)
                             (cic.type cic.z)
                             (cic.univ cic.prop (cic.type cic.z) cic.I)
                             (cic.univ cic.prop (cic.type cic.z) cic.I)
                             cic.I
                             (matita_arithmetics_primes.divides p matita_arithmetics_nat.O)))) =>
           matita_basics_logic.match_Not
             cic.prop
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                cic.I
                (matita_arithmetics_primes.divides p matita_arithmetics_nat.O))
             (__:(cic.Term
                    cic.prop
                    (matita_basics_logic.Not
                       (cic.cast
                          (cic.type cic.z)
                          (cic.type cic.z)
                          (cic.univ cic.prop (cic.type cic.z) cic.I)
                          (cic.univ cic.prop (cic.type cic.z) cic.I)
                          cic.I
                          (matita_arithmetics_primes.divides p matita_arithmetics_nat.O)))) =>
              matita_arithmetics_nat.lt matita_arithmetics_nat.O matita_arithmetics_nat.O)
             (div0:(cic.Term
                      cic.prop
                      (cic.prod
                         cic.prop
                         cic.prop
                         cic.prop
                         cic.I
                         (matita_arithmetics_primes.divides p matita_arithmetics_nat.O)
                         (__:(cic.Term
                                cic.prop
                                (matita_arithmetics_primes.divides
                                   p
                                   matita_arithmetics_nat.O)) =>
                          matita_basics_logic.False))) =>
              matita_basics_logic.False_ind
                (cic.cast
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_basics_logic.False
                      (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I))
                   (cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_basics_logic.False
                      (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I))
                   cic.I
                   (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                    matita_arithmetics_nat.lt matita_arithmetics_nat.O matita_arithmetics_nat.O))
                (div0
                   (matita_arithmetics_primes.quotient
                      p
                      matita_arithmetics_nat.O
                      matita_arithmetics_nat.O
                      (matita_basics_logic.rewrite_l
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         matita_arithmetics_nat.O
                         (cic.cast
                            (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_arithmetics_nat.nat
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I
                               matita_arithmetics_nat.nat
                               (__:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I))
                            cic.I
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O
                               x))
                         (matita_basics_logic.refl
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            matita_arithmetics_nat.O)
                         (matita_arithmetics_nat.times p matita_arithmetics_nat.O)
                         (matita_arithmetics_nat.times_n_O p)))))
             _clearme)
          (auto:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
           auto':(cic.Term
                    cic.prop
                    (matita_basics_logic.Not
                       (cic.cast
                          (cic.type cic.z)
                          (cic.type cic.z)
                          (cic.univ cic.prop (cic.type cic.z) cic.I)
                          (cic.univ cic.prop (cic.type cic.z) cic.I)
                          cic.I
                          (matita_arithmetics_primes.divides
                             p
                             (matita_arithmetics_nat.S auto))))) =>
           matita_arithmetics_nat.lt_O_S auto)
          a
          ndiv))
    (matita_basics_logic.match_Or
       cic.prop
       (cic.cast
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          cic.I
          (matita_arithmetics_primes.divides
             p
             (matita_arithmetics_nat.minus
                (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
       (cic.cast
          (cic.type cic.z)
          (cic.type cic.z)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          (cic.univ cic.prop (cic.type cic.z) cic.I)
          cic.I
          (matita_arithmetics_primes.divides
             p
             (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))))
       (__:(cic.Term
              cic.prop
              (matita_basics_logic.Or
                 (cic.cast
                    (cic.type cic.z)
                    (cic.type cic.z)
                    (cic.univ cic.prop (cic.type cic.z) cic.I)
                    (cic.univ cic.prop (cic.type cic.z) cic.I)
                    cic.I
                    (matita_arithmetics_primes.divides
                       p
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                 (cic.cast
                    (cic.type cic.z)
                    (cic.type cic.z)
                    (cic.univ cic.prop (cic.type cic.z) cic.I)
                    (cic.univ cic.prop (cic.type cic.z) cic.I)
                    cic.I
                    (matita_arithmetics_primes.divides
                       p
                       (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p)))))) =>
        matita_arithmetics_primes.divides
          p
          (matita_arithmetics_nat.minus
             (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
       (auto:(cic.Term
                cic.prop
                (matita_arithmetics_primes.divides
                   p
                   (matita_arithmetics_nat.minus
                      (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)))) =>
        auto)
       (Hdiv:(cic.Term
                cic.prop
                (matita_arithmetics_primes.divides
                   p
                   (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p)))) =>
        matita_basics_logic.False_ind
          (cic.cast
             (cic.type cic.z)
             (cic.type cic.z)
             (cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_basics_logic.False
                (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I))
             (cic.prod
                cic.prop
                (cic.type cic.z)
                (cic.type cic.z)
                cic.I
                matita_basics_logic.False
                (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
                 cic.univ cic.prop (cic.type cic.z) cic.I))
             cic.I
             (_x_66:(cic.Term cic.prop matita_basics_logic.False) =>
              matita_arithmetics_primes.divides
                p
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
          (matita_basics_logic.absurd
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                (cic.univ cic.prop (cic.type cic.z) cic.I)
                cic.I
                (matita_arithmetics_primes.divides
                   p
                   (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))))
             Hdiv
             (matita_arithmetics_fermat_little_theorem.prime_to_not_divides_fact
                p
                primep
                (matita_arithmetics_nat.pred p)
                (matita_arithmetics_nat.le_S_S_to_le
                   (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                   p
                   (matita_basics_logic.eq_ind_r
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      p
                      (cic.cast
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  p)
                               (__:(cic.Term
                                      cic.prop
                                      (matita_basics_logic.eq
                                         (cic.cast
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            (cic.univ
                                               (cic.type cic.z)
                                               (cic.type (cic.s cic.z))
                                               cic.I)
                                            (cic.univ
                                               (cic.type (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               cic.I)
                                            cic.I
                                            matita_arithmetics_nat.nat)
                                         x
                                         p)) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)))
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  p)
                               (__:(cic.Term
                                      cic.prop
                                      (matita_basics_logic.eq
                                         (cic.cast
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            (cic.univ
                                               (cic.type cic.z)
                                               (cic.type (cic.s cic.z))
                                               cic.I)
                                            (cic.univ
                                               (cic.type (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               cic.I)
                                            cic.I
                                            matita_arithmetics_nat.nat)
                                         x
                                         p)) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)))
                         cic.I
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          __:(cic.Term
                                cic.prop
                                (matita_basics_logic.eq
                                   (cic.cast
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      (cic.univ
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         cic.I)
                                      cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   p)) =>
                          matita_arithmetics_nat.le
                            (matita_arithmetics_nat.S x)
                            (matita_arithmetics_nat.S p)))
                      (matita_arithmetics_nat.le_n (matita_arithmetics_nat.S p))
                      (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                      (matita_arithmetics_nat.S_pred
                         p
                         (matita_arithmetics_primes.prime_to_lt_O p primep)))))))
       (matita_arithmetics_gcd.divides_times_to_divides
          p
          (matita_arithmetics_nat.minus
             (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O))
          (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))
          primep
          (matita_basics_logic.eq_ind_r
             (cic.cast
                (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                (cic.univ
                   (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   cic.I)
                cic.I
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.times
                (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
             (cic.cast
                (cic.type cic.z)
                (cic.type cic.z)
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      (matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_factorial.fact
                               (matita_arithmetics_nat.pred p))
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                      (__:(cic.Term
                             cic.prop
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_factorial.fact
                                      (matita_arithmetics_nat.pred p))
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_exp.exp
                                         a
                                         (matita_arithmetics_nat.pred p))
                                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)))
                (cic.prod
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.type cic.z)
                   cic.I
                   matita_arithmetics_nat.nat
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    cic.prod
                      cic.prop
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      (matita_basics_logic.eq
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_factorial.fact
                               (matita_arithmetics_nat.pred p))
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                      (__:(cic.Term
                             cic.prop
                             (matita_basics_logic.eq
                                (cic.cast
                                   (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.univ
                                      (cic.type cic.z)
                                      (cic.type (cic.s cic.z))
                                      cic.I)
                                   (cic.univ
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_factorial.fact
                                      (matita_arithmetics_nat.pred p))
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_exp.exp
                                         a
                                         (matita_arithmetics_nat.pred p))
                                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)))
                cic.I
                (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                 __:(cic.Term
                       cic.prop
                       (matita_basics_logic.eq
                          (cic.cast
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                             (cic.univ
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I)
                             cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_factorial.fact
                                (matita_arithmetics_nat.pred p))
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_exp.exp
                                   a
                                   (matita_arithmetics_nat.pred p))
                                (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
                 matita_arithmetics_primes.divides p x))
             (matita_basics_logic.eq_ind_r
                (cic.cast
                   (cic.type (cic.s cic.z))
                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                   (cic.univ
                      (cic.type (cic.s (cic.s cic.z)))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      cic.I)
                   cic.I
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))
                      (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p)))
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                (cic.cast
                   (cic.type cic.z)
                   (cic.type cic.z)
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.prod
                         cic.prop
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         (matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            x
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_factorial.fact
                                     (matita_arithmetics_nat.pred p))
                                  (matita_arithmetics_exp.exp
                                     a
                                     (matita_arithmetics_nat.pred p)))
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_factorial.fact
                                     (matita_arithmetics_nat.pred p))
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                         (__:(cic.Term
                                cic.prop
                                (matita_basics_logic.eq
                                   (cic.cast
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      (cic.univ
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         cic.I)
                                      cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_factorial.fact
                                            (matita_arithmetics_nat.pred p))
                                         (matita_arithmetics_exp.exp
                                            a
                                            (matita_arithmetics_nat.pred p)))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_factorial.fact
                                            (matita_arithmetics_nat.pred p))
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))))) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)))
                   (cic.prod
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.type cic.z)
                      cic.I
                      matita_arithmetics_nat.nat
                      (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       cic.prod
                         cic.prop
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         (matita_basics_logic.eq
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            x
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_factorial.fact
                                     (matita_arithmetics_nat.pred p))
                                  (matita_arithmetics_exp.exp
                                     a
                                     (matita_arithmetics_nat.pred p)))
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_factorial.fact
                                     (matita_arithmetics_nat.pred p))
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                         (__:(cic.Term
                                cic.prop
                                (matita_basics_logic.eq
                                   (cic.cast
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      (cic.univ
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         cic.I)
                                      cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_factorial.fact
                                            (matita_arithmetics_nat.pred p))
                                         (matita_arithmetics_exp.exp
                                            a
                                            (matita_arithmetics_nat.pred p)))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_factorial.fact
                                            (matita_arithmetics_nat.pred p))
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))))) =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)))
                   cic.I
                   (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                    __:(cic.Term
                          cic.prop
                          (matita_basics_logic.eq
                             (cic.cast
                                (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                (cic.univ
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_factorial.fact
                                      (matita_arithmetics_nat.pred p))
                                   (matita_arithmetics_exp.exp
                                      a
                                      (matita_arithmetics_nat.pred p)))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_factorial.fact
                                      (matita_arithmetics_nat.pred p))
                                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
                    matita_arithmetics_primes.divides p x))
                (matita_basics_logic.eq_ind
                   (cic.cast
                      (cic.type (cic.s cic.z))
                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                      (cic.univ
                         (cic.type (cic.s (cic.s cic.z)))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         cic.I)
                      cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))
                   (cic.cast
                      (cic.type cic.z)
                      (cic.type cic.z)
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         matita_arithmetics_nat.nat
                         (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.prod
                            cic.prop
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            (matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_factorial.fact
                                  (matita_arithmetics_nat.pred p))
                               x_1)
                            (_x_2:(cic.Term
                                     cic.prop
                                     (matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_factorial.fact
                                           (matita_arithmetics_nat.pred p))
                                        x_1)) =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)))
                      (cic.prod
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.type cic.z)
                         cic.I
                         matita_arithmetics_nat.nat
                         (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          cic.prod
                            cic.prop
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            (matita_basics_logic.eq
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_factorial.fact
                                  (matita_arithmetics_nat.pred p))
                               x_1)
                            (_x_2:(cic.Term
                                     cic.prop
                                     (matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_factorial.fact
                                           (matita_arithmetics_nat.pred p))
                                        x_1)) =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)))
                      cic.I
                      (x_1:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                       _x_2:(cic.Term
                               cic.prop
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_factorial.fact
                                     (matita_arithmetics_nat.pred p))
                                  x_1)) =>
                       matita_arithmetics_primes.divides
                         p
                         (matita_arithmetics_nat.minus
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_factorial.fact
                                  (matita_arithmetics_nat.pred p))
                               (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p)))
                            x_1)))
                   (matita_basics_logic.eq_ind_r
                      (cic.cast
                         (cic.type (cic.s cic.z))
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                         (cic.univ
                            (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            cic.I)
                         cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_bigops.bigop
                         (matita_arithmetics_nat.minus
                            (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_basics_bool.true)
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s cic.z))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         matita_arithmetics_nat.times
                         (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          matita_arithmetics_nat.plus
                            i
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                      (cic.cast
                         (cic.type cic.z)
                         (cic.type cic.z)
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_bigops.bigop
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.pred p))
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_basics_bool.true)
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s cic.z))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                     matita_arithmetics_nat.times
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_arithmetics_nat.plus
                                        i
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))))
                               (__:(cic.Term
                                      cic.prop
                                      (matita_basics_logic.eq
                                         (cic.cast
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            (cic.univ
                                               (cic.type cic.z)
                                               (cic.type (cic.s cic.z))
                                               cic.I)
                                            (cic.univ
                                               (cic.type (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               cic.I)
                                            cic.I
                                            matita_arithmetics_nat.nat)
                                         x
                                         (matita_arithmetics_bigops.bigop
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.pred p))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (i:(cic.Term
                                                  (cic.type cic.z)
                                                  matita_arithmetics_nat.nat) =>
                                             matita_basics_bool.true)
                                            (cic.cast
                                               (cic.type (cic.s cic.z))
                                               (cic.type (cic.s cic.z))
                                               (cic.univ
                                                  (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I)
                                               (cic.univ
                                                  (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I)
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.times
                                            (i:(cic.Term
                                                  (cic.type cic.z)
                                                  matita_arithmetics_nat.nat) =>
                                             matita_arithmetics_nat.plus
                                               i
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)))
                         (cic.prod
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.type cic.z)
                            cic.I
                            matita_arithmetics_nat.nat
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             cic.prod
                               cic.prop
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               (matita_basics_logic.eq
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_bigops.bigop
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.pred p))
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_basics_bool.true)
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s cic.z))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                     matita_arithmetics_nat.times
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_arithmetics_nat.plus
                                        i
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))))
                               (__:(cic.Term
                                      cic.prop
                                      (matita_basics_logic.eq
                                         (cic.cast
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            (cic.univ
                                               (cic.type cic.z)
                                               (cic.type (cic.s cic.z))
                                               cic.I)
                                            (cic.univ
                                               (cic.type (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               cic.I)
                                            cic.I
                                            matita_arithmetics_nat.nat)
                                         x
                                         (matita_arithmetics_bigops.bigop
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.pred p))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (i:(cic.Term
                                                  (cic.type cic.z)
                                                  matita_arithmetics_nat.nat) =>
                                             matita_basics_bool.true)
                                            (cic.cast
                                               (cic.type (cic.s cic.z))
                                               (cic.type (cic.s cic.z))
                                               (cic.univ
                                                  (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I)
                                               (cic.univ
                                                  (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I)
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.times
                                            (i:(cic.Term
                                                  (cic.type cic.z)
                                                  matita_arithmetics_nat.nat) =>
                                             matita_arithmetics_nat.plus
                                               i
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)))
                         cic.I
                         (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                          __:(cic.Term
                                cic.prop
                                (matita_basics_logic.eq
                                   (cic.cast
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      (cic.univ
                                         (cic.type cic.z)
                                         (cic.type (cic.s cic.z))
                                         cic.I)
                                      (cic.univ
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         cic.I)
                                      cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_bigops.bigop
                                      (matita_arithmetics_nat.minus
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.pred p))
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (i:(cic.Term
                                            (cic.type cic.z)
                                            matita_arithmetics_nat.nat) =>
                                       matita_basics_bool.true)
                                      (cic.cast
                                         (cic.type (cic.s cic.z))
                                         (cic.type (cic.s cic.z))
                                         (cic.univ
                                            (cic.type cic.z)
                                            (cic.type (cic.s cic.z))
                                            cic.I)
                                         (cic.univ
                                            (cic.type cic.z)
                                            (cic.type (cic.s cic.z))
                                            cic.I)
                                         cic.I
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                      matita_arithmetics_nat.times
                                      (i:(cic.Term
                                            (cic.type cic.z)
                                            matita_arithmetics_nat.nat) =>
                                       matita_arithmetics_nat.plus
                                         i
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))))) =>
                          matita_arithmetics_primes.divides
                            p
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_nat.times
                                  x
                                  (matita_arithmetics_exp.exp
                                     a
                                     (matita_arithmetics_nat.pred p)))
                               x)))
                      (matita_basics_logic.eq_ind_r
                         (cic.cast
                            (cic.type (cic.s cic.z))
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                            (cic.univ
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               cic.I)
                            cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                            (matita_arithmetics_bigops.bigop
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                               (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                matita_basics_bool.true)
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                               matita_arithmetics_nat.times
                               (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                matita_arithmetics_nat.plus
                                  i
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                         (cic.cast
                            (cic.type cic.z)
                            (cic.type cic.z)
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_arithmetics_nat.nat
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.prod
                                  cic.prop
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  (matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     x
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_exp.exp
                                           a
                                           (matita_arithmetics_nat.pred p))
                                        (matita_arithmetics_bigops.bigop
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.pred p))
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_basics_bool.true)
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s cic.z))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)
                                           matita_arithmetics_nat.times
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_arithmetics_nat.plus
                                              i
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)))))
                                  (__:(cic.Term
                                         cic.prop
                                         (matita_basics_logic.eq
                                            (cic.cast
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               (cic.univ
                                                  (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I)
                                               (cic.univ
                                                  (cic.type (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s (cic.s cic.z))))
                                                  cic.I)
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            x
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_exp.exp
                                                  a
                                                  (matita_arithmetics_nat.pred p))
                                               (matita_arithmetics_bigops.bigop
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.pred
                                                           p))
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (i:(cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat) =>
                                                   matita_basics_bool.true)
                                                  (cic.cast
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type (cic.s cic.z))
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type (cic.s cic.z))
                                                        cic.I)
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type (cic.s cic.z))
                                                        cic.I)
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  matita_arithmetics_nat.times
                                                  (i:(cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat) =>
                                                   matita_arithmetics_nat.plus
                                                     i
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))))) =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I)))
                            (cic.prod
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.type cic.z)
                               cic.I
                               matita_arithmetics_nat.nat
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                cic.prod
                                  cic.prop
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  (matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     x
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_exp.exp
                                           a
                                           (matita_arithmetics_nat.pred p))
                                        (matita_arithmetics_bigops.bigop
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.pred p))
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_basics_bool.true)
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s cic.z))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)
                                           matita_arithmetics_nat.times
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_arithmetics_nat.plus
                                              i
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)))))
                                  (__:(cic.Term
                                         cic.prop
                                         (matita_basics_logic.eq
                                            (cic.cast
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               (cic.univ
                                                  (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I)
                                               (cic.univ
                                                  (cic.type (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s (cic.s cic.z))))
                                                  cic.I)
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            x
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_exp.exp
                                                  a
                                                  (matita_arithmetics_nat.pred p))
                                               (matita_arithmetics_bigops.bigop
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.pred
                                                           p))
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (i:(cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat) =>
                                                   matita_basics_bool.true)
                                                  (cic.cast
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type (cic.s cic.z))
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type (cic.s cic.z))
                                                        cic.I)
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type (cic.s cic.z))
                                                        cic.I)
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  matita_arithmetics_nat.times
                                                  (i:(cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat) =>
                                                   matita_arithmetics_nat.plus
                                                     i
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))))) =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I)))
                            cic.I
                            (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                             __:(cic.Term
                                   cic.prop
                                   (matita_basics_logic.eq
                                      (cic.cast
                                         (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                                         (cic.univ
                                            (cic.type cic.z)
                                            (cic.type (cic.s cic.z))
                                            cic.I)
                                         (cic.univ
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            cic.I)
                                         cic.I
                                         matita_arithmetics_nat.nat)
                                      x
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_exp.exp
                                            a
                                            (matita_arithmetics_nat.pred p))
                                         (matita_arithmetics_bigops.bigop
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.pred p))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (i:(cic.Term
                                                  (cic.type cic.z)
                                                  matita_arithmetics_nat.nat) =>
                                             matita_basics_bool.true)
                                            (cic.cast
                                               (cic.type (cic.s cic.z))
                                               (cic.type (cic.s cic.z))
                                               (cic.univ
                                                  (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I)
                                               (cic.univ
                                                  (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I)
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.times
                                            (i:(cic.Term
                                                  (cic.type cic.z)
                                                  matita_arithmetics_nat.nat) =>
                                             matita_arithmetics_nat.plus
                                               i
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))) =>
                             matita_arithmetics_primes.divides
                               p
                               (matita_arithmetics_nat.minus
                                  x
                                  (matita_arithmetics_bigops.bigop
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.pred p))
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_basics_bool.true)
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s cic.z))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                     matita_arithmetics_nat.times
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_arithmetics_nat.plus
                                        i
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))))))
                         (matita_basics_logic.eq_ind_r
                            (cic.cast
                               (cic.type (cic.s cic.z))
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                               (cic.univ
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)
                               cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                            (cic.cast
                               (cic.type cic.z)
                               (cic.type cic.z)
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   cic.prod
                                     cic.prop
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     (matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.pred p))
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)))
                                     (__:(cic.Term
                                            cic.prop
                                            (matita_basics_logic.eq
                                               (cic.cast
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s (cic.s cic.z))))
                                                  (cic.univ
                                                     (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I)
                                                  (cic.univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s
                                                           (cic.s (cic.s cic.z))))
                                                     cic.I)
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               x
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.pred p))
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)))) =>
                                      cic.univ cic.prop (cic.type cic.z) cic.I)))
                               (cic.prod
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  cic.I
                                  matita_arithmetics_nat.nat
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   cic.prod
                                     cic.prop
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     (matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.pred p))
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)))
                                     (__:(cic.Term
                                            cic.prop
                                            (matita_basics_logic.eq
                                               (cic.cast
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s (cic.s cic.z))))
                                                  (cic.univ
                                                     (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I)
                                                  (cic.univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s
                                                           (cic.s (cic.s cic.z))))
                                                     cic.I)
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               x
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.pred p))
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)))) =>
                                      cic.univ cic.prop (cic.type cic.z) cic.I)))
                               cic.I
                               (x:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                __:(cic.Term
                                      cic.prop
                                      (matita_basics_logic.eq
                                         (cic.cast
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                                            (cic.univ
                                               (cic.type cic.z)
                                               (cic.type (cic.s cic.z))
                                               cic.I)
                                            (cic.univ
                                               (cic.type (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               cic.I)
                                            cic.I
                                            matita_arithmetics_nat.nat)
                                         x
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.pred p))
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))) =>
                                matita_arithmetics_primes.divides
                                  p
                                  (matita_arithmetics_nat.minus
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_exp.exp a x)
                                        (matita_arithmetics_bigops.bigop
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.pred p))
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_basics_bool.true)
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s cic.z))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)
                                           matita_arithmetics_nat.times
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_arithmetics_nat.plus
                                              i
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))))
                                     (matita_arithmetics_bigops.bigop
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.pred p))
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        (i:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_basics_bool.true)
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s cic.z))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        matita_arithmetics_nat.times
                                        (i:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_arithmetics_nat.plus
                                           i
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))))))
                            (matita_basics_logic.eq_ind_r
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_bigops.bigop
                                  (matita_arithmetics_nat.minus
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.pred p))
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                                  (i:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   matita_basics_bool.true)
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s cic.z))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                  matita_arithmetics_nat.times
                                  (i:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   matita_arithmetics_nat.times
                                     a
                                     (matita_arithmetics_nat.plus
                                        i
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))))
                               (cic.cast
                                  (cic.type cic.z)
                                  (cic.type cic.z)
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      cic.prod
                                        cic.prop
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        cic.I
                                        (matita_basics_logic.eq
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x
                                           (matita_arithmetics_bigops.bigop
                                              (matita_arithmetics_nat.minus
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.pred p))
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))
                                              (i:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               matita_basics_bool.true)
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type (cic.s cic.z))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)
                                              matita_arithmetics_nat.times
                                              (i:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               matita_arithmetics_nat.times
                                                 a
                                                 (matita_arithmetics_nat.plus
                                                    i
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)))))
                                        (__:(cic.Term
                                               cic.prop
                                               (matita_basics_logic.eq
                                                  (cic.cast
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s
                                                           (cic.s (cic.s cic.z))))
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type (cic.s cic.z))
                                                        cic.I)
                                                     (cic.univ
                                                        (cic.type
                                                           (cic.s (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s
                                                                 (cic.s cic.z))))
                                                        cic.I)
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  x
                                                  (matita_arithmetics_bigops.bigop
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.pred
                                                              p))
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     (i:(cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat) =>
                                                      matita_basics_bool.true)
                                                     (cic.cast
                                                        (cic.type (cic.s cic.z))
                                                        (cic.type (cic.s cic.z))
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I)
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I)
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     matita_arithmetics_nat.times
                                                     (i:(cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat) =>
                                                      matita_arithmetics_nat.times
                                                        a
                                                        (matita_arithmetics_nat.plus
                                                           i
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))))) =>
                                         cic.univ cic.prop (cic.type cic.z) cic.I)))
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      cic.prod
                                        cic.prop
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        cic.I
                                        (matita_basics_logic.eq
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x
                                           (matita_arithmetics_bigops.bigop
                                              (matita_arithmetics_nat.minus
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.pred p))
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))
                                              (i:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               matita_basics_bool.true)
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type (cic.s cic.z))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)
                                              matita_arithmetics_nat.times
                                              (i:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               matita_arithmetics_nat.times
                                                 a
                                                 (matita_arithmetics_nat.plus
                                                    i
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)))))
                                        (__:(cic.Term
                                               cic.prop
                                               (matita_basics_logic.eq
                                                  (cic.cast
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s
                                                           (cic.s (cic.s cic.z))))
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type (cic.s cic.z))
                                                        cic.I)
                                                     (cic.univ
                                                        (cic.type
                                                           (cic.s (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s
                                                                 (cic.s cic.z))))
                                                        cic.I)
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  x
                                                  (matita_arithmetics_bigops.bigop
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.pred
                                                              p))
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     (i:(cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat) =>
                                                      matita_basics_bool.true)
                                                     (cic.cast
                                                        (cic.type (cic.s cic.z))
                                                        (cic.type (cic.s cic.z))
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I)
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I)
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     matita_arithmetics_nat.times
                                                     (i:(cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat) =>
                                                      matita_arithmetics_nat.times
                                                        a
                                                        (matita_arithmetics_nat.plus
                                                           i
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))))) =>
                                         cic.univ cic.prop (cic.type cic.z) cic.I)))
                                  cic.I
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   __:(cic.Term
                                         cic.prop
                                         (matita_basics_logic.eq
                                            (cic.cast
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s (cic.s cic.z))))
                                               (cic.univ
                                                  (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I)
                                               (cic.univ
                                                  (cic.type (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s (cic.s cic.z))))
                                                  cic.I)
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            x
                                            (matita_arithmetics_bigops.bigop
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.pred p))
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (i:(cic.Term
                                                     (cic.type cic.z)
                                                     matita_arithmetics_nat.nat) =>
                                                matita_basics_bool.true)
                                               (cic.cast
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type (cic.s cic.z))
                                                  (cic.univ
                                                     (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I)
                                                  (cic.univ
                                                     (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I)
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.times
                                               (i:(cic.Term
                                                     (cic.type cic.z)
                                                     matita_arithmetics_nat.nat) =>
                                                matita_arithmetics_nat.times
                                                  a
                                                  (matita_arithmetics_nat.plus
                                                     i
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))))) =>
                                   matita_arithmetics_primes.divides
                                     p
                                     (matita_arithmetics_nat.minus
                                        x
                                        (matita_arithmetics_bigops.bigop
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.pred p))
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_basics_bool.true)
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s cic.z))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)
                                           matita_arithmetics_nat.times
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            matita_arithmetics_nat.plus
                                              i
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))))))
                               (matita_arithmetics_congruence.congruent_to_divides
                                  (matita_arithmetics_bigops.bigop
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.pred p))
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_basics_bool.true)
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s cic.z))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                     matita_arithmetics_nat.times
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_arithmetics_nat.times
                                        a
                                        (matita_arithmetics_nat.plus
                                           i
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))))
                                  (matita_arithmetics_bigops.bigop
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.pred p))
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_basics_bool.true)
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s cic.z))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                     matita_arithmetics_nat.times
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_arithmetics_nat.plus
                                        i
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)))
                                  p
                                  (matita_arithmetics_primes.prime_to_lt_O p primep)
                                  (matita_arithmetics_congruence.transitive_congruent
                                     p
                                     (matita_arithmetics_bigops.bigop
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.pred p))
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        (i:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_basics_bool.true)
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s cic.z))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        matita_arithmetics_nat.times
                                        (i:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_arithmetics_nat.times
                                           a
                                           (matita_arithmetics_nat.plus
                                              i
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))))
                                     (matita_arithmetics_bigops.bigop
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.pred p))
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        (i:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         (i0:(cic.Term
                                                (cic.type cic.z)
                                                matita_arithmetics_nat.nat) =>
                                          matita_basics_bool.true)
                                           (matita_arithmetics_nat.plus
                                              i
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)))
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s cic.z))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        matita_arithmetics_nat.times
                                        (i:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         (i0:(cic.Term
                                                (cic.type cic.z)
                                                matita_arithmetics_nat.nat) =>
                                          matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.times a i0)
                                            p)
                                           (matita_arithmetics_nat.plus
                                              i
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))))
                                     (matita_arithmetics_bigops.bigop
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.pred p))
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        (i:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_basics_bool.true)
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s cic.z))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        matita_arithmetics_nat.times
                                        (i:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_arithmetics_nat.plus
                                           i
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)))
                                     (matita_arithmetics_fermat_little_theorem.congruent_pi
                                        (m:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         matita_arithmetics_nat.times
                                           a
                                           (matita_arithmetics_nat.plus
                                              m
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)))
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.pred p))
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        p
                                        (matita_arithmetics_primes.prime_to_lt_O p primep))
                                     (matita_basics_logic.eq_ind
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_bigops.bigop
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.pred p))
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            (i0:(cic.Term
                                                   (cic.type cic.z)
                                                   matita_arithmetics_nat.nat) =>
                                             matita_basics_bool.true)
                                              (matita_arithmetics_nat.plus
                                                 i
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O)))
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s cic.z))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)
                                           matita_arithmetics_nat.times
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            (i0:(cic.Term
                                                   (cic.type cic.z)
                                                   matita_arithmetics_nat.nat) =>
                                             i0)
                                              (matita_arithmetics_nat.plus
                                                 i
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))))
                                        (cic.cast
                                           (cic.type cic.z)
                                           (cic.type cic.z)
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (x_1:(cic.Term
                                                      (cic.type cic.z)
                                                      matita_arithmetics_nat.nat) =>
                                               cic.prod
                                                 cic.prop
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 cic.I
                                                 (matita_basics_logic.eq
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type
                                                             (cic.s (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_bigops.bigop
                                                       (matita_arithmetics_nat.minus
                                                          (matita_arithmetics_nat.S
                                                             (matita_arithmetics_nat.pred
                                                                p))
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O))
                                                       (i:(cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat) =>
                                                        (i0:(cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               matita_arithmetics_nat.nat) =>
                                                         matita_basics_bool.true)
                                                          (matita_arithmetics_nat.plus
                                                             i
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O)))
                                                       (cic.cast
                                                          (cic.type (cic.s cic.z))
                                                          (cic.type (cic.s cic.z))
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O)
                                                       matita_arithmetics_nat.times
                                                       (i:(cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat) =>
                                                        (i0:(cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               matita_arithmetics_nat.nat) =>
                                                         i0)
                                                          (matita_arithmetics_nat.plus
                                                             i
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O))))
                                                    x_1)
                                                 (_x_2:(cic.Term
                                                          cic.prop
                                                          (matita_basics_logic.eq
                                                             (cic.cast
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                (cic.univ
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                   cic.I)
                                                                cic.I
                                                                matita_arithmetics_nat.nat)
                                                             (matita_arithmetics_bigops.bigop
                                                                (matita_arithmetics_nat.minus
                                                                   (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                   (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))
                                                                (i:(cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                 (i0:(
                                                                  cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                  matita_basics_bool.true)
                                                                   (matita_arithmetics_nat.plus
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                (cic.cast
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                   (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat)
                                                                (matita_arithmetics_nat.S
                                                                   matita_arithmetics_nat.O)
                                                                matita_arithmetics_nat.times
                                                                (i:(cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                 (i0:(
                                                                  cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                  i0)
                                                                   (matita_arithmetics_nat.plus
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))))
                                                             x_1)) =>
                                                  cic.univ
                                                    cic.prop
                                                    (cic.type cic.z)
                                                    cic.I)))
                                           (cic.prod
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              cic.I
                                              matita_arithmetics_nat.nat
                                              (x_1:(cic.Term
                                                      (cic.type cic.z)
                                                      matita_arithmetics_nat.nat) =>
                                               cic.prod
                                                 cic.prop
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 cic.I
                                                 (matita_basics_logic.eq
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type
                                                             (cic.s (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_bigops.bigop
                                                       (matita_arithmetics_nat.minus
                                                          (matita_arithmetics_nat.S
                                                             (matita_arithmetics_nat.pred
                                                                p))
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O))
                                                       (i:(cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat) =>
                                                        (i0:(cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               matita_arithmetics_nat.nat) =>
                                                         matita_basics_bool.true)
                                                          (matita_arithmetics_nat.plus
                                                             i
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O)))
                                                       (cic.cast
                                                          (cic.type (cic.s cic.z))
                                                          (cic.type (cic.s cic.z))
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O)
                                                       matita_arithmetics_nat.times
                                                       (i:(cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat) =>
                                                        (i0:(cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               matita_arithmetics_nat.nat) =>
                                                         i0)
                                                          (matita_arithmetics_nat.plus
                                                             i
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O))))
                                                    x_1)
                                                 (_x_2:(cic.Term
                                                          cic.prop
                                                          (matita_basics_logic.eq
                                                             (cic.cast
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                (cic.univ
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                   (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                   cic.I)
                                                                cic.I
                                                                matita_arithmetics_nat.nat)
                                                             (matita_arithmetics_bigops.bigop
                                                                (matita_arithmetics_nat.minus
                                                                   (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                   (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))
                                                                (i:(cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                 (i0:(
                                                                  cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                  matita_basics_bool.true)
                                                                   (matita_arithmetics_nat.plus
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                (cic.cast
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                   (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat)
                                                                (matita_arithmetics_nat.S
                                                                   matita_arithmetics_nat.O)
                                                                matita_arithmetics_nat.times
                                                                (i:(cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                 (i0:(
                                                                  cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                  i0)
                                                                   (matita_arithmetics_nat.plus
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))))
                                                             x_1)) =>
                                                  cic.univ
                                                    cic.prop
                                                    (cic.type cic.z)
                                                    cic.I)))
                                           cic.I
                                           (x_1:(cic.Term
                                                   (cic.type cic.z)
                                                   matita_arithmetics_nat.nat) =>
                                            _x_2:(cic.Term
                                                    cic.prop
                                                    (matita_basics_logic.eq
                                                       (cic.cast
                                                          (cic.type (cic.s cic.z))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          (cic.univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             cic.I)
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       (matita_arithmetics_bigops.bigop
                                                          (matita_arithmetics_nat.minus
                                                             (matita_arithmetics_nat.S
                                                                (matita_arithmetics_nat.pred
                                                                   p))
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O))
                                                          (i:(cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat) =>
                                                           (i0:(cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  matita_arithmetics_nat.nat) =>
                                                            matita_basics_bool.true)
                                                             (matita_arithmetics_nat.plus
                                                                i
                                                                (matita_arithmetics_nat.S
                                                                   matita_arithmetics_nat.O)))
                                                          (cic.cast
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             cic.I
                                                             matita_arithmetics_nat.nat)
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O)
                                                          matita_arithmetics_nat.times
                                                          (i:(cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat) =>
                                                           (i0:(cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  matita_arithmetics_nat.nat) =>
                                                            i0)
                                                             (matita_arithmetics_nat.plus
                                                                i
                                                                (matita_arithmetics_nat.S
                                                                   matita_arithmetics_nat.O))))
                                                       x_1)) =>
                                            matita_arithmetics_congruence.congruent
                                              x_1
                                              (matita_arithmetics_bigops.bigop
                                                 (matita_arithmetics_nat.minus
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.pred
                                                          p))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 (i:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  matita_basics_bool.true)
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type (cic.s cic.z))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O)
                                                 matita_arithmetics_nat.times
                                                 (i:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  matita_arithmetics_nat.plus
                                                    i
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)))
                                              p))
                                        (matita_arithmetics_congruence.congruent_n_n
                                           (matita_arithmetics_bigops.bigop
                                              (matita_arithmetics_nat.minus
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.pred p))
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))
                                              (i:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               (i0:(cic.Term
                                                      (cic.type cic.z)
                                                      matita_arithmetics_nat.nat) =>
                                                matita_basics_bool.true)
                                                 (matita_arithmetics_nat.plus
                                                    i
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)))
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type (cic.s cic.z))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)
                                              matita_arithmetics_nat.times
                                              (i:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               (i0:(cic.Term
                                                      (cic.type cic.z)
                                                      matita_arithmetics_nat.nat) =>
                                                i0)
                                                 (matita_arithmetics_nat.plus
                                                    i
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))
                                           p)
                                        (matita_arithmetics_bigops.bigop
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.pred p))
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            (i0:(cic.Term
                                                   (cic.type cic.z)
                                                   matita_arithmetics_nat.nat) =>
                                             matita_basics_bool.true)
                                              (matita_arithmetics_nat.plus
                                                 i
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O)))
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s cic.z))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)
                                           matita_arithmetics_nat.times
                                           (i:(cic.Term
                                                 (cic.type cic.z)
                                                 matita_arithmetics_nat.nat) =>
                                            (i0:(cic.Term
                                                   (cic.type cic.z)
                                                   matita_arithmetics_nat.nat) =>
                                             matita_arithmetics_div_and_mod.mod
                                               (matita_arithmetics_nat.times a i0)
                                               p)
                                              (matita_arithmetics_nat.plus
                                                 i
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))))
                                        (matita_basics_logic.eq_ind_r
                                           (cic.cast
                                              (cic.type (cic.s cic.z))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              (cic.univ
                                                 (cic.type cic.z)
                                                 (cic.type (cic.s cic.z))
                                                 cic.I)
                                              (cic.univ
                                                 (cic.type (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 cic.I)
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_bigops.bigop
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.pred p))
                                              (i:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               matita_basics_bool.andb
                                                 (matita_arithmetics_nat.leb
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)
                                                    i)
                                                 matita_basics_bool.true)
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type (cic.s cic.z))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)
                                              (matita_arithmetics_bigops.op
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type (cic.s cic.z))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O)
                                                 matita_arithmetics_sigma_pi.timesA)
                                              (i:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               i))
                                           (cic.cast
                                              (cic.type cic.z)
                                              (cic.type cic.z)
                                              (cic.prod
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 cic.I
                                                 matita_arithmetics_nat.nat
                                                 (x:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  cic.prod
                                                    cic.prop
                                                    (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    cic.I
                                                    (matita_basics_logic.eq
                                                       (cic.cast
                                                          (cic.type (cic.s cic.z))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          (cic.univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             cic.I)
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       x
                                                       (matita_arithmetics_bigops.bigop
                                                          (matita_arithmetics_nat.S
                                                             (matita_arithmetics_nat.pred
                                                                p))
                                                          (i:(cic.Term
                                                                (cic.type cic.z)
                                                                matita_arithmetics_nat.nat) =>
                                                           matita_basics_bool.andb
                                                             (matita_arithmetics_nat.leb
                                                                (matita_arithmetics_nat.S
                                                                   matita_arithmetics_nat.O)
                                                                i)
                                                             matita_basics_bool.true)
                                                          (cic.cast
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             cic.I
                                                             matita_arithmetics_nat.nat)
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O)
                                                          (matita_arithmetics_bigops.op
                                                             (cic.cast
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                cic.I
                                                                matita_arithmetics_nat.nat)
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O)
                                                             matita_arithmetics_sigma_pi.timesA)
                                                          (i:(cic.Term
                                                                (cic.type cic.z)
                                                                matita_arithmetics_nat.nat) =>
                                                           i)))
                                                    (__:(cic.Term
                                                           cic.prop
                                                           (matita_basics_logic.eq
                                                              (cic.cast
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    cic.z))
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                 (cic.univ
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                 (cic.univ
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              x
                                                              (matita_arithmetics_bigops.bigop
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                    matita_arithmetics_nat.pred
                                                                    p))
                                                                 (i:(
                                                                  cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                  matita_basics_bool.andb
                                                                    (
                                                                    matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                 (cic.cast
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (
                                                                    cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (
                                                                    cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                 (matita_arithmetics_bigops.op
                                                                    (
                                                                    cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    matita_arithmetics_sigma_pi.timesA)
                                                                 (i:(
                                                                  cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                  i)))) =>
                                                     cic.univ
                                                       cic.prop
                                                       (cic.type cic.z)
                                                       cic.I)))
                                              (cic.prod
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 cic.I
                                                 matita_arithmetics_nat.nat
                                                 (x:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  cic.prod
                                                    cic.prop
                                                    (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    cic.I
                                                    (matita_basics_logic.eq
                                                       (cic.cast
                                                          (cic.type (cic.s cic.z))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          (cic.univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             cic.I)
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       x
                                                       (matita_arithmetics_bigops.bigop
                                                          (matita_arithmetics_nat.S
                                                             (matita_arithmetics_nat.pred
                                                                p))
                                                          (i:(cic.Term
                                                                (cic.type cic.z)
                                                                matita_arithmetics_nat.nat) =>
                                                           matita_basics_bool.andb
                                                             (matita_arithmetics_nat.leb
                                                                (matita_arithmetics_nat.S
                                                                   matita_arithmetics_nat.O)
                                                                i)
                                                             matita_basics_bool.true)
                                                          (cic.cast
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             cic.I
                                                             matita_arithmetics_nat.nat)
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O)
                                                          (matita_arithmetics_bigops.op
                                                             (cic.cast
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                cic.I
                                                                matita_arithmetics_nat.nat)
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O)
                                                             matita_arithmetics_sigma_pi.timesA)
                                                          (i:(cic.Term
                                                                (cic.type cic.z)
                                                                matita_arithmetics_nat.nat) =>
                                                           i)))
                                                    (__:(cic.Term
                                                           cic.prop
                                                           (matita_basics_logic.eq
                                                              (cic.cast
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    cic.z))
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                 (cic.univ
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                 (cic.univ
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              x
                                                              (matita_arithmetics_bigops.bigop
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                    matita_arithmetics_nat.pred
                                                                    p))
                                                                 (i:(
                                                                  cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                  matita_basics_bool.andb
                                                                    (
                                                                    matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                 (cic.cast
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (
                                                                    cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (
                                                                    cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                 (matita_arithmetics_bigops.op
                                                                    (
                                                                    cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    matita_arithmetics_sigma_pi.timesA)
                                                                 (i:(
                                                                  cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                  i)))) =>
                                                     cic.univ
                                                       cic.prop
                                                       (cic.type cic.z)
                                                       cic.I)))
                                              cic.I
                                              (x:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               __:(cic.Term
                                                     cic.prop
                                                     (matita_basics_logic.eq
                                                        (cic.cast
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))))
                                                           (cic.univ
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              cic.I)
                                                           (cic.univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                    cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                              cic.I)
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        x
                                                        (matita_arithmetics_bigops.bigop
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.pred
                                                                 p))
                                                           (i:(cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat) =>
                                                            matita_basics_bool.andb
                                                              (matita_arithmetics_nat.leb
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                 i)
                                                              matita_basics_bool.true)
                                                           (cic.cast
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    cic.z))
                                                                 cic.I)
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    cic.z))
                                                                 cic.I)
                                                              cic.I
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)
                                                           (matita_arithmetics_bigops.op
                                                              (cic.cast
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    cic.z))
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    cic.z))
                                                                 (cic.univ
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                 (cic.univ
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O)
                                                              matita_arithmetics_sigma_pi.timesA)
                                                           (i:(cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat) =>
                                                            i)))) =>
                                               matita_basics_logic.eq
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type
                                                          (cic.s (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 x
                                                 (matita_arithmetics_bigops.bigop
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.pred
                                                             p))
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    (i:(cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat) =>
                                                     (i0:(cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat) =>
                                                      matita_basics_bool.true)
                                                       (matita_arithmetics_nat.plus
                                                          i
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O)))
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type (cic.s cic.z))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)
                                                    matita_arithmetics_nat.times
                                                    (i:(cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat) =>
                                                     (i0:(cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat) =>
                                                      matita_arithmetics_div_and_mod.mod
                                                        (matita_arithmetics_nat.times
                                                           a
                                                           i0)
                                                        p)
                                                       (matita_arithmetics_nat.plus
                                                          i
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O))))))
                                           (matita_basics_logic.eq_ind_r
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type
                                                    (cic.s (cic.s (cic.s cic.z))))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_bigops.bigop
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.pred p))
                                                 (i:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  matita_basics_bool.andb
                                                    (matita_arithmetics_nat.leb
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O)
                                                       i)
                                                    matita_basics_bool.true)
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type (cic.s cic.z))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O)
                                                 (matita_arithmetics_bigops.op
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type (cic.s cic.z))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)
                                                    matita_arithmetics_sigma_pi.timesA)
                                                 (i:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  matita_arithmetics_div_and_mod.mod
                                                    (matita_arithmetics_nat.times a i)
                                                    p))
                                              (cic.cast
                                                 (cic.type cic.z)
                                                 (cic.type cic.z)
                                                 (cic.prod
                                                    (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    cic.I
                                                    matita_arithmetics_nat.nat
                                                    (x:(cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat) =>
                                                     cic.prod
                                                       cic.prop
                                                       (cic.type cic.z)
                                                       (cic.type cic.z)
                                                       cic.I
                                                       (matita_basics_logic.eq
                                                          (cic.cast
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             (cic.univ
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                cic.I)
                                                             cic.I
                                                             matita_arithmetics_nat.nat)
                                                          x
                                                          (matita_arithmetics_bigops.bigop
                                                             (matita_arithmetics_nat.S
                                                                (matita_arithmetics_nat.pred
                                                                   p))
                                                             (i:(cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat) =>
                                                              matita_basics_bool.andb
                                                                (matita_arithmetics_nat.leb
                                                                   (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                   i)
                                                                matita_basics_bool.true)
                                                             (cic.cast
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                cic.I
                                                                matita_arithmetics_nat.nat)
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O)
                                                             (matita_arithmetics_bigops.op
                                                                (cic.cast
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                   (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat)
                                                                (matita_arithmetics_nat.S
                                                                   matita_arithmetics_nat.O)
                                                                matita_arithmetics_sigma_pi.timesA)
                                                             (i:(cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat) =>
                                                              matita_arithmetics_div_and_mod.mod
                                                                (matita_arithmetics_nat.times
                                                                   a
                                                                   i)
                                                                p)))
                                                       (__:(cic.Term
                                                              cic.prop
                                                              (matita_basics_logic.eq
                                                                 (cic.cast
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (
                                                                    cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                 x
                                                                 (matita_arithmetics_bigops.bigop
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (
                                                                    i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    (
                                                                    cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (
                                                                    matita_arithmetics_bigops.op
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    matita_arithmetics_sigma_pi.timesA)
                                                                    (
                                                                    i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)))) =>
                                                        cic.univ
                                                          cic.prop
                                                          (cic.type cic.z)
                                                          cic.I)))
                                                 (cic.prod
                                                    (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    cic.I
                                                    matita_arithmetics_nat.nat
                                                    (x:(cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat) =>
                                                     cic.prod
                                                       cic.prop
                                                       (cic.type cic.z)
                                                       (cic.type cic.z)
                                                       cic.I
                                                       (matita_basics_logic.eq
                                                          (cic.cast
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             (cic.univ
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                (cic.type
                                                                   (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                cic.I)
                                                             cic.I
                                                             matita_arithmetics_nat.nat)
                                                          x
                                                          (matita_arithmetics_bigops.bigop
                                                             (matita_arithmetics_nat.S
                                                                (matita_arithmetics_nat.pred
                                                                   p))
                                                             (i:(cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat) =>
                                                              matita_basics_bool.andb
                                                                (matita_arithmetics_nat.leb
                                                                   (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                   i)
                                                                matita_basics_bool.true)
                                                             (cic.cast
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                cic.I
                                                                matita_arithmetics_nat.nat)
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O)
                                                             (matita_arithmetics_bigops.op
                                                                (cic.cast
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                   (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat)
                                                                (matita_arithmetics_nat.S
                                                                   matita_arithmetics_nat.O)
                                                                matita_arithmetics_sigma_pi.timesA)
                                                             (i:(cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat) =>
                                                              matita_arithmetics_div_and_mod.mod
                                                                (matita_arithmetics_nat.times
                                                                   a
                                                                   i)
                                                                p)))
                                                       (__:(cic.Term
                                                              cic.prop
                                                              (matita_basics_logic.eq
                                                                 (cic.cast
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (
                                                                    cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                 x
                                                                 (matita_arithmetics_bigops.bigop
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (
                                                                    i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    (
                                                                    cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (
                                                                    matita_arithmetics_bigops.op
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    matita_arithmetics_sigma_pi.timesA)
                                                                    (
                                                                    i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)))) =>
                                                        cic.univ
                                                          cic.prop
                                                          (cic.type cic.z)
                                                          cic.I)))
                                                 cic.I
                                                 (x:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  __:(cic.Term
                                                        cic.prop
                                                        (matita_basics_logic.eq
                                                           (cic.cast
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                    cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    cic.z))
                                                                 cic.I)
                                                              (cic.univ
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                 cic.I)
                                                              cic.I
                                                              matita_arithmetics_nat.nat)
                                                           x
                                                           (matita_arithmetics_bigops.bigop
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.pred
                                                                    p))
                                                              (i:(cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                               matita_basics_bool.andb
                                                                 (matita_arithmetics_nat.leb
                                                                    (
                                                                    matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                 matita_basics_bool.true)
                                                              (cic.cast
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    cic.z))
                                                                 (cic.type
                                                                    (
                                                                    cic.s
                                                                    cic.z))
                                                                 (cic.univ
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                 (cic.univ
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O)
                                                              (matita_arithmetics_bigops.op
                                                                 (cic.cast
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (
                                                                    cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (
                                                                    cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (
                                                                    cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                 matita_arithmetics_sigma_pi.timesA)
                                                              (i:(cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                               matita_arithmetics_div_and_mod.mod
                                                                 (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                 p)))) =>
                                                  matita_basics_logic.eq
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type
                                                             (cic.s (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s
                                                                   (cic.s cic.z))))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_bigops.bigop
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.pred
                                                             p))
                                                       (i:(cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat) =>
                                                        matita_basics_bool.andb
                                                          (matita_arithmetics_nat.leb
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O)
                                                             i)
                                                          matita_basics_bool.true)
                                                       (cic.cast
                                                          (cic.type (cic.s cic.z))
                                                          (cic.type (cic.s cic.z))
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O)
                                                       (matita_arithmetics_bigops.op
                                                          (cic.cast
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             cic.I
                                                             matita_arithmetics_nat.nat)
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O)
                                                          matita_arithmetics_sigma_pi.timesA)
                                                       (i:(cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat) =>
                                                        i))
                                                    x))
                                              (matita_basics_logic.sym_eq
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type
                                                       (cic.s (cic.s (cic.s cic.z))))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type
                                                          (cic.s (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s (cic.s cic.z))))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_bigops.bigop
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.pred
                                                          p))
                                                    (i:(cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat) =>
                                                     matita_basics_bool.andb
                                                       (matita_arithmetics_nat.leb
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O)
                                                          i)
                                                       matita_basics_bool.true)
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type (cic.s cic.z))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)
                                                    (matita_arithmetics_bigops.op
                                                       (cic.cast
                                                          (cic.type (cic.s cic.z))
                                                          (cic.type (cic.s cic.z))
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O)
                                                       matita_arithmetics_sigma_pi.timesA)
                                                    (i:(cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat) =>
                                                     matita_arithmetics_div_and_mod.mod
                                                       (matita_arithmetics_nat.times
                                                          a
                                                          i)
                                                       p))
                                                 (matita_arithmetics_bigops.bigop
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.pred
                                                          p))
                                                    (i:(cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat) =>
                                                     matita_basics_bool.andb
                                                       (matita_arithmetics_nat.leb
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O)
                                                          i)
                                                       matita_basics_bool.true)
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type (cic.s cic.z))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)
                                                    (matita_arithmetics_bigops.op
                                                       (cic.cast
                                                          (cic.type (cic.s cic.z))
                                                          (cic.type (cic.s cic.z))
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O)
                                                       matita_arithmetics_sigma_pi.timesA)
                                                    (i:(cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat) =>
                                                     i))
                                                 (matita_arithmetics_bigops.bigop_iso
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.pred
                                                          p))
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.pred
                                                          p))
                                                    (__:(cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat) =>
                                                     matita_basics_bool.andb
                                                       (matita_arithmetics_nat.leb
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O)
                                                          __)
                                                       matita_basics_bool.true)
                                                    (__:(cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat) =>
                                                     matita_basics_bool.andb
                                                       (matita_arithmetics_nat.leb
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O)
                                                          __)
                                                       matita_basics_bool.true)
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type (cic.s cic.z))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)
                                                    matita_arithmetics_sigma_pi.timesAC
                                                    (__:(cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat) =>
                                                     matita_arithmetics_div_and_mod.mod
                                                       (matita_arithmetics_nat.times
                                                          a
                                                          __)
                                                       p)
                                                    (__:(cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat) =>
                                                     __)
                                                    (matita_basics_logic.ex_intro
                                                       (cic.cast
                                                          (cic.type (cic.s cic.z))
                                                          (cic.type (cic.s cic.z))
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          (cic.univ
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             cic.I)
                                                          cic.I
                                                          (cic.prod
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             cic.I
                                                             matita_arithmetics_nat.nat
                                                             (__:(cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                              matita_arithmetics_nat.nat)))
                                                       (cic.cast
                                                          (cic.type cic.z)
                                                          (cic.type cic.z)
                                                          (cic.prod
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             cic.I
                                                             (cic.prod
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                cic.I
                                                                matita_arithmetics_nat.nat
                                                                (__:(
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat) =>
                                                                 matita_arithmetics_nat.nat))
                                                             (h:(cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))) =>
                                                              cic.univ
                                                                cic.prop
                                                                (cic.type cic.z)
                                                                cic.I))
                                                          (cic.prod
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             cic.I
                                                             (cic.prod
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                cic.I
                                                                matita_arithmetics_nat.nat
                                                                (__:(
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat) =>
                                                                 matita_arithmetics_nat.nat))
                                                             (__:(cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))) =>
                                                              cic.univ
                                                                cic.prop
                                                                (cic.type cic.z)
                                                                cic.I))
                                                          cic.I
                                                          (h:(cic.Term
                                                                (cic.type cic.z)
                                                                (cic.prod
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat
                                                                   (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))) =>
                                                           matita_basics_logic.ex
                                                             (cic.cast
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                (cic.univ
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                   cic.I)
                                                                cic.I
                                                                (cic.prod
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat
                                                                   (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat)))
                                                             (cic.cast
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                (cic.prod
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I
                                                                   (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))
                                                                   (k:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                (cic.prod
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I
                                                                   (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))
                                                                   (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                cic.I
                                                                (k:(cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))) =>
                                                                 matita_basics_logic.And
                                                                   (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.And
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_bigops.upto
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_bigops.upto
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))))) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_arithmetics_bigops.filter
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    (__1:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_arithmetics_bigops.filter
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                    i)
                                                                    matita_basics_bool.true)) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.enum
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                    i)
                                                                    (matita_arithmetics_bigops.enum
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    _0)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                    (h
                                                                    i)))))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_bigops.sub_hk
                                                                    h
                                                                    k
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    _0)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))))))
                                                                   (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_bigops.sub_hk
                                                                    k
                                                                    h
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    _0)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))))))))
                                                       (i:(cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat) =>
                                                        matita_arithmetics_div_and_mod.mod
                                                          (matita_arithmetics_nat.times
                                                             a
                                                             i)
                                                          p)
                                                       (matita_basics_logic.ex_intro
                                                          (cic.cast
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.type
                                                                (cic.s cic.z))
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             (cic.univ
                                                                (cic.type cic.z)
                                                                (cic.type
                                                                   (cic.s cic.z))
                                                                cic.I)
                                                             cic.I
                                                             (cic.prod
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                cic.I
                                                                matita_arithmetics_nat.nat
                                                                (__:(
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat) =>
                                                                 matita_arithmetics_nat.nat)))
                                                          (cic.cast
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             (cic.prod
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                cic.I
                                                                (cic.prod
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat
                                                                   (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))
                                                                (k:(cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))) =>
                                                                 cic.univ
                                                                   cic.prop
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I))
                                                             (cic.prod
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                cic.I
                                                                (cic.prod
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat
                                                                   (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))
                                                                (__:(
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))) =>
                                                                 cic.univ
                                                                   cic.prop
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I))
                                                             cic.I
                                                             (k:(cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_nat.nat))) =>
                                                              matita_basics_logic.And
                                                                (cic.cast
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   cic.I
                                                                   (matita_basics_logic.And
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true)
                                                                    (__1:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true)) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_bigops.sub_hk
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    k
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    _0)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))))))
                                                                (cic.cast
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   cic.I
                                                                   (matita_arithmetics_bigops.sub_hk
                                                                    k
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    _0)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))))))
                                                          (matita_arithmetics_permutation.invert_permut
                                                             (matita_arithmetics_nat.pred
                                                                p)
                                                             (i:(cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat) =>
                                                              matita_arithmetics_div_and_mod.mod
                                                                (matita_arithmetics_nat.times
                                                                   a
                                                                   i)
                                                                p))
                                                          (matita_basics_logic.conj
                                                             (cic.cast
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                (cic.univ
                                                                   cic.prop
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I)
                                                                (cic.univ
                                                                   cic.prop
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I)
                                                                cic.I
                                                                (matita_basics_logic.And
                                                                   (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true)
                                                                    (__1:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true)) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))))))
                                                                   (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_bigops.sub_hk
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    _0)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))))))
                                                             (cic.cast
                                                                (cic.type cic.z)
                                                                (cic.type cic.z)
                                                                (cic.univ
                                                                   cic.prop
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I)
                                                                (cic.univ
                                                                   cic.prop
                                                                   (cic.type
                                                                    cic.z)
                                                                   cic.I)
                                                                cic.I
                                                                (matita_arithmetics_bigops.sub_hk
                                                                   (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                   (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                   (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                   (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    _0)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                   (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))))
                                                             (matita_basics_logic.conj
                                                                (cic.cast
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   cic.I
                                                                   (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true)
                                                                    (__1:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true)) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))))))
                                                                (cic.cast
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   cic.I
                                                                   (matita_arithmetics_bigops.sub_hk
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                    (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    _0)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))))
                                                                (i:(cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                 lti:(
                                                                 cic.Term
                                                                   cic.prop
                                                                   (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))) =>
                                                                 __:(
                                                                 cic.Term
                                                                   cic.prop
                                                                   (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true)) =>
                                                                 matita_basics_logic.refl
                                                                   (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                   (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                (i:(cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                 lti:(
                                                                 cic.Term
                                                                   cic.prop
                                                                   (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))) =>
                                                                 posi:(
                                                                 cic.Term
                                                                   cic.prop
                                                                   (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true)) =>
                                                                 matita_basics_logic.conj
                                                                   (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.And
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true))))
                                                                   (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    i))
                                                                   (matita_basics_logic.conj
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true))
                                                                    (matita_basics_logic.eq_ind_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    p
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    p)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    p)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    p)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    p)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    __:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    p)) =>
                                                                    matita_arithmetics_nat.lt
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    x))
                                                                    (matita_arithmetics_div_and_mod.lt_mod_m_m
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p
                                                                    (matita_arithmetics_primes.prime_to_lt_O
                                                                    p
                                                                    primep))
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (matita_arithmetics_nat.S_pred
                                                                    p
                                                                    (matita_arithmetics_primes.prime_to_lt_O
                                                                    p
                                                                    primep)))
                                                                    (matita_basics_logic.eq_ind_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    matita_basics_bool.true
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_basics_bool.bool
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_basics_bool.bool) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    x
                                                                    matita_basics_bool.true)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    x
                                                                    matita_basics_bool.true)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_basics_bool.bool
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_basics_bool.bool) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    x
                                                                    matita_basics_bool.true)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    x
                                                                    matita_basics_bool.true)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_basics_bool.bool) =>
                                                                    __:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    x
                                                                    matita_basics_bool.true)) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    x
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true))
                                                                    (matita_basics_logic.refl
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    matita_basics_bool.true
                                                                    matita_basics_bool.true))
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    (matita_arithmetics_nat.le_to_leb_true
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (matita_basics_logic.match_Or
                                                                    cic.prop
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.Or
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))))) =>
                                                                    matita_arithmetics_nat.le
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    (auto:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.lt
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))) =>
                                                                    auto)
                                                                    (H:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))) =>
                                                                    matita_basics_logic.False_ind
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_basics_logic.False
                                                                    (_x_66:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    matita_basics_logic.False) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_basics_logic.False
                                                                    (_x_66:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    matita_basics_logic.False) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    cic.I
                                                                    (_x_66:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    matita_basics_logic.False) =>
                                                                    matita_arithmetics_nat.le
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)))
                                                                    (matita_basics_logic.absurd
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_primes.divides
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)))
                                                                    (matita_arithmetics_primes.mod_O_to_divides
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    (matita_arithmetics_primes.prime_to_lt_O
                                                                    p
                                                                    primep)
                                                                    (matita_basics_logic.sym_eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    H))
                                                                    (matita_basics_logic.not_to_not
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_primes.divides
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_primes.divides
                                                                    p
                                                                    a))
                                                                    (Hdiv:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_primes.divides
                                                                    p
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i))) =>
                                                                    matita_basics_logic.match_Or
                                                                    cic.prop
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_primes.divides
                                                                    p
                                                                    a))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_primes.divides
                                                                    p
                                                                    i))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.Or
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_primes.divides
                                                                    p
                                                                    a))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_primes.divides
                                                                    p
                                                                    i)))) =>
                                                                    matita_arithmetics_primes.divides
                                                                    p
                                                                    a)
                                                                    (auto:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_primes.divides
                                                                    p
                                                                    a)) =>
                                                                    auto)
                                                                    (divpi:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_primes.divides
                                                                    p
                                                                    i)) =>
                                                                    matita_basics_logic.False_ind
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_basics_logic.False
                                                                    (_x_66:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    matita_basics_logic.False) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_basics_logic.False
                                                                    (_x_66:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    matita_basics_logic.False) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    cic.I
                                                                    (_x_66:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    matita_basics_logic.False) =>
                                                                    matita_arithmetics_primes.divides
                                                                    p
                                                                    a))
                                                                    (matita_basics_logic.absurd
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))))
                                                                    lti
                                                                    (matita_arithmetics_nat.le_to_not_lt
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    i
                                                                    (matita_basics_logic.eq_ind_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    p
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    p)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    p)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    p)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    p)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    __:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    p)) =>
                                                                    matita_arithmetics_nat.le
                                                                    x
                                                                    i))
                                                                    (matita_arithmetics_primes.divides_to_le
                                                                    p
                                                                    i
                                                                    (matita_arithmetics_nat.leb_true_to_le
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i
                                                                    (matita_basics_bool.andb_true_l
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true
                                                                    posi))
                                                                    divpi)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (matita_arithmetics_nat.S_pred
                                                                    p
                                                                    (matita_arithmetics_primes.prime_to_lt_O
                                                                    p
                                                                    primep))))))
                                                                    (matita_arithmetics_gcd.divides_times_to_divides
                                                                    p
                                                                    a
                                                                    i
                                                                    primep
                                                                    Hdiv))
                                                                    ndiv)))
                                                                    (matita_arithmetics_nat.le_to_or_lt_eq
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (matita_arithmetics_nat.le_O_n
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)))))))
                                                                   (matita_arithmetics_permutation.invert_permut_f
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    i
                                                                    (matita_arithmetics_nat.le_S_S_to_le
                                                                    i
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    lti)
                                                                    (matita_basics_logic.match_And
                                                                    cic.prop
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (i1:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_arithmetics_nat.le
                                                                    i1
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.le
                                                                    i1
                                                                    (matita_arithmetics_nat.pred
                                                                    p))) =>
                                                                    matita_arithmetics_nat.le
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i1)
                                                                    p)
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_permutation.injn
                                                                    (n:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.And
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_arithmetics_nat.le
                                                                    i0
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.le
                                                                    i0
                                                                    (matita_arithmetics_nat.pred
                                                                    p))) =>
                                                                    matita_arithmetics_nat.le
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_permutation.injn
                                                                    (n:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                    (matita_arithmetics_nat.pred
                                                                    p))))) =>
                                                                    matita_arithmetics_permutation.injn
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (auto:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_arithmetics_nat.le
                                                                    i0
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.le
                                                                    i0
                                                                    (matita_arithmetics_nat.pred
                                                                    p))) =>
                                                                    matita_arithmetics_nat.le
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    (matita_arithmetics_nat.pred
                                                                    p))))) =>
                                                                    auto':(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_permutation.injn
                                                                    (n:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                    (matita_arithmetics_nat.pred
                                                                    p))) =>
                                                                    auto')
                                                                    (matita_arithmetics_fermat_little_theorem.permut_mod
                                                                    p
                                                                    a
                                                                    primep
                                                                    ndiv)))))
                                                             (matita_basics_logic.match_And
                                                                cic.prop
                                                                (cic.cast
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   cic.I
                                                                   (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_arithmetics_nat.le
                                                                    i
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.le
                                                                    i
                                                                    (matita_arithmetics_nat.pred
                                                                    p))) =>
                                                                    matita_arithmetics_nat.le
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (n:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                    i)
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))))
                                                                (cic.cast
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                   cic.I
                                                                   (matita_arithmetics_permutation.injn
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (n:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    n)
                                                                    p))
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))
                                                                (__:(
                                                                 cic.Term
                                                                   cic.prop
                                                                   (matita_basics_logic.And
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_arithmetics_nat.le
                                                                    i
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.le
                                                                    i
                                                                    (matita_arithmetics_nat.pred
                                                                    p))) =>
                                                                    matita_arithmetics_nat.le
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (n:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                    i)
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_permutation.injn
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (n:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    n)
                                                                    p))
                                                                    (matita_arithmetics_nat.pred
                                                                    p))))) =>
                                                                 matita_arithmetics_bigops.sub_hk
                                                                   (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                   (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                   (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                   (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    _0)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true))
                                                                   (matita_arithmetics_bigops.mk_range
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (_0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    _0)
                                                                    matita_basics_bool.true)))
                                                                (le_invert_permut:(
                                                                 cic.Term
                                                                   cic.prop
                                                                   (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (i:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_arithmetics_nat.le
                                                                    i
                                                                    (matita_arithmetics_nat.pred
                                                                    p))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.le
                                                                    i
                                                                    (matita_arithmetics_nat.pred
                                                                    p))) =>
                                                                    matita_arithmetics_nat.le
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (n:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                    i)
                                                                    (matita_arithmetics_nat.pred
                                                                    p))))) =>
                                                                 inj_inv_permut:(
                                                                 cic.Term
                                                                   cic.prop
                                                                   (matita_arithmetics_permutation.injn
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (n:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    n)
                                                                    p))
                                                                    (matita_arithmetics_nat.pred
                                                                    p))) =>
                                                                 i:(cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                 lti:(
                                                                 cic.Term
                                                                   cic.prop
                                                                   (matita_arithmetics_nat.lt
                                                                    i
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p)))) =>
                                                                 posi:(
                                                                 cic.Term
                                                                   cic.prop
                                                                   (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    i)
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true)) =>
                                                                 matita_basics_logic.conj
                                                                   (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.And
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true))))
                                                                   (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    p)
                                                                    i))
                                                                   (matita_basics_logic.conj
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (matita_arithmetics_nat.S
                                                                    (matita_arithmetics_nat.pred
                                                                    p))))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true))
                                                                    (matita_arithmetics_nat.le_S_S
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (le_invert_permut
                                                                    i
                                                                    (matita_arithmetics_nat.le_S_S_to_le
                                                                    i
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    lti)))
                                                                    (matita_basics_logic.eq_ind_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    matita_basics_bool.true
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_basics_bool.bool
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_basics_bool.bool) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    x
                                                                    matita_basics_bool.true)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    x
                                                                    matita_basics_bool.true)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_basics_bool.bool
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_basics_bool.bool) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    x
                                                                    matita_basics_bool.true)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    x
                                                                    matita_basics_bool.true)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_basics_bool.bool) =>
                                                                    __:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    x
                                                                    matita_basics_bool.true)) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    x
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true))
                                                                    (matita_basics_logic.refl
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    matita_basics_bool.true
                                                                    matita_basics_bool.true))
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    (matita_arithmetics_nat.le_to_leb_true
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (matita_basics_logic.match_Or
                                                                    cic.prop
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)))
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.Or
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_arithmetics_nat.lt
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)))
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))))) =>
                                                                    matita_arithmetics_nat.le
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    (auto:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_arithmetics_nat.lt
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))) =>
                                                                    auto)
                                                                    (H:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))) =>
                                                                    matita_basics_logic.False_ind
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_basics_logic.False
                                                                    (_x_66:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    matita_basics_logic.False) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_basics_logic.False
                                                                    (_x_66:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    matita_basics_logic.False) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    cic.I
                                                                    (_x_66:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    matita_basics_logic.False) =>
                                                                    matita_arithmetics_nat.le
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)))
                                                                    (matita_basics_logic.eq_ind_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    matita_arithmetics_nat.O)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    matita_arithmetics_nat.O)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    matita_arithmetics_nat.O)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    matita_arithmetics_nat.O)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    __:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    matita_arithmetics_nat.O)) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    p))
                                                                    (__1:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    p))) =>
                                                                    matita_basics_logic.False)))
                                                                    (matita_basics_logic.eq_ind_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    i
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    i)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    i)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    i)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    i)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    __:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    i)) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x)
                                                                    (__1:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x)) =>
                                                                    matita_basics_logic.False)))
                                                                    (eq0i:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    i)) =>
                                                                    matita_basics_logic.eq_ind
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x_1:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x_1)
                                                                    (_x_2:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x_1)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x_1:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x_1)
                                                                    (_x_2:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x_1)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    cic.I
                                                                    (x_1:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    _x_2:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x_1)) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.prop
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    x_1)
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true)
                                                                    (__:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    (matita_basics_bool.andb
                                                                    (matita_arithmetics_nat.leb
                                                                    (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    x_1)
                                                                    matita_basics_bool.true)
                                                                    matita_basics_bool.true)) =>
                                                                    matita_basics_logic.False)))
                                                                    (H0:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_bool.bool)
                                                                    matita_basics_bool.false
                                                                    matita_basics_bool.true)) =>
                                                                    matita_basics_bool.bool_discr
                                                                    matita_basics_bool.false
                                                                    matita_basics_bool.true
                                                                    H0
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_basics_logic.False))
                                                                    i
                                                                    eq0i
                                                                    posi)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    p)
                                                                    (matita_arithmetics_permutation.f_invert_permut
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    i
                                                                    (matita_arithmetics_nat.le_S_S_to_le
                                                                    i
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    lti)
                                                                    (matita_arithmetics_fermat_little_theorem.permut_mod
                                                                    p
                                                                    a
                                                                    primep
                                                                    ndiv)))
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    matita_arithmetics_nat.O)
                                                                    p)
                                                                    (matita_basics_logic.eq_ind
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x_1:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x_1)
                                                                    (_x_2:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x_1)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x_1:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.prod
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x_1)
                                                                    (_x_2:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x_1)) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I)))
                                                                    cic.I
                                                                    (x_1:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    _x_2:(
                                                                    cic.Term
                                                                    cic.prop
                                                                    (matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x_1)) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    x_1
                                                                    p)
                                                                    matita_arithmetics_nat.O))
                                                                    (matita_basics_logic.rewrite_r
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    matita_arithmetics_nat.O))
                                                                    (matita_basics_logic.refl
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_div_and_mod.mod
                                                                    matita_arithmetics_nat.O
                                                                    p)
                                                                    (matita_arithmetics_div_and_mod.mod_O_n
                                                                    p))
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_nat.times_n_O
                                                                    a))
                                                                    (matita_basics_logic.eq_f
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (matita_basics_logic.rewrite_l
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (cic.cast
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    cic.prop
                                                                    (cic.type
                                                                    cic.z)
                                                                    cic.I))
                                                                    (cic.prod
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I))
                                                                    cic.I
                                                                    (x:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_basics_logic.eq
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    x))
                                                                    (matita_basics_logic.refl
                                                                    (cic.cast
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    (cic.univ
                                                                    (cic.type
                                                                    cic.z)
                                                                    (cic.type
                                                                    (cic.s
                                                                    cic.z))
                                                                    cic.I)
                                                                    (cic.univ
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z)))
                                                                    (cic.type
                                                                    (cic.s
                                                                    (cic.s
                                                                    (cic.s
                                                                    cic.z))))
                                                                    cic.I)
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O)
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    H))))
                                                                    (matita_arithmetics_nat.le_to_or_lt_eq
                                                                    matita_arithmetics_nat.O
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (matita_arithmetics_nat.le_O_n
                                                                    (matita_arithmetics_permutation.invert_permut
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    (i0:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)))))))
                                                                   (matita_arithmetics_permutation.f_invert_permut
                                                                    (__:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    __)
                                                                    p)
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    i
                                                                    (matita_arithmetics_nat.le_S_S_to_le
                                                                    i
                                                                    (matita_arithmetics_nat.pred
                                                                    p)
                                                                    lti)
                                                                    (matita_arithmetics_fermat_little_theorem.permut_mod
                                                                    p
                                                                    a
                                                                    primep
                                                                    ndiv)))
                                                                (matita_arithmetics_permutation.permut_invert_permut
                                                                   (n:(
                                                                    cic.Term
                                                                    (cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat) =>
                                                                    matita_arithmetics_div_and_mod.mod
                                                                    (matita_arithmetics_nat.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                   (matita_arithmetics_nat.pred
                                                                    p)
                                                                   (matita_arithmetics_fermat_little_theorem.permut_mod
                                                                    p
                                                                    a
                                                                    primep
                                                                    ndiv))))))))
                                              (matita_arithmetics_bigops.bigop
                                                 (matita_arithmetics_nat.minus
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.pred
                                                          p))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 (i:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  matita_basics_bool.true)
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type (cic.s cic.z))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O)
                                                 (matita_arithmetics_bigops.op
                                                    (cic.cast
                                                       (cic.type (cic.s cic.z))
                                                       (cic.type (cic.s cic.z))
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       (cic.univ
                                                          (cic.type cic.z)
                                                          (cic.type (cic.s cic.z))
                                                          cic.I)
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)
                                                    matita_arithmetics_sigma_pi.timesA)
                                                 (i:(cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat) =>
                                                  matita_arithmetics_div_and_mod.mod
                                                    (matita_arithmetics_nat.times
                                                       a
                                                       (matita_arithmetics_nat.plus
                                                          i
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O)))
                                                    p))
                                              (matita_arithmetics_bigops.bigop_I_gen
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O)
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.pred p))
                                                 (__:(cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat) =>
                                                  matita_basics_bool.true)
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type (cic.s cic.z))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O)
                                                 matita_arithmetics_sigma_pi.timesA
                                                 (__:(cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat) =>
                                                  matita_arithmetics_div_and_mod.mod
                                                    (matita_arithmetics_nat.times
                                                       a
                                                       __)
                                                    p)
                                                 (matita_arithmetics_nat.lt_O_S
                                                    (matita_arithmetics_nat.pred p))))
                                           (matita_arithmetics_bigops.bigop
                                              (matita_arithmetics_nat.minus
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.pred p))
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))
                                              (i:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               matita_basics_bool.true)
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type (cic.s cic.z))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)
                                              (matita_arithmetics_bigops.op
                                                 (cic.cast
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type (cic.s cic.z))
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    (cic.univ
                                                       (cic.type cic.z)
                                                       (cic.type (cic.s cic.z))
                                                       cic.I)
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O)
                                                 matita_arithmetics_sigma_pi.timesA)
                                              (i:(cic.Term
                                                    (cic.type cic.z)
                                                    matita_arithmetics_nat.nat) =>
                                               matita_arithmetics_nat.plus
                                                 i
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O)))
                                           (matita_arithmetics_bigops.bigop_I_gen
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.pred p))
                                              (__:(cic.Term
                                                     (cic.type cic.z)
                                                     matita_arithmetics_nat.nat) =>
                                               matita_basics_bool.true)
                                              (cic.cast
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type (cic.s cic.z))
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 (cic.univ
                                                    (cic.type cic.z)
                                                    (cic.type (cic.s cic.z))
                                                    cic.I)
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)
                                              matita_arithmetics_sigma_pi.timesA
                                              (__:(cic.Term
                                                     (cic.type cic.z)
                                                     matita_arithmetics_nat.nat) =>
                                               __)
                                              (matita_arithmetics_nat.lt_O_S
                                                 (matita_arithmetics_nat.pred p)))))))
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_exp.exp
                                     a
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.pred p))
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)))
                                  (matita_arithmetics_bigops.bigop
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.pred p))
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_basics_bool.true)
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s cic.z))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                     matita_arithmetics_nat.times
                                     (i:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_arithmetics_nat.plus
                                        i
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))))
                               (matita_arithmetics_sigma_pi.exp_pi_bc
                                  a
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                  (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                                  (__:(cic.Term
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat) =>
                                   __)))
                            (matita_arithmetics_nat.pred p)
                            (matita_basics_logic.rewrite_r
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_nat.pred p)
                                  matita_arithmetics_nat.O)
                               (cic.cast
                                  (cic.type cic.z)
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     (cic.type cic.z)
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      cic.univ cic.prop (cic.type cic.z) cic.I))
                                  (cic.prod
                                     (cic.type cic.z)
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I
                                     matita_arithmetics_nat.nat
                                     (__:(cic.Term
                                            (cic.type cic.z)
                                            matita_arithmetics_nat.nat) =>
                                      cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I))
                                  cic.I
                                  (x:(cic.Term
                                        (cic.type cic.z)
                                        matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.pred p)
                                     x))
                               (matita_basics_logic.rewrite_l
                                  (cic.cast
                                     (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.univ
                                        (cic.type cic.z)
                                        (cic.type (cic.s cic.z))
                                        cic.I)
                                     (cic.univ
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I)
                                     cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.pred p)
                                  (cic.cast
                                     (cic.type cic.z)
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.prod
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        (cic.type cic.z)
                                        cic.I
                                        matita_arithmetics_nat.nat
                                        (x:(cic.Term
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat) =>
                                         cic.univ cic.prop (cic.type cic.z) cic.I))
                                     (cic.prod
                                        (cic.type cic.z)
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        cic.I
                                        matita_arithmetics_nat.nat
                                        (__:(cic.Term
                                               (cic.type cic.z)
                                               matita_arithmetics_nat.nat) =>
                                         cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I))
                                     cic.I
                                     (x:(cic.Term
                                           (cic.type cic.z)
                                           matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (cic.cast
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           (cic.univ
                                              (cic.type cic.z)
                                              (cic.type (cic.s cic.z))
                                              cic.I)
                                           (cic.univ
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s (cic.s cic.z))))
                                              cic.I)
                                           cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.pred p)
                                        x))
                                  (matita_basics_logic.refl
                                     (cic.cast
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s (cic.s (cic.s cic.z))))
                                        (cic.univ
                                           (cic.type cic.z)
                                           (cic.type (cic.s cic.z))
                                           cic.I)
                                        (cic.univ
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s (cic.s cic.z))))
                                           cic.I)
                                        cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.pred p))
                                  (matita_arithmetics_nat.minus
                                     (matita_arithmetics_nat.pred p)
                                     matita_arithmetics_nat.O)
                                  (matita_arithmetics_nat.minus_n_O
                                     (matita_arithmetics_nat.pred p)))
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                               (matita_arithmetics_nat.minus_S_S
                                  (matita_arithmetics_nat.pred p)
                                  matita_arithmetics_nat.O)))
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_bigops.bigop
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                               (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                matita_basics_bool.true)
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                               matita_arithmetics_nat.times
                               (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                matita_arithmetics_nat.plus
                                  i
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                            (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p)))
                         (matita_arithmetics_nat.commutative_times
                            (matita_arithmetics_bigops.bigop
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_nat.S (matita_arithmetics_nat.pred p))
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                               (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                matita_basics_bool.true)
                               (cic.cast
                                  (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z))
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                                  cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                               matita_arithmetics_nat.times
                               (i:(cic.Term (cic.type cic.z) matita_arithmetics_nat.nat) =>
                                matita_arithmetics_nat.plus
                                  i
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                            (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))))
                      (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))
                      (matita_arithmetics_fermat_little_theorem.eq_fact_pi_p
                         (matita_arithmetics_nat.pred p)))
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   (matita_arithmetics_nat.times_n_1
                      (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))))
                (matita_arithmetics_nat.times
                   (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))
                   (matita_arithmetics_nat.minus
                      (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                (matita_arithmetics_nat.distributive_times_minus
                   (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p))
                   (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
             (matita_arithmetics_nat.times
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p)))
             (matita_arithmetics_nat.commutative_times
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_exp.exp a (matita_arithmetics_nat.pred p))
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                (matita_arithmetics_factorial.fact (matita_arithmetics_nat.pred p)))))).

